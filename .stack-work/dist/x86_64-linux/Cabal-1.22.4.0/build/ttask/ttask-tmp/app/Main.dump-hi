
==================== FINAL INTERFACE ====================
2016-05-03 07:58:56.758707 UTC

interface main@main:Main 7102
  interface hash: 405203c6815163618191c578f1733cbf
  ABI hash: 6fd96d19bc513b7d42c4ce4cf2e19e9e
  export-list hash: 9d5b5654b784daacdd7706a680f36ca3
  orphan hash: ec3e2450bb65330d1514737fbcd03244
  flag hash: eb07a075c83e398339806b4633da1ba2
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.cmdActive
  Main.cmdAdd
  Main.cmdAddProject
  Main.cmdAddSprint
  Main.cmdAddStory
  Main.cmdAddTask
  Main.cmdDelete
  Main.cmdDeleteSprint
  Main.cmdDeleteStory
  Main.cmdDeleteTask
  Main.cmdFinish
  Main.cmdMove
  Main.cmdMoveStory
  Main.cmdMoveTask
  Main.cmdNotAchieved
  Main.cmdProject
  Main.cmdReject
  Main.cmdRun
  Main.cmdShowPbl
  Main.cmdShowSprints
  Main.cmdShowStorys
  Main.cmdSwap
  Main.cmdSwapSprint
  Main.cmdSwapStory
  Main.cmdSwapTask
  Main.cmdUpdStatusSprint
  Main.cmdUpdStatusStory
  Main.cmdUpdStatusTask
  Main.cmdWait
  Main.execToActiveProject
  Main.listupAllProjects
  Main.main
  Main.modifyActivePjSimple
  Main.modifyActiveProject
  Main.showContnt
module dependencies:
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0 deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o
                      directory-1.2.2.0@direc_KowvXytSqazBcvN7MGpFtg
                      extra-1.4.2@extra_5OxQCVeoy8KDx9eBZEd38j
                      filepath-1.4.0.0@filep_KsGE6pHE5eZHSN90ZVax6A ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mtl-2.2.1@mtl_KMpng31YRYc5JfMWFZ3FCU
                      optparse-declarative-0.3.0@optpa_8caaNdYxcxD8EMYaC9gsPK
                      safe-0.3.9@safe_BXSoeRP9IFG6t9s3abNgVi
                      time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr
                      unix-2.7.1.0@unix_A3WgcI5QiHK4PDo4jSYdwQ
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Format.Parse
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Generics
                         base-4.8.1.0:GHC.TypeLits
                         optparse-declarative-0.3.0@optpa_8caaNdYxcxD8EMYaC9gsPK:Options.Declarative
import  -/  base-4.8.1.0:Control.Monad dfea142d91349c4861427789d50d5b80
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  optparse-declarative-0.3.0@optpa_8caaNdYxcxD8EMYaC9gsPK:Options.Declarative 2dcbc9d38b15f9e720c35955c43ccbaf
import  -/  time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time 32980eeddfe26f4d4e29d9341bdd87d9
import  -/  time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.LocalTime.LocalTime 303d3e241c140233efb7305f97e88089
import  -/  transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.IO.Class 9605d683dd45bfe8c9f8bdf894951b7c
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask 3e7cd83c2ff097f6c3bf5b3e91e666e3
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask.Command.Add 00b9832e3d9577463ef367f1b1bfc67f
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask.Command.Delete c4bfeee69c3fc4e9d39a685e8bdbb3e9
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask.Command.Move 9b93b310c0ed78678af0f9e0616088f5
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask.Command.Update a183d18f0c6fc51cad079d2d7207f7cc
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask.File b8c93530de9eb6a16e42c01ab6a000dd
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask.Pretty 0dd4ac05e5586b821e862e1719bb8c03
import  -/  ttask-0.0.0.1@ttask_72zq9oHyfMzKhn7BjotlNr:Data.TTask.Types 53600b9547fce3e645332f8159673fe4
b289e99a68198b95589ca0562b05adea
  $s$fArgReadDef ::
    Options.Declarative.ArgRead
      (Options.Declarative.Def "" [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Def "" [GHC.Types.Char])
                  (Options.Declarative.$fArgReadDef_$cunwrap
                     @ ""
                     @ [GHC.Types.Char]
                     (GHC.Types.[] @ GHC.Types.Char)
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"">_P))
                          (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"">_N))
                     Options.Declarative.$fArgRead[])
                  Main.$s$fArgReadDef2
                  Main.$s$fArgReadDef1 -}
ac5c9e5b967351e51ff433f1905e2f55
  $s$fArgReadDef1 ::
    Data.Proxy.Proxy (Options.Declarative.Def "" [GHC.Types.Char])
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Data.Proxy.Proxy
                           (Options.Declarative.Def "" [GHC.Types.Char]) ->
                 GHC.Types.True) -}
77af61ec9a5b5f9d948ddd5127cd0504
  $s$fArgReadDef2 ::
    GHC.Base.Maybe GHC.Base.String
    -> GHC.Base.Maybe (Options.Declarative.Def "" [GHC.Types.Char])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Base.Maybe GHC.Base.String ->
                 GHC.Base.Just
                   @ (Options.Declarative.Def "" [GHC.Types.Char])
                   (case s of wild {
                      GHC.Base.Nothing
                      -> (GHC.Types.[] @ GHC.Types.Char)
                           `cast`
                         (Sym (Options.Declarative.NTCo:Def[0] <"">_P <[GHC.Types.Char]>_R))
                      GHC.Base.Just v
                      -> v `cast`
                         (Sym (Options.Declarative.NTCo:Def[0]
                                   <"">_P <[GHC.Types.Char]>_R)) })) -}
c07719b49b64013f55b9c5132fd33551
  $s$fArgReadDef3 ::
    Options.Declarative.ArgRead
      (Options.Declarative.Def "-1" GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Def "-1" GHC.Types.Int)
                  (Options.Declarative.$fArgReadDef_$cunwrap
                     @ "-1"
                     @ GHC.Types.Int
                     Main.$s$fArgReadDef7
                     Options.Declarative.$fArgReadInt)
                  Main.$s$fArgReadDef5
                  Main.$s$fArgReadDef4 -}
8de5f33b77d89a62a309bdd7178b917b
  $s$fArgReadDef4 ::
    Data.Proxy.Proxy (Options.Declarative.Def "-1" GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Data.Proxy.Proxy
                           (Options.Declarative.Def "-1" GHC.Types.Int) ->
                 GHC.Types.True) -}
4be60d11ba6bb622e978c7161eae94f4
  $s$fArgReadDef5 ::
    GHC.Base.Maybe GHC.Base.String
    -> GHC.Base.Maybe (Options.Declarative.Def "-1" GHC.Types.Int)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ s :: GHC.Base.Maybe GHC.Base.String ->
                 case Text.Read.readEither6
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Options.Declarative.$fArgReadInt1
                           (case s of wild {
                              GHC.Base.Nothing -> Main.$s$fArgReadDef6
                              GHC.Base.Just v -> v })) of wild1 {
                   []
                   -> GHC.Base.Nothing @ (Options.Declarative.Def "-1" GHC.Types.Int)
                   : x1 ds
                   -> case ds of wild2 {
                        []
                        -> GHC.Base.Just
                             @ (Options.Declarative.Def "-1" GHC.Types.Int)
                             x1
                               `cast`
                             (Sym (Options.Declarative.NTCo:Def[0] <"-1">_P <GHC.Types.Int>_R))
                        : ipv ipv1
                        -> GHC.Base.Nothing
                             @ (Options.Declarative.Def "-1" GHC.Types.Int) } }) -}
b9cb0c4a7b9be53f48c383803087380f
  $s$fArgReadDef6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-1"#) -}
d757564492d3b7fda4d1739f54a2291e
  $s$fArgReadDef7 :: GHC.TypeLits.KnownSymbol "-1"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fArgReadDef6
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"-1">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"-1">_N)) -}
3c59ad56657459d8ce1f3caf587d6ce7
  $s$fIsCmd(->)0 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
       -> Options.Declarative.Cmd "Add sprint to active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                     -> Options.Declarative.Cmd "Add sprint to active project" ())
                  Main.$s$fIsCmd(->)8
                  Main.$s$fIsCmd(->)7
                  (Options.Declarative.$fIsCmd(->)0_$cgetUsageHeader
                     @ "DESCRIPTION"
                     @ (Options.Declarative.Cmd "Add sprint to active project" ())
                     Main.$s$fIsCmd(->)5
                     Main.$s$fIsCmd(->)0_$dIsCmd)
                  Main.$s$fIsCmd(->)1
                  (Options.Declarative.$fIsCmd(->)0_$crunCmd
                     @ "DESCRIPTION"
                     @ (Options.Declarative.Cmd "Add sprint to active project" ())
                     Main.$s$fIsCmd(->)5
                     Main.$s$fIsCmd(->)0_$dIsCmd) -}
1345cc89c38baa9b7d69dd857f001265
  $s$fIsCmd(->)0_$dIsCmd ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Add sprint to active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmdCmd -}
fd1a3bfe52e72487040b28c4a789560e
  $s$fIsCmd(->)0_$dIsCmd1 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "n"
         '["Name"]
         "Project name"
         "New projects explanatory name"
         GHC.Base.String
       -> Options.Declarative.Cmd "Add new project and switch to it" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1 -}
7b66e4730dfd6432db627c348823340c
  $s$fIsCmd(->)0_$dIsCmd2 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Add new project and switch to it" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmdCmd1 -}
8251f522765d2a988fe4d7861f24f9e0
  $s$fIsCmd(->)0_$dIsCmd3 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Flag
            "p"
            '["POINT"]
            "Estimated work point"
            "Estimated work point like 1, 2, 3, 5, 8 ..."
            GHC.Types.Int
       -> Options.Declarative.Cmd "Add task to active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmd(->)2 -}
462c4a47c1895d8fc3ede101716ed116
  $s$fIsCmd(->)0_$dIsCmd4 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "p"
         '["POINT"]
         "Estimated work point"
         "Estimated work point like 1, 2, 3, 5, 8 ..."
         GHC.Types.Int
       -> Options.Declarative.Cmd "Add task to active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmd(->)3 -}
667a4fb2c5203451ee6052b8034203d6
  $s$fIsCmd(->)0_$dIsCmd5 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Add task to active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmdCmd2 -}
3b0a9e0c27351f00b38e1c58f09b5bc0
  $s$fIsCmd(->)0_$dIsCmd6 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i"
         '["ID"]
         "Sprint id"
         "Target Sprint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
       -> Options.Declarative.Cmd
            "Add story to product backlog, Or designated sprint." ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmd(->)4 -}
a2bff333fde4b28d498904c149230a17
  $s$fIsCmd(->)0_$dIsCmd7 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "Add story to product backlog, Or designated sprint." ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)0_$s$fIsCmdCmd3 -}
6f500f1599548bff1d3a89e2517f8952
  $s$fIsCmd(->)0_$dKnownSymbol ::
    GHC.TypeLits.KnownSymbol "Add sprint to active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)4
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Add sprint to active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Add sprint to active project">_N)) -}
d314c4eb195ff372f5bb12ffd6a6fba0
  $s$fIsCmd(->)0_$dKnownSymbol1 ::
    GHC.TypeLits.KnownSymbol "Add new project and switch to it"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)13
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Add new project and switch to it">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Add new project and switch to it">_N)) -}
f879d9a36126872f461436431df11ef2
  $s$fIsCmd(->)0_$dKnownSymbol2 ::
    GHC.TypeLits.KnownSymbol "New projects explanatory name"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)14
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"New projects explanatory name">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"New projects explanatory name">_N)) -}
811a290ec79bdee4ed14873dac24aa0b
  $s$fIsCmd(->)0_$dKnownSymbol3 ::
    GHC.TypeLits.KnownSymbol "Project name"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)15
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Project name">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Project name">_N)) -}
6d36c4c4f3e9b5c9c0f1933731d08b90
  $s$fIsCmd(->)0_$dKnownSymbol4 :: GHC.TypeLits.KnownSymbol "n"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)18
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"n">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"n">_N)) -}
53a260b34f0da85e68fc1a3719a9feba
  $s$fIsCmd(->)0_$dKnownSymbol5 ::
    GHC.TypeLits.KnownSymbol "Add task to active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)27
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Add task to active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Add task to active project">_N)) -}
8113748ff5948a764c85ca725ab2d3b1
  $s$fIsCmd(->)0_$dKnownSymbol6 ::
    GHC.TypeLits.KnownSymbol
      "Estimated work point like 1, 2, 3, 5, 8 ..."
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)28
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Estimated work point like 1, 2, 3, 5, 8 ...">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Estimated work point like 1, 2, 3, 5, 8 ...">_N)) -}
365d4af9f6ae9af6b00f2a44b879db39
  $s$fIsCmd(->)0_$dKnownSymbol7 ::
    GHC.TypeLits.KnownSymbol "Estimated work point"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)29
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Estimated work point">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Estimated work point">_N)) -}
73b19e9fa41dd386b1e9ecdca3f624d9
  $s$fIsCmd(->)0_$dKnownSymbol8 :: GHC.TypeLits.KnownSymbol "p"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)32
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"p">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"p">_N)) -}
634c02c890dc9b4b6a4a2313e461b89b
  $s$fIsCmd(->)0_$dKnownSymbol9 ::
    GHC.TypeLits.KnownSymbol
      "Add story to product backlog, Or designated sprint."
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)46
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Add story to product backlog, Or designated sprint.">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Add story to product backlog, Or designated sprint.">_N)) -}
ddb1c38e9b0f184474a28855edb7537b
  $s$fIsCmd(->)0_$dKnownSymbols ::
    Options.Declarative.KnownSymbols '["Name"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)16
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0] <'["Name"]>_N)) -}
044a1fb7490d10cd6df5fb64e8b342f8
  $s$fIsCmd(->)0_$dKnownSymbols1 ::
    Options.Declarative.KnownSymbols '["POINT"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)30
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0] <'["POINT"]>_N)) -}
b9de0b11d32d911888054bf84798589d
  $s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetCmdHelp ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Flag
          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "p"
          '["POINT"]
          "Estimated work point"
          "Estimated work point like 1, 2, 3, 5, 8 ..."
          GHC.Types.Int
     -> Options.Declarative.Cmd "Add task to active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Flag
                             "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "p"
                             '["POINT"]
                             "Estimated work point"
                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                             GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" () ->
                 Main.$s$fIsCmd(->)41
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String)))) -}
a9965e536d48e07919bae74d148614d6
  $s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetCmdHelp1 ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Flag
          "i"
          '["ID"]
          "Sprint id"
          "Target Sprint Id"
          (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd
          "Add story to product backlog, Or designated sprint." ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Flag
                             "i"
                             '["ID"]
                             "Sprint id"
                             "Target Sprint Id"
                             (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd
                             "Add story to product backlog, Or designated sprint." () ->
                 Main.$s$fIsCmd(->)52
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String)))) -}
3303c00a1badee67da811e36c4a4f629
  $s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetOptDescr ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Flag
          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "p"
          '["POINT"]
          "Estimated work point"
          "Estimated work point like 1, 2, 3, 5, 8 ..."
          GHC.Types.Int
     -> Options.Declarative.Cmd "Add task to active project" ())
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Flag
                             "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "p"
                             '["POINT"]
                             "Estimated work point"
                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                             GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" () ->
                 Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                   @ "i"
                   @ '["ID"]
                   @ "Story id"
                   @ "Target Story Id"
                   @ GHC.Types.Int
                   @ (Options.Declarative.Flag
                        "p"
                        '["POINT"]
                        "Estimated work point"
                        "Estimated work point like 1, 2, 3, 5, 8 ..."
                        GHC.Types.Int
                      -> Options.Declarative.Cmd "Add task to active project" ())
                   Main.$s$fIsCmd(->)39
                   Main.$s$fIsCmd(->)37
                   Main.$s$fIsCmd(->)35
                   Main.$s$fIsCmd(->)33
                   Options.Declarative.$fArgReadInt
                   Main.$s$fIsCmd(->)0_$dIsCmd4
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String)))) -}
667cf8d40c134313c4e433d9f2f7e993
  $s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetOptDescr1 ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Flag
          "i"
          '["ID"]
          "Sprint id"
          "Target Sprint Id"
          (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd
          "Add story to product backlog, Or designated sprint." ())
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Flag
                             "i"
                             '["ID"]
                             "Sprint id"
                             "Target Sprint Id"
                             (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd
                             "Add story to product backlog, Or designated sprint." () ->
                 Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                   @ "i"
                   @ '["ID"]
                   @ "Sprint id"
                   @ "Target Sprint Id"
                   @ (Options.Declarative.Def "-1" GHC.Types.Int)
                   @ (Options.Declarative.Cmd
                        "Add story to product backlog, Or designated sprint." ())
                   Main.$s$fIsCmd(->)39
                   Main.$s$fIsCmd(->)37
                   Main.$s$fIsCmd(->)50
                   Main.$s$fIsCmd(->)48
                   Main.$s$fIsCmd(->)47
                   Main.$s$fIsCmd(->)0_$dIsCmd7
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String)))) -}
39df42c2e07fd5ff8d086d9958f198fb
  $s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetUsageFooter ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Flag
          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "p"
          '["POINT"]
          "Estimated work point"
          "Estimated work point like 1, 2, 3, 5, 8 ..."
          GHC.Types.Int
     -> Options.Declarative.Cmd "Add task to active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Flag
                             "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "p"
                             '["POINT"]
                             "Estimated work point"
                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                             GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" () ->
                 Main.$s$fIsCmd(->)24
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String)))) -}
df6f93c53e10eb7ab57872c87ec64dc1
  $s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetUsageFooter1 ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Flag
          "i"
          '["ID"]
          "Sprint id"
          "Target Sprint Id"
          (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd
          "Add story to product backlog, Or designated sprint." ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Flag
                             "i"
                             '["ID"]
                             "Sprint id"
                             "Target Sprint Id"
                             (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd
                             "Add story to product backlog, Or designated sprint." () ->
                 Main.$s$fIsCmd(->)43
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String)))) -}
0aacd994d13a6400592c325bd829df78
  $s$fIsCmd(->)0_$s$fIsCmd(->)1 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "n"
         '["Name"]
         "Project name"
         "New projects explanatory name"
         [GHC.Types.Char]
       -> Options.Declarative.Cmd "Add new project and switch to it" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "n"
                       '["Name"]
                       "Project name"
                       "New projects explanatory name"
                       [GHC.Types.Char]
                     -> Options.Declarative.Cmd "Add new project and switch to it" ())
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetCmdHelp
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "n"
                     @ '["Name"]
                     @ "Project name"
                     @ "New projects explanatory name"
                     @ [GHC.Types.Char]
                     @ (Options.Declarative.Cmd "Add new project and switch to it" ())
                     Main.$s$fIsCmd(->)0_$dKnownSymbol4
                     Main.$s$fIsCmd(->)0_$dKnownSymbols
                     Main.$s$fIsCmd(->)0_$dKnownSymbol3
                     Main.$s$fIsCmd(->)0_$dKnownSymbol2
                     Options.Declarative.$fArgRead[]
                     Main.$s$fIsCmd(->)0_$dIsCmd2)
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "n"
                     @ '["Name"]
                     @ "Project name"
                     @ "New projects explanatory name"
                     @ [GHC.Types.Char]
                     @ (Options.Declarative.Cmd "Add new project and switch to it" ())
                     Main.$s$fIsCmd(->)0_$dKnownSymbol4
                     Main.$s$fIsCmd(->)0_$dKnownSymbols
                     Main.$s$fIsCmd(->)0_$dKnownSymbol3
                     Main.$s$fIsCmd(->)0_$dKnownSymbol2
                     Options.Declarative.$fArgRead[]
                     Main.$s$fIsCmd(->)0_$dIsCmd2) -}
9ce328e4db603333f0c970b4cfa0c7df
  $s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetCmdHelp ::
    (Options.Declarative.Flag
       "n"
       '["Name"]
       "Project name"
       "New projects explanatory name"
       [GHC.Types.Char]
     -> Options.Declarative.Cmd "Add new project and switch to it" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "n"
                          '["Name"]
                          "Project name"
                          "New projects explanatory name"
                          [GHC.Types.Char]
                        -> Options.Declarative.Cmd "Add new project and switch to it" () ->
                 Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                   @ "Add new project and switch to it"
                   Main.$s$fIsCmd(->)0_$dKnownSymbol1
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "n"
                              '["Name"]
                              "Project name"
                              "New projects explanatory name"
                              [GHC.Types.Char])))) -}
3e16a2c48e973cd64e51fad7a7c850b9
  $s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetCmdHelp1 ::
    (Options.Declarative.Flag
       "p"
       '["POINT"]
       "Estimated work point"
       "Estimated work point like 1, 2, 3, 5, 8 ..."
       GHC.Types.Int
     -> Options.Declarative.Cmd "Add task to active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "p"
                          '["POINT"]
                          "Estimated work point"
                          "Estimated work point like 1, 2, 3, 5, 8 ..."
                          GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" () ->
                 Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                   @ "Add task to active project"
                   Main.$s$fIsCmd(->)0_$dKnownSymbol5
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "p"
                              '["POINT"]
                              "Estimated work point"
                              "Estimated work point like 1, 2, 3, 5, 8 ..."
                              GHC.Types.Int)))) -}
c5892160ed8a6b45ffac6b3b21bfd591
  $s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter ::
    (Options.Declarative.Flag
       "n"
       '["Name"]
       "Project name"
       "New projects explanatory name"
       [GHC.Types.Char]
     -> Options.Declarative.Cmd "Add new project and switch to it" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "n"
                          '["Name"]
                          "Project name"
                          "New projects explanatory name"
                          [GHC.Types.Char]
                        -> Options.Declarative.Cmd "Add new project and switch to it" () ->
                 Main.$s$fIsCmd(->)11
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "n"
                              '["Name"]
                              "Project name"
                              "New projects explanatory name"
                              [GHC.Types.Char])))) -}
4b256d19af72fff8356c9962d6d506d5
  $s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter1 ::
    (Options.Declarative.Flag
       "p"
       '["POINT"]
       "Estimated work point"
       "Estimated work point like 1, 2, 3, 5, 8 ..."
       GHC.Types.Int
     -> Options.Declarative.Cmd "Add task to active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "p"
                          '["POINT"]
                          "Estimated work point"
                          "Estimated work point like 1, 2, 3, 5, 8 ..."
                          GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" () ->
                 Main.$s$fIsCmd(->)25
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "p"
                              '["POINT"]
                              "Estimated work point"
                              "Estimated work point like 1, 2, 3, 5, 8 ..."
                              GHC.Types.Int)))) -}
7576d29fcef05b27859e89d229ac69f9
  $s$fIsCmd(->)0_$s$fIsCmd(->)2 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Flag
            "p"
            '["POINT"]
            "Estimated work point"
            "Estimated work point like 1, 2, 3, 5, 8 ..."
            GHC.Types.Int
       -> Options.Declarative.Cmd "Add task to active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                     -> Options.Declarative.Flag
                          "p"
                          '["POINT"]
                          "Estimated work point"
                          "Estimated work point like 1, 2, 3, 5, 8 ..."
                          GHC.Types.Int
                     -> Options.Declarative.Cmd "Add task to active project" ())
                  Main.$s$fIsCmd(->)41
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "p"
                          '["POINT"]
                          "Estimated work point"
                          "Estimated work point like 1, 2, 3, 5, 8 ..."
                          GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)0_$dIsCmd4)
                  Main.$s$fIsCmd(->)24
                  Main.$s$fIsCmd(->)24
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "p"
                          '["POINT"]
                          "Estimated work point"
                          "Estimated work point like 1, 2, 3, 5, 8 ..."
                          GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)0_$dIsCmd4) -}
90cd5fcbe1a7b73f5997a57bf1906381
  $s$fIsCmd(->)0_$s$fIsCmd(->)3 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "p"
         '["POINT"]
         "Estimated work point"
         "Estimated work point like 1, 2, 3, 5, 8 ..."
         GHC.Types.Int
       -> Options.Declarative.Cmd "Add task to active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "p"
                       '["POINT"]
                       "Estimated work point"
                       "Estimated work point like 1, 2, 3, 5, 8 ..."
                       GHC.Types.Int
                     -> Options.Declarative.Cmd "Add task to active project" ())
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetCmdHelp1
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "p"
                     @ '["POINT"]
                     @ "Estimated work point"
                     @ "Estimated work point like 1, 2, 3, 5, 8 ..."
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Add task to active project" ())
                     Main.$s$fIsCmd(->)0_$dKnownSymbol8
                     Main.$s$fIsCmd(->)0_$dKnownSymbols1
                     Main.$s$fIsCmd(->)0_$dKnownSymbol7
                     Main.$s$fIsCmd(->)0_$dKnownSymbol6
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)0_$dIsCmd5)
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter1
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter1
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "p"
                     @ '["POINT"]
                     @ "Estimated work point"
                     @ "Estimated work point like 1, 2, 3, 5, 8 ..."
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Add task to active project" ())
                     Main.$s$fIsCmd(->)0_$dKnownSymbol8
                     Main.$s$fIsCmd(->)0_$dKnownSymbols1
                     Main.$s$fIsCmd(->)0_$dKnownSymbol7
                     Main.$s$fIsCmd(->)0_$dKnownSymbol6
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)0_$dIsCmd5) -}
5960983686c37d805a19d8ed22502ede
  $s$fIsCmd(->)0_$s$fIsCmd(->)4 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i"
         '["ID"]
         "Sprint id"
         "Target Sprint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
       -> Options.Declarative.Cmd
            "Add story to product backlog, Or designated sprint." ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i"
                       '["ID"]
                       "Sprint id"
                       "Target Sprint Id"
                       (Options.Declarative.Def "-1" GHC.Types.Int)
                     -> Options.Declarative.Cmd
                          "Add story to product backlog, Or designated sprint." ())
                  Main.$s$fIsCmd(->)52
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ (Options.Declarative.Def "-1" GHC.Types.Int)
                     @ (Options.Declarative.Cmd
                          "Add story to product backlog, Or designated sprint." ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Main.$s$fIsCmd(->)47
                     Main.$s$fIsCmd(->)0_$dIsCmd7)
                  Main.$s$fIsCmd(->)43
                  Main.$s$fIsCmd(->)43
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ (Options.Declarative.Def "-1" GHC.Types.Int)
                     @ (Options.Declarative.Cmd
                          "Add story to product backlog, Or designated sprint." ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Main.$s$fIsCmd(->)47
                     Main.$s$fIsCmd(->)0_$dIsCmd7) -}
61f8ebc531896bf96b4142a1fedd8e20
  $s$fIsCmd(->)0_$s$fIsCmdCmd ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Add sprint to active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Add sprint to active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Add sprint to active project"
                     Main.$s$fIsCmd(->)0_$dKnownSymbol)
                  Main.$s$fIsCmd(->)3
                  Main.$s$fIsCmd(->)2
                  Main.$s$fIsCmd(->)2
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Add sprint to active project"
                     Main.$s$fIsCmd(->)0_$dKnownSymbol) -}
448adae4919196a77a335b1749fe686c
  $s$fIsCmd(->)0_$s$fIsCmdCmd1 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Add new project and switch to it" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Add new project and switch to it" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Add new project and switch to it"
                     Main.$s$fIsCmd(->)0_$dKnownSymbol1)
                  Main.$s$fIsCmd(->)12
                  Main.$s$fIsCmd(->)11
                  Main.$s$fIsCmd(->)11
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Add new project and switch to it"
                     Main.$s$fIsCmd(->)0_$dKnownSymbol1) -}
a1e48a7c69c69241c3dfa4f88145b01c
  $s$fIsCmd(->)0_$s$fIsCmdCmd2 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Add task to active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Add task to active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Add task to active project"
                     Main.$s$fIsCmd(->)0_$dKnownSymbol5)
                  Main.$s$fIsCmd(->)26
                  Main.$s$fIsCmd(->)25
                  Main.$s$fIsCmd(->)25
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Add task to active project"
                     Main.$s$fIsCmd(->)0_$dKnownSymbol5) -}
ffda538f0ea18708ea7873579bf4965d
  $s$fIsCmd(->)0_$s$fIsCmdCmd3 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "Add story to product backlog, Or designated sprint." ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd
                       "Add story to product backlog, Or designated sprint." ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Add story to product backlog, Or designated sprint."
                     Main.$s$fIsCmd(->)0_$dKnownSymbol9)
                  Main.$s$fIsCmd(->)45
                  Main.$s$fIsCmd(->)44
                  Main.$s$fIsCmd(->)44
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Add story to product backlog, Or designated sprint."
                     Main.$s$fIsCmd(->)0_$dKnownSymbol9) -}
b1ca92330d3ff3a6bb549d14134c9e78
  $s$fIsCmd(->)1 ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Cmd "Add sprint to active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Cmd "Add sprint to active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
4337a72ad416e66f4578937b7f65b40e
  $s$fIsCmd(->)10 ::
    (Options.Declarative.Arg "ID" GHC.Base.String
     -> Options.Declarative.Flag
          "n"
          '["Name"]
          "Project name"
          "New projects explanatory name"
          GHC.Base.String
     -> Options.Declarative.Cmd "Add new project and switch to it" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Arg "ID" GHC.Base.String
                        -> Options.Declarative.Flag
                             "n"
                             '["Name"]
                             "Project name"
                             "New projects explanatory name"
                             GHC.Base.String
                        -> Options.Declarative.Cmd "Add new project and switch to it" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
992c4c992131fd4dc4cdffaaf246704f
  $s$fIsCmd(->)100 ::
    (Options.Declarative.Flag
       "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap task of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap task of active project" () ->
                 Main.$s$fIsCmd(->)98) -}
133782c6b7d33f785d52364371aa3ef2
  $s$fIsCmd(->)101 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "f"
         '["ID-FROM"]
         "Task id From"
         "Target Story Id : From"
         GHC.Types.Int
       -> Options.Declarative.Flag
            "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap task of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "f"
                       '["ID-FROM"]
                       "Task id From"
                       "Target Story Id : From"
                       GHC.Types.Int
                     -> Options.Declarative.Flag
                          "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                     -> Options.Declarative.Cmd "Swap task of active project" ())
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp3
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "f"
                     @ '["ID-FROM"]
                     @ "Task id From"
                     @ "Target Story Id : From"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap task of active project" ())
                     Main.$s$fIsCmd(->)83
                     Main.$s$fIsCmd(->)80
                     Main.$s$fIsCmd(->)1_$dKnownSymbol13
                     Main.$s$fIsCmd(->)77
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd6)
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter3
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter3
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "f"
                     @ '["ID-FROM"]
                     @ "Task id From"
                     @ "Target Story Id : From"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap task of active project" ())
                     Main.$s$fIsCmd(->)83
                     Main.$s$fIsCmd(->)80
                     Main.$s$fIsCmd(->)1_$dKnownSymbol13
                     Main.$s$fIsCmd(->)77
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd6) -}
4425db14b47b7fa9d4c8b999837d7d36
  $s$fIsCmd(->)102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Task id From"#) -}
ed2865a2b5e87686361b1dd67611d43c
  $s$fIsCmd(->)103 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Move story of active project" ())
                  Main.$s$fIsCmd(->)113
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "t"
                     @ '["STORY-ID"]
                     @ "Story id"
                     @ "Destination Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)1_$dKnownSymbols1
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)1_$dKnownSymbol14
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)105)
                  Main.$s$fIsCmd(->)104
                  Main.$s$fIsCmd(->)104
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "t"
                     @ '["STORY-ID"]
                     @ "Story id"
                     @ "Destination Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)1_$dKnownSymbols1
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)1_$dKnownSymbol14
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)105) -}
ae830d1af00fdbc23e9835b70b8539af
  $s$fIsCmd(->)104 ::
    (Options.Declarative.Flag
       "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Move story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
68f59f93bfdaa196ef68514b5aeb4eea
  $s$fIsCmd(->)105 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd4 -}
63750e56f187c9cc113dfee4d46eda94
  $s$fIsCmd(->)106 ::
    Options.Declarative.Cmd "Move story of active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "Move story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
936d5d3ad20f04a50ce720275273a1df
  $s$fIsCmd(->)107 ::
    Options.Declarative.Cmd "Move story of active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Move story of active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
2c1a66cbdb72b07770201e86cf98a62d
  $s$fIsCmd(->)108 ::
    GHC.TypeLits.KnownSymbol "Move story of active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)109
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Move story of active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Move story of active project">_N)) -}
c3c4f144089b92e2ffdf1a123258edee
  $s$fIsCmd(->)109 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Move story of active project"#) -}
3297d39f248392b91365506d574f0293
  $s$fIsCmd(->)11 ::
    Options.Declarative.Cmd "Add new project and switch to it" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Add new project and switch to it" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
06eea99021e614e01c303609d713af07
  $s$fIsCmd(->)110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Destination Story Id"#) -}
c8eaa8388a1883f0063f82de3dda0a2b
  $s$fIsCmd(->)111 ::
    Data.Proxy.Proxy '["STORY-ID"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["STORY-ID"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)112
                   (GHC.Types.[] @ GHC.Base.String)) -}
0230f40ae95bf5e6bde88c12da119402
  $s$fIsCmd(->)112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "STORY-ID"#) -}
c8d79c03f11e2305360c4b0e380f28b1
  $s$fIsCmd(->)113 ::
    (Options.Declarative.Flag
       "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Move story of active project" () ->
                 Main.$s$fIsCmd(->)109) -}
e604f0d933be1db70c5b67df4d389d36
  $s$fIsCmd(->)114 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i"
         '["ID"]
         "Project id"
         "Switch project id"
         (Options.Declarative.Def "" GHC.Base.String)
       -> Options.Declarative.Cmd
            "Switch other project. Or list all projects when project id is abbraviated."
            ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i"
                       '["ID"]
                       "Project id"
                       "Switch project id"
                       (Options.Declarative.Def "" GHC.Base.String)
                     -> Options.Declarative.Cmd
                          "Switch other project. Or list all projects when project id is abbraviated."
                          ())
                  Main.$s$fIsCmd(->)122
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Project id"
                     @ "Switch project id"
                     @ (Options.Declarative.Def "" GHC.Base.String)
                     @ (Options.Declarative.Cmd
                          "Switch other project. Or list all projects when project id is abbraviated."
                          ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)1_$dKnownSymbol17
                     Main.$s$fIsCmd(->)1_$dKnownSymbol16
                     Main.$s$fIsCmd(->)119
                     Main.$s$fIsCmd(->)1_$dIsCmd7)
                  Main.$s$fIsCmd(->)115
                  Main.$s$fIsCmd(->)115
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Project id"
                     @ "Switch project id"
                     @ (Options.Declarative.Def "" GHC.Base.String)
                     @ (Options.Declarative.Cmd
                          "Switch other project. Or list all projects when project id is abbraviated."
                          ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)1_$dKnownSymbol17
                     Main.$s$fIsCmd(->)1_$dKnownSymbol16
                     Main.$s$fIsCmd(->)119
                     Main.$s$fIsCmd(->)1_$dIsCmd7) -}
c582a81c32ab993237b353e593e34283
  $s$fIsCmd(->)115 ::
    (Options.Declarative.Flag
       "i"
       '["ID"]
       "Project id"
       "Switch project id"
       (Options.Declarative.Def "" GHC.Base.String)
     -> Options.Declarative.Cmd
          "Switch other project. Or list all projects when project id is abbraviated."
          ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Project id"
                          "Switch project id"
                          (Options.Declarative.Def "" GHC.Base.String)
                        -> Options.Declarative.Cmd
                             "Switch other project. Or list all projects when project id is abbraviated."
                             ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
5778420fcd29b73920c74466c58603b0
  $s$fIsCmd(->)116 ::
    Options.Declarative.Cmd
      "Switch other project. Or list all projects when project id is abbraviated."
      ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Switch other project. Or list all projects when project id is abbraviated."
                           ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
915e957ac7ae72a34988372475057780
  $s$fIsCmd(->)117 ::
    Options.Declarative.Cmd
      "Switch other project. Or list all projects when project id is abbraviated."
      ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Switch other project. Or list all projects when project id is abbraviated."
                           () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
5155e29f6ccd900063acf7c2e4372d58
  $s$fIsCmd(->)118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Switch other project. Or list all projects when project id is abbraviated."#) -}
a792df8e9f5e7a79f569eed37c885a98
  $s$fIsCmd(->)119 ::
    Options.Declarative.ArgRead
      (Options.Declarative.Def "" GHC.Base.String)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fArgReadDef -}
2a126a23fe31e38b13a0bde8246893c5
  $s$fIsCmd(->)12 ::
    Options.Declarative.Cmd "Add new project and switch to it" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Add new project and switch to it" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
b1c472c12570ca60abcf8395e1944e90
  $s$fIsCmd(->)120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Switch project id"#) -}
c60095e133a056fc03a23a1b1a51ac6e
  $s$fIsCmd(->)121 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Project id"#) -}
08858882f93e1232397e824d8329d23e
  $s$fIsCmd(->)122 ::
    (Options.Declarative.Flag
       "i"
       '["ID"]
       "Project id"
       "Switch project id"
       (Options.Declarative.Def "" GHC.Base.String)
     -> Options.Declarative.Cmd
          "Switch other project. Or list all projects when project id is abbraviated."
          ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Project id"
                          "Switch project id"
                          (Options.Declarative.Def "" GHC.Base.String)
                        -> Options.Declarative.Cmd
                             "Switch other project. Or list all projects when project id is abbraviated."
                             () ->
                 Main.$s$fIsCmd(->)118) -}
03d1d7e342553119c89b1f31fdea0200
  $s$fIsCmd(->)123 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Delete sprint from active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Delete sprint from active project" ())
                  Main.$s$fIsCmd(->)130
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Delete sprint from active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)125)
                  Main.$s$fIsCmd(->)124
                  Main.$s$fIsCmd(->)124
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Delete sprint from active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)125) -}
45566232009ef23c7ad2471b116b3e2c
  $s$fIsCmd(->)124 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Delete sprint from active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Delete sprint from active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
780218769d7a3ca31aa22df7db2b7040
  $s$fIsCmd(->)125 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Delete sprint from active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd6 -}
d23a39c97d828879eed2f4e75638c059
  $s$fIsCmd(->)126 ::
    Options.Declarative.Cmd "Delete sprint from active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Delete sprint from active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
6ea0a200047652d2d5cfb7563d9232d4
  $s$fIsCmd(->)127 ::
    Options.Declarative.Cmd "Delete sprint from active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Delete sprint from active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
2805fba1c99243e85300447019f33a1f
  $s$fIsCmd(->)128 ::
    GHC.TypeLits.KnownSymbol "Delete sprint from active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)129
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Delete sprint from active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Delete sprint from active project">_N)) -}
744cadd928d70f031682ec11e19cc7d6
  $s$fIsCmd(->)129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Delete sprint from active project"#) -}
cdf9f24617c2c0a75295369a75c1a63c
  $s$fIsCmd(->)13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Add new project and switch to it"#) -}
1e1dbece87b6884e907f0205a4dddfd4
  $s$fIsCmd(->)130 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Delete sprint from active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                        -> Options.Declarative.Cmd
                             "Delete sprint from active project" () ->
                 Main.$s$fIsCmd(->)129) -}
d22976b3c584752394f170177c004f1a
  $s$fIsCmd(->)131 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Update sprint of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Update sprint of active project" ())
                  Main.$s$fIsCmd(->)138
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Update sprint of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)133)
                  Main.$s$fIsCmd(->)132
                  Main.$s$fIsCmd(->)132
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Update sprint of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)133) -}
fd559906f27fa0e180bd8ae7d8d8c095
  $s$fIsCmd(->)132 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Update sprint of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Update sprint of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
76a8cbe09f5a9277fd653198aa396cff
  $s$fIsCmd(->)133 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Update sprint of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd7 -}
0de7c46b96c24c79bff60df2f21f1658
  $s$fIsCmd(->)134 ::
    Options.Declarative.Cmd "Update sprint of active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Update sprint of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
8432190a5626299b21f8d257ff3a6aa2
  $s$fIsCmd(->)135 ::
    Options.Declarative.Cmd "Update sprint of active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Update sprint of active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
89d5ccb3a583662b443023f2b599ee25
  $s$fIsCmd(->)136 ::
    GHC.TypeLits.KnownSymbol "Update sprint of active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)137
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Update sprint of active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Update sprint of active project">_N)) -}
c7f7c3e2ce105dc24d032baa2b29bf0b
  $s$fIsCmd(->)137 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update sprint of active project"#) -}
c358ec53630d814f1329a224adb424a0
  $s$fIsCmd(->)138 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Update sprint of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Update sprint of active project" () ->
                 Main.$s$fIsCmd(->)137) -}
ecff561c8c8716d57dbde5599e6b4641
  $s$fIsCmd(->)139 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Flag
            "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                     -> Options.Declarative.Flag
                          "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Move story of active project" ())
                  Main.$s$fIsCmd(->)141
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd8)
                  Main.$s$fIsCmd(->)140
                  Main.$s$fIsCmd(->)140
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd8) -}
f4babe4106df89a99ec6ad1d6d6fa90e
  $s$fIsCmd(->)14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "New projects explanatory name"#) -}
8822bb6bacd662e43c1abec3c1d85c0b
  $s$fIsCmd(->)140 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Move story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
75df356cd22c6d9c8748401138d46880
  $s$fIsCmd(->)141 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Move story of active project" () ->
                 Main.$s$fIsCmd(->)109) -}
d1aaf114d6906e997b89f132340c167c
  $s$fIsCmd(->)142 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Delete sprint from active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Delete sprint from active project" ())
                  Main.$s$fIsCmd(->)144
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Delete sprint from active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)125)
                  Main.$s$fIsCmd(->)143
                  Main.$s$fIsCmd(->)143
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Delete sprint from active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)125) -}
e1fa14443eff83c9e13a308d95faba63
  $s$fIsCmd(->)143 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Delete sprint from active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Delete sprint from active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
ce6a6b9507d1ab9dc1746263608ec96c
  $s$fIsCmd(->)144 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Delete sprint from active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd
                             "Delete sprint from active project" () ->
                 Main.$s$fIsCmd(->)129) -}
a58c61712c9530d17c62af8e1af7a3fe
  $s$fIsCmd(->)145 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Cmd
            "Show target story information and all tasks" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                     -> Options.Declarative.Cmd
                          "Show target story information and all tasks" ())
                  Main.$s$fIsCmd(->)150
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd
                          "Show target story information and all tasks" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd9)
                  Main.$s$fIsCmd(->)146
                  Main.$s$fIsCmd(->)146
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd
                          "Show target story information and all tasks" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd9) -}
f5569eed236fd57a0c09b2a57a2cd6a0
  $s$fIsCmd(->)146 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd
          "Show target story information and all tasks" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd
                             "Show target story information and all tasks" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
062ff67a64da159e4ea5d489c43697d5
  $s$fIsCmd(->)147 ::
    Options.Declarative.Cmd
      "Show target story information and all tasks" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Show target story information and all tasks" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
9ddd98112752bcd2047fed7d9b89839e
  $s$fIsCmd(->)148 ::
    Options.Declarative.Cmd
      "Show target story information and all tasks" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Show target story information and all tasks" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
06d1b2b596ec5cffc645a6bb1c913148
  $s$fIsCmd(->)149 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show target story information and all tasks"#) -}
9de47ed5334ae6cac7f7d854a81b3392
  $s$fIsCmd(->)15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Project name"#) -}
2f29e1ecbc3a630eca13ed74a919337a
  $s$fIsCmd(->)150 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd
          "Show target story information and all tasks" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd
                             "Show target story information and all tasks" () ->
                 Main.$s$fIsCmd(->)149) -}
ce4059310aa8c740d2385c9f25a7e9b3
  $s$fIsCmd(->)151 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Update story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Update story of active project" ())
                  Main.$s$fIsCmd(->)158
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Update story of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)153)
                  Main.$s$fIsCmd(->)152
                  Main.$s$fIsCmd(->)152
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Update story of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)153) -}
3049eb71c8225d53980905a35b60fe4b
  $s$fIsCmd(->)152 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Update story of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Update story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
767ad988fd317720e62ffc1fc65973ba
  $s$fIsCmd(->)153 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Update story of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd9 -}
9f4d0dd5efbebf1fdb473659e77b5699
  $s$fIsCmd(->)154 ::
    Options.Declarative.Cmd "Update story of active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Update story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
7c521dc9a43194efab80cee85a03f2ac
  $s$fIsCmd(->)155 ::
    Options.Declarative.Cmd "Update story of active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Update story of active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
62b78d20e04f4661253baef3a5fbc4cb
  $s$fIsCmd(->)156 ::
    GHC.TypeLits.KnownSymbol "Update story of active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)157
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Update story of active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Update story of active project">_N)) -}
21cb1ed6b72faff42ff9b0c04fee72bb
  $s$fIsCmd(->)157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update story of active project"#) -}
a50b9f790f5cba9c24f8a2dda99eaf3d
  $s$fIsCmd(->)158 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Update story of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Update story of active project" () ->
                 Main.$s$fIsCmd(->)157) -}
822e3e827de2ab51ec0f716ffd777c89
  $s$fIsCmd(->)159 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Delete sprint from active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Delete sprint from active project" ())
                  Main.$s$fIsCmd(->)165
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Task id"
                     @ "Target Task Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Delete sprint from active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)163
                     Main.$s$fIsCmd(->)161
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)125)
                  Main.$s$fIsCmd(->)160
                  Main.$s$fIsCmd(->)160
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Task id"
                     @ "Target Task Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Delete sprint from active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)163
                     Main.$s$fIsCmd(->)161
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)125) -}
dddf690b1fcf5b6b89e7e9c1b6190ac5
  $s$fIsCmd(->)16 :: Data.Proxy.Proxy '["Name"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["Name"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)17
                   (GHC.Types.[] @ GHC.Base.String)) -}
cfa9c3ed9cb76438a86f752d467548b3
  $s$fIsCmd(->)160 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Delete sprint from active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Delete sprint from active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
559746b330f8a789b8ae1802069d431e
  $s$fIsCmd(->)161 :: GHC.TypeLits.KnownSymbol "Target Task Id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)162
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Target Task Id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Target Task Id">_N)) -}
7321c5801965c6f02d0b87708af45179
  $s$fIsCmd(->)162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Target Task Id"#) -}
e619c558256a2ced004052e759badede
  $s$fIsCmd(->)163 :: GHC.TypeLits.KnownSymbol "Task id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)164
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Task id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Task id">_N)) -}
c04d6a2df9e2cc3f16dbf5f6468aeb96
  $s$fIsCmd(->)164 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Task id"#) -}
d134f5578332bebf1082fab157e19dba
  $s$fIsCmd(->)165 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Delete sprint from active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                        -> Options.Declarative.Cmd
                             "Delete sprint from active project" () ->
                 Main.$s$fIsCmd(->)129) -}
3ded9632122adb519363f6ce9acaa93e
  $s$fIsCmd(->)166 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Update task of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                     -> Options.Declarative.Cmd "Update task of active project" ())
                  Main.$s$fIsCmd(->)173
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Task id"
                     @ "Target Task Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Update task of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)163
                     Main.$s$fIsCmd(->)161
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)168)
                  Main.$s$fIsCmd(->)167
                  Main.$s$fIsCmd(->)167
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Task id"
                     @ "Target Task Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Update task of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)163
                     Main.$s$fIsCmd(->)161
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)168) -}
172f5144ffba4fd6c157c05ccafb543c
  $s$fIsCmd(->)167 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Update task of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Update task of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
0771246b426e2fc6b370ec0a29d5a599
  $s$fIsCmd(->)168 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Update task of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd10 -}
dc4e5c0d588ed7ec6229e0ea2d0ff97a
  $s$fIsCmd(->)169 ::
    Options.Declarative.Cmd "Update task of active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "Update task of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
d62a976a9cda84f54dc3477e09e2ab03
  $s$fIsCmd(->)17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Name"#) -}
204c3551086dacd1b8e40c9bcd2d4c23
  $s$fIsCmd(->)170 ::
    Options.Declarative.Cmd "Update task of active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Update task of active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
87cf809819cd6613e86bb9fc68ed2dee
  $s$fIsCmd(->)171 ::
    GHC.TypeLits.KnownSymbol "Update task of active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)172
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Update task of active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Update task of active project">_N)) -}
4870d194e74d74197cff2fc3f821d281
  $s$fIsCmd(->)172 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update task of active project"#) -}
e4e3ac64de6e30965f0b8d90e3f77d42
  $s$fIsCmd(->)173 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
     -> Options.Declarative.Cmd "Update task of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                        -> Options.Declarative.Cmd "Update task of active project" () ->
                 Main.$s$fIsCmd(->)172) -}
84c291f51d9c73d6e0a0adab2ec62db3
  $s$fIsCmd(->)174 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i"
         '["ID"]
         "Sprint id"
         "Target Sprint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
       -> Options.Declarative.Flag
            "s"
            '["SIMPLE"]
            "show simple"
            "Show simple mode when sprint id is designated."
            GHC.Types.Bool
       -> Options.Declarative.Cmd
            "List all sprint, Or show sprints detail when project id is abbraviated."
            ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i"
                       '["ID"]
                       "Sprint id"
                       "Target Sprint Id"
                       (Options.Declarative.Def "-1" GHC.Types.Int)
                     -> Options.Declarative.Flag
                          "s"
                          '["SIMPLE"]
                          "show simple"
                          "Show simple mode when sprint id is designated."
                          GHC.Types.Bool
                     -> Options.Declarative.Cmd
                          "List all sprint, Or show sprints detail when project id is abbraviated."
                          ())
                  Main.$s$fIsCmd(->)176
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ (Options.Declarative.Def "-1" GHC.Types.Int)
                     @ (Options.Declarative.Flag
                          "s"
                          '["SIMPLE"]
                          "show simple"
                          "Show simple mode when sprint id is designated."
                          GHC.Types.Bool
                        -> Options.Declarative.Cmd
                             "List all sprint, Or show sprints detail when project id is abbraviated."
                             ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Main.$s$fIsCmd(->)47
                     Main.$s$fIsCmd(->)1_$dIsCmd10)
                  Main.$s$fIsCmd(->)175
                  Main.$s$fIsCmd(->)175
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Sprint id"
                     @ "Target Sprint Id"
                     @ (Options.Declarative.Def "-1" GHC.Types.Int)
                     @ (Options.Declarative.Flag
                          "s"
                          '["SIMPLE"]
                          "show simple"
                          "Show simple mode when sprint id is designated."
                          GHC.Types.Bool
                        -> Options.Declarative.Cmd
                             "List all sprint, Or show sprints detail when project id is abbraviated."
                             ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)48
                     Main.$s$fIsCmd(->)47
                     Main.$s$fIsCmd(->)1_$dIsCmd10) -}
40bd9225c32796fd78629d272d5699ea
  $s$fIsCmd(->)175 ::
    (Options.Declarative.Flag
       "i"
       '["ID"]
       "Sprint id"
       "Target Sprint Id"
       (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Flag
          "s"
          '["SIMPLE"]
          "show simple"
          "Show simple mode when sprint id is designated."
          GHC.Types.Bool
     -> Options.Declarative.Cmd
          "List all sprint, Or show sprints detail when project id is abbraviated."
          ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Flag
                             "s"
                             '["SIMPLE"]
                             "show simple"
                             "Show simple mode when sprint id is designated."
                             GHC.Types.Bool
                        -> Options.Declarative.Cmd
                             "List all sprint, Or show sprints detail when project id is abbraviated."
                             ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
fd22299e60e5ebbb81f05a7ab2abb939
  $s$fIsCmd(->)176 ::
    (Options.Declarative.Flag
       "i"
       '["ID"]
       "Sprint id"
       "Target Sprint Id"
       (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Flag
          "s"
          '["SIMPLE"]
          "show simple"
          "Show simple mode when sprint id is designated."
          GHC.Types.Bool
     -> Options.Declarative.Cmd
          "List all sprint, Or show sprints detail when project id is abbraviated."
          ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Flag
                             "s"
                             '["SIMPLE"]
                             "show simple"
                             "Show simple mode when sprint id is designated."
                             GHC.Types.Bool
                        -> Options.Declarative.Cmd
                             "List all sprint, Or show sprints detail when project id is abbraviated."
                             () ->
                 Main.$s$fIsCmd(->)56) -}
ca69264856058b52ab980903d53b152a
  $s$fIsCmd(->)177 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t"
         '["SPRINT-ID"]
         "Sprint id"
         "Destination Srint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
       -> Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "t"
                       '["SPRINT-ID"]
                       "Sprint id"
                       "Destination Srint Id"
                       (Options.Declarative.Def "-1" GHC.Types.Int)
                     -> Options.Declarative.Cmd "Move story of active project" ())
                  Main.$s$fIsCmd(->)182
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "t"
                     @ '["SPRINT-ID"]
                     @ "Sprint id"
                     @ "Destination Srint Id"
                     @ (Options.Declarative.Def "-1" GHC.Types.Int)
                     @ (Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)1_$dKnownSymbols2
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)1_$dKnownSymbol19
                     Main.$s$fIsCmd(->)47
                     Main.$s$fIsCmd(->)105)
                  Main.$s$fIsCmd(->)178
                  Main.$s$fIsCmd(->)178
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "t"
                     @ '["SPRINT-ID"]
                     @ "Sprint id"
                     @ "Destination Srint Id"
                     @ (Options.Declarative.Def "-1" GHC.Types.Int)
                     @ (Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)1_$dKnownSymbols2
                     Main.$s$fIsCmd(->)50
                     Main.$s$fIsCmd(->)1_$dKnownSymbol19
                     Main.$s$fIsCmd(->)47
                     Main.$s$fIsCmd(->)105) -}
d1e06ba8fef0bd1f7396c994bf830b4f
  $s$fIsCmd(->)178 ::
    (Options.Declarative.Flag
       "t"
       '["SPRINT-ID"]
       "Sprint id"
       "Destination Srint Id"
       (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "t"
                          '["SPRINT-ID"]
                          "Sprint id"
                          "Destination Srint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd "Move story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
d1c4bbcdd5ec73131e8c4dfea6d39fab
  $s$fIsCmd(->)179 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Destination Srint Id"#) -}
62a8ed119f9cdfb26e26b06693a03654
  $s$fIsCmd(->)18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "n"#) -}
60bd3e0563d157dc26c4afb3bb8fbdf4
  $s$fIsCmd(->)180 ::
    Data.Proxy.Proxy '["SPRINT-ID"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["SPRINT-ID"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)181
                   (GHC.Types.[] @ GHC.Base.String)) -}
f16a0c3b37cbc427a5706267bf57dfd6
  $s$fIsCmd(->)181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SPRINT-ID"#) -}
81910c9cee5af8ff38ca7a2217f87544
  $s$fIsCmd(->)182 ::
    (Options.Declarative.Flag
       "t"
       '["SPRINT-ID"]
       "Sprint id"
       "Destination Srint Id"
       (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "t"
                          '["SPRINT-ID"]
                          "Sprint id"
                          "Destination Srint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd "Move story of active project" () ->
                 Main.$s$fIsCmd(->)109) -}
303a835c3eb3cb3cdd284381a0ba9e0d
  $s$fIsCmd(->)183 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Flag
            "t"
            '["SPRINT-ID"]
            "Sprint id"
            "Destination Srint Id"
            (Options.Declarative.Def "-1" GHC.Types.Int)
       -> Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                     -> Options.Declarative.Flag
                          "t"
                          '["SPRINT-ID"]
                          "Sprint id"
                          "Destination Srint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                     -> Options.Declarative.Cmd "Move story of active project" ())
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp4
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t"
                          '["SPRINT-ID"]
                          "Sprint id"
                          "Destination Srint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd11)
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter4
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter4
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "i"
                     @ '["ID"]
                     @ "Story id"
                     @ "Target Story Id"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t"
                          '["SPRINT-ID"]
                          "Sprint id"
                          "Destination Srint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd "Move story of active project" ())
                     Main.$s$fIsCmd(->)39
                     Main.$s$fIsCmd(->)37
                     Main.$s$fIsCmd(->)35
                     Main.$s$fIsCmd(->)33
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd11) -}
17e96b8ec3b088cc2e4624c64c702de3
  $s$fIsCmd(->)19 :: GHC.TypeLits.KnownSymbol "ID"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)20
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"ID">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"ID">_N)) -}
004f7f930d390a7aaca1f02f0421c9f4
  $s$fIsCmd(->)1_$dIsCmd ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "List all sprint, Or show sprints detail when project id is abbraviated."
         ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd -}
2d3fcff94d6c5df9b5e6a55afcf9bdab
  $s$fIsCmd(->)1_$dIsCmd1 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Swap sprint of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd1 -}
6106705ec03264e52c195e59cd536fa2
  $s$fIsCmd(->)1_$dIsCmd10 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "s"
         '["SIMPLE"]
         "show simple"
         "Show simple mode when sprint id is designated."
         GHC.Types.Bool
       -> Options.Declarative.Cmd
            "List all sprint, Or show sprints detail when project id is abbraviated."
            ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fIsCmd(->)53 -}
119b5c26538d7d41446cd76161dcb61d
  $s$fIsCmd(->)1_$dIsCmd11 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t"
         '["SPRINT-ID"]
         "Sprint id"
         "Destination Srint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
       -> Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fIsCmd(->)177 -}
671af7c3b31ac4c0de29ffdea21c48e9
  $s$fIsCmd(->)1_$dIsCmd2 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap sprint of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fIsCmd(->)62 -}
13a8200c82f544bc9e81c23a2d2a84d4
  $s$fIsCmd(->)1_$dIsCmd3 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Swap story of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd2 -}
02eaecdefacf570e47fa566d71f5add8
  $s$fIsCmd(->)1_$dIsCmd4 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap story of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fIsCmd(->)85 -}
08de281d3178ccd1146685af8dd9d2dd
  $s$fIsCmd(->)1_$dIsCmd5 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Swap task of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd3 -}
7a0648f7b0529826addc5bfd42d12e35
  $s$fIsCmd(->)1_$dIsCmd6 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap task of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fIsCmd(->)94 -}
a6e0ce4ccd3dad945fe6bb8ca0479e9a
  $s$fIsCmd(->)1_$dIsCmd7 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "Switch other project. Or list all projects when project id is abbraviated."
         ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd5 -}
74f36d4fbb8a60099ebf68c0388e9b04
  $s$fIsCmd(->)1_$dIsCmd8 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
       -> Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fIsCmd(->)103 -}
cc48a0fe1f8e0fe4264d96c16565d474
  $s$fIsCmd(->)1_$dIsCmd9 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "Show target story information and all tasks" ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)1_$s$fIsCmdCmd8 -}
b0ea43f7a51aa59df9570b156b30c844
  $s$fIsCmd(->)1_$dKnownSymbol ::
    GHC.TypeLits.KnownSymbol
      "List all sprint, Or show sprints detail when project id is abbraviated."
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)56
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"List all sprint, Or show sprints detail when project id is abbraviated.">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"List all sprint, Or show sprints detail when project id is abbraviated.">_N)) -}
82d7f763daf3bb8285c065a2706c1ba0
  $s$fIsCmd(->)1_$dKnownSymbol1 ::
    GHC.TypeLits.KnownSymbol "show simple"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)58
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"show simple">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"show simple">_N)) -}
0ad9bdd0ef89764451e928959d3f6e7e
  $s$fIsCmd(->)1_$dKnownSymbol10 ::
    GHC.TypeLits.KnownSymbol "Story id From"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)93
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Story id From">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Story id From">_N)) -}
db75c053c83d0a52a8a45eead7099688
  $s$fIsCmd(->)1_$dKnownSymbol11 ::
    GHC.TypeLits.KnownSymbol "Swap task of active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)98
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Swap task of active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Swap task of active project">_N)) -}
345394d8ca841146f1f7b2862011c9ec
  $s$fIsCmd(->)1_$dKnownSymbol12 ::
    GHC.TypeLits.KnownSymbol "Task id To"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)99
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Task id To">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Task id To">_N)) -}
ef762eecb42e5811c4e501084a0ebd3b
  $s$fIsCmd(->)1_$dKnownSymbol13 ::
    GHC.TypeLits.KnownSymbol "Task id From"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)102
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Task id From">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Task id From">_N)) -}
a5cffdd35762f7a96cfabb7212d13fa2
  $s$fIsCmd(->)1_$dKnownSymbol14 ::
    GHC.TypeLits.KnownSymbol "Destination Story Id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)110
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Destination Story Id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Destination Story Id">_N)) -}
ad6b9087d41c95fbc965334b64f1b47d
  $s$fIsCmd(->)1_$dKnownSymbol15 ::
    GHC.TypeLits.KnownSymbol
      "Switch other project. Or list all projects when project id is abbraviated."
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)118
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Switch other project. Or list all projects when project id is abbraviated.">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Switch other project. Or list all projects when project id is abbraviated.">_N)) -}
fbecf0ae3c9f0d89ee55258c97aec909
  $s$fIsCmd(->)1_$dKnownSymbol16 ::
    GHC.TypeLits.KnownSymbol "Switch project id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)120
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Switch project id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Switch project id">_N)) -}
47287e8e11925db55f06a65a3d96d5b9
  $s$fIsCmd(->)1_$dKnownSymbol17 ::
    GHC.TypeLits.KnownSymbol "Project id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)121
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Project id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Project id">_N)) -}
58bedd13972be5db90e5a1a0269ec2f9
  $s$fIsCmd(->)1_$dKnownSymbol18 ::
    GHC.TypeLits.KnownSymbol
      "Show target story information and all tasks"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)149
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Show target story information and all tasks">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Show target story information and all tasks">_N)) -}
0a9d7e636186de29d945847acfd1f384
  $s$fIsCmd(->)1_$dKnownSymbol19 ::
    GHC.TypeLits.KnownSymbol "Destination Srint Id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)179
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Destination Srint Id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Destination Srint Id">_N)) -}
67ac54f5039cd5da16df160a00a61f15
  $s$fIsCmd(->)1_$dKnownSymbol2 ::
    GHC.TypeLits.KnownSymbol
      "Show simple mode when sprint id is designated."
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)57
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Show simple mode when sprint id is designated.">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Show simple mode when sprint id is designated.">_N)) -}
da4294761e0ae51634264e7437ef4e2c
  $s$fIsCmd(->)1_$dKnownSymbol4 :: GHC.TypeLits.KnownSymbol "s"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)61
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"s">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"s">_N)) -}
4fda7887e466ec12c3a645c910d1c65a
  $s$fIsCmd(->)1_$dKnownSymbol5 ::
    GHC.TypeLits.KnownSymbol "Swap sprint of active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)66
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Swap sprint of active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Swap sprint of active project">_N)) -}
0224dd4316ba687ca5c7be4ae0d1ea67
  $s$fIsCmd(->)1_$dKnownSymbol6 ::
    GHC.TypeLits.KnownSymbol "Sprint id To"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)69
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Sprint id To">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Sprint id To">_N)) -}
b54bbf12976b95b79b451568e8b07617
  $s$fIsCmd(->)1_$dKnownSymbol7 ::
    GHC.TypeLits.KnownSymbol "Sprint id From"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)79
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Sprint id From">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Sprint id From">_N)) -}
d102d0c3a1ab8e9e1aa7d5f8317b10bb
  $s$fIsCmd(->)1_$dKnownSymbol8 ::
    GHC.TypeLits.KnownSymbol "Swap story of active project"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)89
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Swap story of active project">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Swap story of active project">_N)) -}
0cf5b360dd8e7748468a1ad01f101a15
  $s$fIsCmd(->)1_$dKnownSymbol9 ::
    GHC.TypeLits.KnownSymbol "Story id To"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)90
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Story id To">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Story id To">_N)) -}
0993aee889a4cb78631d6eda1464b4f0
  $s$fIsCmd(->)1_$dKnownSymbols ::
    Options.Declarative.KnownSymbols '["SIMPLE"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)59
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0] <'["SIMPLE"]>_N)) -}
284e6864005ba707a01678f43e5922b9
  $s$fIsCmd(->)1_$dKnownSymbols1 ::
    Options.Declarative.KnownSymbols '["STORY-ID"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)111
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0]
                          <'["STORY-ID"]>_N)) -}
56916d657b26bdb2f71c361f058aee32
  $s$fIsCmd(->)1_$dKnownSymbols2 ::
    Options.Declarative.KnownSymbols '["SPRINT-ID"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)180
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0]
                          <'["SPRINT-ID"]>_N)) -}
42f832cb92fb652df23669d6bc49bfe2
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp ::
    (Options.Declarative.Flag
       "s"
       '["SIMPLE"]
       "show simple"
       "Show simple mode when sprint id is designated."
       GHC.Types.Bool
     -> Options.Declarative.Cmd
          "List all sprint, Or show sprints detail when project id is abbraviated."
          ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "s"
                          '["SIMPLE"]
                          "show simple"
                          "Show simple mode when sprint id is designated."
                          GHC.Types.Bool
                        -> Options.Declarative.Cmd
                             "List all sprint, Or show sprints detail when project id is abbraviated."
                             () ->
                 Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                   @ "List all sprint, Or show sprints detail when project id is abbraviated."
                   Main.$s$fIsCmd(->)1_$dKnownSymbol
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "s"
                              '["SIMPLE"]
                              "show simple"
                              "Show simple mode when sprint id is designated."
                              GHC.Types.Bool)))) -}
a137587b6ca321ff6788c194aebd2e8c
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp1 ::
    (Options.Declarative.Flag
       "f"
       '["ID-FROM"]
       "Sprint id From"
       "Target Story Id : From"
       GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap sprint of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Sprint id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap sprint of active project" () ->
                 Main.$s$fIsCmd(->)75
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "f"
                              '["ID-FROM"]
                              "Sprint id From"
                              "Target Story Id : From"
                              GHC.Types.Int)))) -}
2f436470f0152d916ef416b1d7527c20
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp2 ::
    (Options.Declarative.Flag
       "f"
       '["ID-FROM"]
       "Story id From"
       "Target Story Id : From"
       GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap story of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Story id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap story of active project" () ->
                 Main.$s$fIsCmd(->)91
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "f"
                              '["ID-FROM"]
                              "Story id From"
                              "Target Story Id : From"
                              GHC.Types.Int)))) -}
6fd17ecae2bbd32fcbc3bf0f86a1dac8
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp3 ::
    (Options.Declarative.Flag
       "f"
       '["ID-FROM"]
       "Task id From"
       "Target Story Id : From"
       GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap task of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Task id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap task of active project" () ->
                 Main.$s$fIsCmd(->)100
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "f"
                              '["ID-FROM"]
                              "Task id From"
                              "Target Story Id : From"
                              GHC.Types.Int)))) -}
55ba657e61769642d4164d8f6da0c9a6
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp4 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "t"
          '["SPRINT-ID"]
          "Sprint id"
          "Destination Srint Id"
          (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t"
                             '["SPRINT-ID"]
                             "Sprint id"
                             "Destination Srint Id"
                             (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd "Move story of active project" () ->
                 Main.$s$fIsCmd(->)182
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int)))) -}
db148a6261cc82d79d37401f3f53873f
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter ::
    (Options.Declarative.Flag
       "s"
       '["SIMPLE"]
       "show simple"
       "Show simple mode when sprint id is designated."
       GHC.Types.Bool
     -> Options.Declarative.Cmd
          "List all sprint, Or show sprints detail when project id is abbraviated."
          ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "s"
                          '["SIMPLE"]
                          "show simple"
                          "Show simple mode when sprint id is designated."
                          GHC.Types.Bool
                        -> Options.Declarative.Cmd
                             "List all sprint, Or show sprints detail when project id is abbraviated."
                             () ->
                 Main.$s$fIsCmd(->)54
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "s"
                              '["SIMPLE"]
                              "show simple"
                              "Show simple mode when sprint id is designated."
                              GHC.Types.Bool)))) -}
7b1f2c6cb54247985e93e9ab1aef5f5a
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter1 ::
    (Options.Declarative.Flag
       "f"
       '["ID-FROM"]
       "Sprint id From"
       "Target Story Id : From"
       GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap sprint of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Sprint id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap sprint of active project" () ->
                 Main.$s$fIsCmd(->)63
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "f"
                              '["ID-FROM"]
                              "Sprint id From"
                              "Target Story Id : From"
                              GHC.Types.Int)))) -}
b0b4aabe01fa04a0fc3494acf5b1e136
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter2 ::
    (Options.Declarative.Flag
       "f"
       '["ID-FROM"]
       "Story id From"
       "Target Story Id : From"
       GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap story of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Story id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap story of active project" () ->
                 Main.$s$fIsCmd(->)86
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "f"
                              '["ID-FROM"]
                              "Story id From"
                              "Target Story Id : From"
                              GHC.Types.Int)))) -}
1119c985592a9cf13b4b2d233ef6cd0c
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter3 ::
    (Options.Declarative.Flag
       "f"
       '["ID-FROM"]
       "Task id From"
       "Target Story Id : From"
       GHC.Types.Int
     -> Options.Declarative.Flag
          "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap task of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Task id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap task of active project" () ->
                 Main.$s$fIsCmd(->)95
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "f"
                              '["ID-FROM"]
                              "Task id From"
                              "Target Story Id : From"
                              GHC.Types.Int)))) -}
409c46405b4e9b944c4cf67864ea1107
  $s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter4 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "t"
          '["SPRINT-ID"]
          "Sprint id"
          "Destination Srint Id"
          (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd "Move story of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "t"
                             '["SPRINT-ID"]
                             "Sprint id"
                             "Destination Srint Id"
                             (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd "Move story of active project" () ->
                 Main.$s$fIsCmd(->)178
                   (f (GHC.Err.undefined
                         @ (Options.Declarative.Flag
                              "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int)))) -}
98789556836209c92b51f2a81737c161
  $s$fIsCmd(->)1_$s$fIsCmdCmd ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "List all sprint, Or show sprints detail when project id is abbraviated."
         ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd
                       "List all sprint, Or show sprints detail when project id is abbraviated."
                       ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "List all sprint, Or show sprints detail when project id is abbraviated."
                     Main.$s$fIsCmd(->)1_$dKnownSymbol)
                  Main.$s$fIsCmd(->)55
                  Main.$s$fIsCmd(->)54
                  Main.$s$fIsCmd(->)54
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "List all sprint, Or show sprints detail when project id is abbraviated."
                     Main.$s$fIsCmd(->)1_$dKnownSymbol) -}
905e56fd67c361994391797cf5f4dffb
  $s$fIsCmd(->)1_$s$fIsCmdCmd1 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Swap sprint of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Swap sprint of active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Swap sprint of active project"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol5)
                  Main.$s$fIsCmd(->)65
                  Main.$s$fIsCmd(->)64
                  Main.$s$fIsCmd(->)64
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Swap sprint of active project"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol5) -}
c4ac0430cedc0c2d144b878772d113d0
  $s$fIsCmd(->)1_$s$fIsCmdCmd10 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Update task of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Update task of active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Update task of active project"
                     Main.$s$fIsCmd(->)171)
                  Main.$s$fIsCmd(->)170
                  Main.$s$fIsCmd(->)169
                  Main.$s$fIsCmd(->)169
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Update task of active project"
                     Main.$s$fIsCmd(->)171) -}
1bcc6340a558eb7a8f5291cdb3ddb265
  $s$fIsCmd(->)1_$s$fIsCmdCmd2 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Swap story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Swap story of active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Swap story of active project"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol8)
                  Main.$s$fIsCmd(->)88
                  Main.$s$fIsCmd(->)87
                  Main.$s$fIsCmd(->)87
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Swap story of active project"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol8) -}
36d9c9b696986b01c1293c970def143a
  $s$fIsCmd(->)1_$s$fIsCmdCmd3 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Swap task of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Swap task of active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Swap task of active project"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol11)
                  Main.$s$fIsCmd(->)97
                  Main.$s$fIsCmd(->)96
                  Main.$s$fIsCmd(->)96
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Swap task of active project"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol11) -}
e0345e1d90cc4dee35308dc86d3f60d3
  $s$fIsCmd(->)1_$s$fIsCmdCmd4 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Move story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Move story of active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Move story of active project"
                     Main.$s$fIsCmd(->)108)
                  Main.$s$fIsCmd(->)107
                  Main.$s$fIsCmd(->)106
                  Main.$s$fIsCmd(->)106
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Move story of active project"
                     Main.$s$fIsCmd(->)108) -}
d21948ffde3464b73fc9c09d834fe5cd
  $s$fIsCmd(->)1_$s$fIsCmdCmd5 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "Switch other project. Or list all projects when project id is abbraviated."
         ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd
                       "Switch other project. Or list all projects when project id is abbraviated."
                       ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Switch other project. Or list all projects when project id is abbraviated."
                     Main.$s$fIsCmd(->)1_$dKnownSymbol15)
                  Main.$s$fIsCmd(->)117
                  Main.$s$fIsCmd(->)116
                  Main.$s$fIsCmd(->)116
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Switch other project. Or list all projects when project id is abbraviated."
                     Main.$s$fIsCmd(->)1_$dKnownSymbol15) -}
2a391cc8992d71d95c12c91a5b088d30
  $s$fIsCmd(->)1_$s$fIsCmdCmd6 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Delete sprint from active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Delete sprint from active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Delete sprint from active project"
                     Main.$s$fIsCmd(->)128)
                  Main.$s$fIsCmd(->)127
                  Main.$s$fIsCmd(->)126
                  Main.$s$fIsCmd(->)126
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Delete sprint from active project"
                     Main.$s$fIsCmd(->)128) -}
b60bb49921c8618bd93ab8a015ff12d5
  $s$fIsCmd(->)1_$s$fIsCmdCmd7 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Update sprint of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Update sprint of active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Update sprint of active project"
                     Main.$s$fIsCmd(->)136)
                  Main.$s$fIsCmd(->)135
                  Main.$s$fIsCmd(->)134
                  Main.$s$fIsCmd(->)134
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Update sprint of active project"
                     Main.$s$fIsCmd(->)136) -}
953f24fb144b21e2363bad75c5cfe706
  $s$fIsCmd(->)1_$s$fIsCmdCmd8 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd
         "Show target story information and all tasks" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd
                       "Show target story information and all tasks" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Show target story information and all tasks"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol18)
                  Main.$s$fIsCmd(->)148
                  Main.$s$fIsCmd(->)147
                  Main.$s$fIsCmd(->)147
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Show target story information and all tasks"
                     Main.$s$fIsCmd(->)1_$dKnownSymbol18) -}
484b9ae92cccd67f07e3c9ac52e5b8e8
  $s$fIsCmd(->)1_$s$fIsCmdCmd9 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Update story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Update story of active project" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Update story of active project"
                     Main.$s$fIsCmd(->)156)
                  Main.$s$fIsCmd(->)155
                  Main.$s$fIsCmd(->)154
                  Main.$s$fIsCmd(->)154
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Update story of active project"
                     Main.$s$fIsCmd(->)156) -}
ba1a289c257ee59a1426b9eec6c05cc7
  $s$fIsCmd(->)2 ::
    Options.Declarative.Cmd "Add sprint to active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "Add sprint to active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
77226cc05397d1a424ae4f7f1d9cbbdb
  $s$fIsCmd(->)20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ID"#) -}
569cacfc44df704613aeb3f6827b9c72
  $s$fIsCmd(->)21 ::
    (Options.Declarative.Arg "ID" GHC.Base.String
     -> Options.Declarative.Flag
          "n"
          '["Name"]
          "Project name"
          "New projects explanatory name"
          GHC.Base.String
     -> Options.Declarative.Cmd "Add new project and switch to it" ())
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ f :: Options.Declarative.Arg "ID" GHC.Base.String
                        -> Options.Declarative.Flag
                             "n"
                             '["Name"]
                             "Project name"
                             "New projects explanatory name"
                             GHC.Base.String
                        -> Options.Declarative.Cmd "Add new project and switch to it" () ->
                 GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))
                   (System.Console.GetOpt.Option
                      @ (GHC.Base.String, GHC.Base.String)
                      Main.$s$fIsCmd(->)18
                      (GHC.Types.:
                         @ GHC.Base.String
                         Main.$s$fIsCmd(->)17
                         (GHC.Types.[] @ GHC.Base.String))
                      (System.Console.GetOpt.ReqArg
                         @ (GHC.Base.String, GHC.Base.String)
                         (\ ds :: GHC.Base.String -> (Main.$s$fIsCmd(->)17, ds))
                         Main.$s$fIsCmd(->)15)
                      Main.$s$fIsCmd(->)14)
                   (GHC.Types.[]
                      @ (System.Console.GetOpt.OptDescr
                           (GHC.Base.String, GHC.Base.String)))) -}
bee20e656379f83789f26acd3921b653
  $s$fIsCmd(->)22 ::
    (Options.Declarative.Arg "ID" GHC.Base.String
     -> Options.Declarative.Flag
          "n"
          '["Name"]
          "Project name"
          "New projects explanatory name"
          GHC.Base.String
     -> Options.Declarative.Cmd "Add new project and switch to it" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Arg "ID" GHC.Base.String
                        -> Options.Declarative.Flag
                             "n"
                             '["Name"]
                             "Project name"
                             "New projects explanatory name"
                             GHC.Base.String
                        -> Options.Declarative.Cmd "Add new project and switch to it" () ->
                 Main.$s$fIsCmd(->)13) -}
53b6c4c4e191b96cb48bc81f334c5c4b
  $s$fIsCmd(->)23 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
       -> Options.Declarative.Flag
            "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
       -> Options.Declarative.Flag
            "p"
            '["POINT"]
            "Estimated work point"
            "Estimated work point like 1, 2, 3, 5, 8 ..."
            GHC.Types.Int
       -> Options.Declarative.Cmd "Add task to active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                     -> Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                     -> Options.Declarative.Flag
                          "p"
                          '["POINT"]
                          "Estimated work point"
                          "Estimated work point like 1, 2, 3, 5, 8 ..."
                          GHC.Types.Int
                     -> Options.Declarative.Cmd "Add task to active project" ())
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetCmdHelp
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetOptDescr
                  (Options.Declarative.$fIsCmd(->)0_$cgetUsageHeader
                     @ "DESCRIPTION"
                     @ (Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "p"
                             '["POINT"]
                             "Estimated work point"
                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                             GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" ())
                     Main.$s$fIsCmd(->)5
                     Main.$s$fIsCmd(->)0_$dIsCmd3)
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetUsageFooter
                  (Options.Declarative.$fIsCmd(->)0_$crunCmd
                     @ "DESCRIPTION"
                     @ (Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "p"
                             '["POINT"]
                             "Estimated work point"
                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                             GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" ())
                     Main.$s$fIsCmd(->)5
                     Main.$s$fIsCmd(->)0_$dIsCmd3) -}
339d792c2dcd68a49e284bb29b02a4b8
  $s$fIsCmd(->)24 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "p"
          '["POINT"]
          "Estimated work point"
          "Estimated work point like 1, 2, 3, 5, 8 ..."
          GHC.Types.Int
     -> Options.Declarative.Cmd "Add task to active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "p"
                             '["POINT"]
                             "Estimated work point"
                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                             GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
3d9e5cf157fedfc2875e38df7eba3080
  $s$fIsCmd(->)25 ::
    Options.Declarative.Cmd "Add task to active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "Add task to active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
16f5bd6b537851556102a456ac452b66
  $s$fIsCmd(->)26 ::
    Options.Declarative.Cmd "Add task to active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd "Add task to active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
3ef876e0e8808bad9854c6d014154e36
  $s$fIsCmd(->)27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Add task to active project"#) -}
50525e4ab97289d5c4c57f3282681873
  $s$fIsCmd(->)28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Estimated work point like 1, 2, 3, 5, 8 ..."#) -}
6bc6de42b682b81de958e429fed16339
  $s$fIsCmd(->)29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Estimated work point"#) -}
ff759db3e0799ac53326feb60601bc17
  $s$fIsCmd(->)3 ::
    Options.Declarative.Cmd "Add sprint to active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Add sprint to active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
8391a67bc3b1c1ad81cb6c9272ab160f
  $s$fIsCmd(->)30 :: Data.Proxy.Proxy '["POINT"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["POINT"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)31
                   (GHC.Types.[] @ GHC.Base.String)) -}
7b6429812c69a1704c61d7fcf8f07f43
  $s$fIsCmd(->)31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POINT"#) -}
f8d7cdf05d4474d53195226d20419fb3
  $s$fIsCmd(->)32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "p"#) -}
26629e60064c8144e2e513e1bd6e52f3
  $s$fIsCmd(->)33 :: GHC.TypeLits.KnownSymbol "Target Story Id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)34
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Target Story Id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Target Story Id">_N)) -}
13e835614cb1890c7a80ebeeb49ef5a5
  $s$fIsCmd(->)34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Target Story Id"#) -}
e7715678f048bd16df712acbf2af8795
  $s$fIsCmd(->)35 :: GHC.TypeLits.KnownSymbol "Story id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)36
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Story id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Story id">_N)) -}
460f0c5e6982451d3ef06ad4c612218b
  $s$fIsCmd(->)36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Story id"#) -}
901514ee5fe541c20ff007d5d5758a41
  $s$fIsCmd(->)37 :: Options.Declarative.KnownSymbols '["ID"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)38
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0] <'["ID"]>_N)) -}
7ca6889f221bc4f0d7f698cd85e543d1
  $s$fIsCmd(->)38 :: Data.Proxy.Proxy '["ID"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["ID"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)20
                   (GHC.Types.[] @ GHC.Base.String)) -}
c39d6d7dfb3e441e7ac62078d682bcf0
  $s$fIsCmd(->)39 :: GHC.TypeLits.KnownSymbol "i"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)40
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"i">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"i">_N)) -}
ceaa5cc343843ed0c6895cacdf82125f
  $s$fIsCmd(->)4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Add sprint to active project"#) -}
c814374897d49b55191499cdb3430d07
  $s$fIsCmd(->)40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i"#) -}
2bf941e5afd5c024d43115cf9cefe835
  $s$fIsCmd(->)41 ::
    (Options.Declarative.Flag
       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
     -> Options.Declarative.Flag
          "p"
          '["POINT"]
          "Estimated work point"
          "Estimated work point like 1, 2, 3, 5, 8 ..."
          GHC.Types.Int
     -> Options.Declarative.Cmd "Add task to active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                        -> Options.Declarative.Flag
                             "p"
                             '["POINT"]
                             "Estimated work point"
                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                             GHC.Types.Int
                        -> Options.Declarative.Cmd "Add task to active project" () ->
                 Main.$s$fIsCmd(->)27) -}
2ef8054b2922460205c1a5af5ea4f78a
  $s$fIsCmd(->)42 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
       -> Options.Declarative.Flag
            "i"
            '["ID"]
            "Sprint id"
            "Target Sprint Id"
            (Options.Declarative.Def "-1" GHC.Types.Int)
       -> Options.Declarative.Cmd
            "Add story to product backlog, Or designated sprint." ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                     -> Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                     -> Options.Declarative.Cmd
                          "Add story to product backlog, Or designated sprint." ())
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetCmdHelp1
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetOptDescr1
                  (Options.Declarative.$fIsCmd(->)0_$cgetUsageHeader
                     @ "DESCRIPTION"
                     @ (Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd
                             "Add story to product backlog, Or designated sprint." ())
                     Main.$s$fIsCmd(->)5
                     Main.$s$fIsCmd(->)0_$dIsCmd6)
                  Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetUsageFooter1
                  (Options.Declarative.$fIsCmd(->)0_$crunCmd
                     @ "DESCRIPTION"
                     @ (Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd
                             "Add story to product backlog, Or designated sprint." ())
                     Main.$s$fIsCmd(->)5
                     Main.$s$fIsCmd(->)0_$dIsCmd6) -}
4543bb876735f15b55bf3f8796445645
  $s$fIsCmd(->)43 ::
    (Options.Declarative.Flag
       "i"
       '["ID"]
       "Sprint id"
       "Target Sprint Id"
       (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd
          "Add story to product backlog, Or designated sprint." ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd
                             "Add story to product backlog, Or designated sprint." ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
830d00d786807b08cc396bf692f11b43
  $s$fIsCmd(->)44 ::
    Options.Declarative.Cmd
      "Add story to product backlog, Or designated sprint." ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Add story to product backlog, Or designated sprint." ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
1d6c6c36a6bd4338b22856bb3799ace4
  $s$fIsCmd(->)45 ::
    Options.Declarative.Cmd
      "Add story to product backlog, Or designated sprint." ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Add story to product backlog, Or designated sprint." () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
7027acd3187f4e5c2e830881c347ca55
  $s$fIsCmd(->)46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Add story to product backlog, Or designated sprint."#) -}
4a94abfe610c792771ce57f358389594
  $s$fIsCmd(->)47 ::
    Options.Declarative.ArgRead
      (Options.Declarative.Def "-1" GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fArgReadDef3 -}
12c53612722c6c72187c89e89b24f986
  $s$fIsCmd(->)48 :: GHC.TypeLits.KnownSymbol "Target Sprint Id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)49
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Target Sprint Id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Target Sprint Id">_N)) -}
60c00639f6a5dd9bb6f870df5e6b573d
  $s$fIsCmd(->)49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Target Sprint Id"#) -}
c5407cc12a91d62fd77987074919e876
  $s$fIsCmd(->)5 :: GHC.TypeLits.KnownSymbol "DESCRIPTION"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)6
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"DESCRIPTION">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"DESCRIPTION">_N)) -}
8f92e63af7512c674f80114b398c0783
  $s$fIsCmd(->)50 :: GHC.TypeLits.KnownSymbol "Sprint id"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)51
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Sprint id">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Sprint id">_N)) -}
6ead5145dc74c3f17e442c7b9456edf2
  $s$fIsCmd(->)51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sprint id"#) -}
b9e437f041f44304ec95f26e0d9a28ea
  $s$fIsCmd(->)52 ::
    (Options.Declarative.Flag
       "i"
       '["ID"]
       "Sprint id"
       "Target Sprint Id"
       (Options.Declarative.Def "-1" GHC.Types.Int)
     -> Options.Declarative.Cmd
          "Add story to product backlog, Or designated sprint." ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                        -> Options.Declarative.Cmd
                             "Add story to product backlog, Or designated sprint." () ->
                 Main.$s$fIsCmd(->)46) -}
c93fc6996cf7379fa47b82e58ad89522
  $s$fIsCmd(->)53 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "s"
         '["SIMPLE"]
         "show simple"
         "Show simple mode when sprint id is designated."
         GHC.Types.Bool
       -> Options.Declarative.Cmd
            "List all sprint, Or show sprints detail when project id is abbraviated."
            ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "s"
                       '["SIMPLE"]
                       "show simple"
                       "Show simple mode when sprint id is designated."
                       GHC.Types.Bool
                     -> Options.Declarative.Cmd
                          "List all sprint, Or show sprints detail when project id is abbraviated."
                          ())
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "s"
                     @ '["SIMPLE"]
                     @ "show simple"
                     @ "Show simple mode when sprint id is designated."
                     @ GHC.Types.Bool
                     @ (Options.Declarative.Cmd
                          "List all sprint, Or show sprints detail when project id is abbraviated."
                          ())
                     Main.$s$fIsCmd(->)1_$dKnownSymbol4
                     Main.$s$fIsCmd(->)1_$dKnownSymbols
                     Main.$s$fIsCmd(->)1_$dKnownSymbol1
                     Main.$s$fIsCmd(->)1_$dKnownSymbol2
                     Options.Declarative.$fArgReadBool
                     Main.$s$fIsCmd(->)1_$dIsCmd)
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "s"
                     @ '["SIMPLE"]
                     @ "show simple"
                     @ "Show simple mode when sprint id is designated."
                     @ GHC.Types.Bool
                     @ (Options.Declarative.Cmd
                          "List all sprint, Or show sprints detail when project id is abbraviated."
                          ())
                     Main.$s$fIsCmd(->)1_$dKnownSymbol4
                     Main.$s$fIsCmd(->)1_$dKnownSymbols
                     Main.$s$fIsCmd(->)1_$dKnownSymbol1
                     Main.$s$fIsCmd(->)1_$dKnownSymbol2
                     Options.Declarative.$fArgReadBool
                     Main.$s$fIsCmd(->)1_$dIsCmd) -}
51fa379fee2180bf281b6cfdf086c3f3
  $s$fIsCmd(->)54 ::
    Options.Declarative.Cmd
      "List all sprint, Or show sprints detail when project id is abbraviated."
      ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "List all sprint, Or show sprints detail when project id is abbraviated."
                           ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
0cc5613816f3190030869e390e413429
  $s$fIsCmd(->)55 ::
    Options.Declarative.Cmd
      "List all sprint, Or show sprints detail when project id is abbraviated."
      ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "List all sprint, Or show sprints detail when project id is abbraviated."
                           () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
cc38a19acd23f6a01633f8533f9e5baa
  $s$fIsCmd(->)56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "List all sprint, Or show sprints detail when project id is abbraviated."#) -}
95c7871f16dc7b6905ac4514731d338b
  $s$fIsCmd(->)57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show simple mode when sprint id is designated."#) -}
a5d1eb2a8f14f86d4db346b22af105d8
  $s$fIsCmd(->)58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "show simple"#) -}
23e132f5434a713654f3b84d63347aa4
  $s$fIsCmd(->)59 ::
    Data.Proxy.Proxy '["SIMPLE"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["SIMPLE"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)60
                   (GHC.Types.[] @ GHC.Base.String)) -}
6eceaa85ad2b74486d566c31b5feab6e
  $s$fIsCmd(->)6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DESCRIPTION"#) -}
e5f742ff5401f2a440b4abef39a5dcf6
  $s$fIsCmd(->)60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SIMPLE"#) -}
8dab3cd183882a730c779411820af847
  $s$fIsCmd(->)61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "s"#) -}
04c81cf0dd6ec9da8e4e1d80f53b4b4a
  $s$fIsCmd(->)62 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap sprint of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                     -> Options.Declarative.Cmd "Swap sprint of active project" ())
                  Main.$s$fIsCmd(->)75
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "t"
                     @ '["ID-TO"]
                     @ "Sprint id To"
                     @ "Target Story Id : To"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Swap sprint of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)70
                     Main.$s$fIsCmd(->)1_$dKnownSymbol6
                     Main.$s$fIsCmd(->)67
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd1)
                  Main.$s$fIsCmd(->)63
                  Main.$s$fIsCmd(->)63
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "t"
                     @ '["ID-TO"]
                     @ "Sprint id To"
                     @ "Target Story Id : To"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Swap sprint of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)70
                     Main.$s$fIsCmd(->)1_$dKnownSymbol6
                     Main.$s$fIsCmd(->)67
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd1) -}
8b92e10ec1d56af6e3b4ad940cbb22a6
  $s$fIsCmd(->)63 ::
    (Options.Declarative.Flag
       "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap sprint of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap sprint of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
eea7f5da02d6e59467d9f1da84aa8e94
  $s$fIsCmd(->)64 ::
    Options.Declarative.Cmd "Swap sprint of active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "Swap sprint of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
291175bf35273c93eb53f2e0ce71abe5
  $s$fIsCmd(->)65 ::
    Options.Declarative.Cmd "Swap sprint of active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Swap sprint of active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
e8e59b7d209bfa006a9b5c8814991810
  $s$fIsCmd(->)66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Swap sprint of active project"#) -}
7506024a28bf1966b446cc0be4f6bdb1
  $s$fIsCmd(->)67 :: GHC.TypeLits.KnownSymbol "Target Story Id : To"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)68
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Target Story Id : To">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Target Story Id : To">_N)) -}
2e0acaf847e1f50ff8ef7d43e566467f
  $s$fIsCmd(->)68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Target Story Id : To"#) -}
003df757cf1124d5062f63c38fbf641b
  $s$fIsCmd(->)69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sprint id To"#) -}
d812c6e6fa97dc854866809816cd3120
  $s$fIsCmd(->)7 ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Cmd "Add sprint to active project" ())
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Cmd "Add sprint to active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
ef07e63a27a99a80639c849dff15f3a9
  $s$fIsCmd(->)70 :: Options.Declarative.KnownSymbols '["ID-TO"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)71
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0] <'["ID-TO"]>_N)) -}
d2fb1e675d0353f3fa6df164a6aa9f22
  $s$fIsCmd(->)71 :: Data.Proxy.Proxy '["ID-TO"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["ID-TO"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)72
                   (GHC.Types.[] @ GHC.Base.String)) -}
bac7bc0a212acd3d2524301c201fb75a
  $s$fIsCmd(->)72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ID-TO"#) -}
26963bc6e3eb9011b5692045cf14ae71
  $s$fIsCmd(->)73 :: GHC.TypeLits.KnownSymbol "t"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)74
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"t">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"t">_N)) -}
eda3055f72ccbdd4c5b0f4037a45b348
  $s$fIsCmd(->)74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "t"#) -}
9ca9e4b41dff408cea76288ca304245d
  $s$fIsCmd(->)75 ::
    (Options.Declarative.Flag
       "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap sprint of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap sprint of active project" () ->
                 Main.$s$fIsCmd(->)66) -}
a55c686056013d7884e212abb4598b39
  $s$fIsCmd(->)76 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "f"
         '["ID-FROM"]
         "Sprint id From"
         "Target Story Id : From"
         GHC.Types.Int
       -> Options.Declarative.Flag
            "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap sprint of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "f"
                       '["ID-FROM"]
                       "Sprint id From"
                       "Target Story Id : From"
                       GHC.Types.Int
                     -> Options.Declarative.Flag
                          "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                     -> Options.Declarative.Cmd "Swap sprint of active project" ())
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp1
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "f"
                     @ '["ID-FROM"]
                     @ "Sprint id From"
                     @ "Target Story Id : From"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap sprint of active project" ())
                     Main.$s$fIsCmd(->)83
                     Main.$s$fIsCmd(->)80
                     Main.$s$fIsCmd(->)1_$dKnownSymbol7
                     Main.$s$fIsCmd(->)77
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd2)
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter1
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter1
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "f"
                     @ '["ID-FROM"]
                     @ "Sprint id From"
                     @ "Target Story Id : From"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap sprint of active project" ())
                     Main.$s$fIsCmd(->)83
                     Main.$s$fIsCmd(->)80
                     Main.$s$fIsCmd(->)1_$dKnownSymbol7
                     Main.$s$fIsCmd(->)77
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd2) -}
bbec07c4d207b6afbc75581d88d309cd
  $s$fIsCmd(->)77 ::
    GHC.TypeLits.KnownSymbol "Target Story Id : From"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)78
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"Target Story Id : From">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Target Story Id : From">_N)) -}
5ea6ad7dc2354e6cda4a268602828d27
  $s$fIsCmd(->)78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Target Story Id : From"#) -}
288b0fd3155ca7892a802164db3504fc
  $s$fIsCmd(->)79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sprint id From"#) -}
22a359fd7fe2fab67864a7df264c3f21
  $s$fIsCmd(->)8 ::
    (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
     -> Options.Declarative.Cmd "Add sprint to active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                        -> Options.Declarative.Cmd "Add sprint to active project" () ->
                 Main.$s$fIsCmd(->)4) -}
da318b1c88e7aab0e6f5d9ebdef13b9e
  $s$fIsCmd(->)80 :: Options.Declarative.KnownSymbols '["ID-FROM"]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)81
                  `cast`
                (Sym (Options.Declarative.NTCo:KnownSymbols[0]
                          <'["ID-FROM"]>_N)) -}
be8fa16e1a52ee894613c55249369a9d
  $s$fIsCmd(->)81 ::
    Data.Proxy.Proxy '["ID-FROM"] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Data.Proxy.Proxy '["ID-FROM"] ->
                 GHC.Types.:
                   @ GHC.Base.String
                   Main.$s$fIsCmd(->)82
                   (GHC.Types.[] @ GHC.Base.String)) -}
bae0b4a766d36dd965b6ca12822eac0a
  $s$fIsCmd(->)82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ID-FROM"#) -}
75011079fd7140439febd0f8c5fdd263
  $s$fIsCmd(->)83 :: GHC.TypeLits.KnownSymbol "f"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmd(->)84
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"f">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"f">_N)) -}
39ae649dbbe70822cb14af5634eba368
  $s$fIsCmd(->)84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "f"#) -}
416dab86308d8c44beeaf841fed67833
  $s$fIsCmd(->)85 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                     -> Options.Declarative.Cmd "Swap story of active project" ())
                  Main.$s$fIsCmd(->)91
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "t"
                     @ '["ID-TO"]
                     @ "Story id To"
                     @ "Target Story Id : To"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Swap story of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)70
                     Main.$s$fIsCmd(->)1_$dKnownSymbol9
                     Main.$s$fIsCmd(->)67
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd3)
                  Main.$s$fIsCmd(->)86
                  Main.$s$fIsCmd(->)86
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "t"
                     @ '["ID-TO"]
                     @ "Story id To"
                     @ "Target Story Id : To"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Swap story of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)70
                     Main.$s$fIsCmd(->)1_$dKnownSymbol9
                     Main.$s$fIsCmd(->)67
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd3) -}
a14d7285a3d89092c2bb527cd9127bf2
  $s$fIsCmd(->)86 ::
    (Options.Declarative.Flag
       "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap story of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
cb37f28942400d19ffdad17d52648a39
  $s$fIsCmd(->)87 ::
    Options.Declarative.Cmd "Swap story of active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "Swap story of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
783b252191e75307026fffea207b87b8
  $s$fIsCmd(->)88 ::
    Options.Declarative.Cmd "Swap story of active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Swap story of active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
78113412a6e119c331fd1b303033995f
  $s$fIsCmd(->)89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Swap story of active project"#) -}
ffc51cf9dd8f32d2b012e95108a7b8c2
  $s$fIsCmd(->)9 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Arg "ID" GHC.Base.String
       -> Options.Declarative.Flag
            "n"
            '["Name"]
            "Project name"
            "New projects explanatory name"
            GHC.Base.String
       -> Options.Declarative.Cmd "Add new project and switch to it" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Arg "ID" GHC.Base.String
                     -> Options.Declarative.Flag
                          "n"
                          '["Name"]
                          "Project name"
                          "New projects explanatory name"
                          GHC.Base.String
                     -> Options.Declarative.Cmd "Add new project and switch to it" ())
                  Main.$s$fIsCmd(->)22
                  Main.$s$fIsCmd(->)21
                  (Options.Declarative.$fIsCmd(->)0_$cgetUsageHeader
                     @ "ID"
                     @ (Options.Declarative.Flag
                          "n"
                          '["Name"]
                          "Project name"
                          "New projects explanatory name"
                          GHC.Base.String
                        -> Options.Declarative.Cmd "Add new project and switch to it" ())
                     Main.$s$fIsCmd(->)19
                     Main.$s$fIsCmd(->)0_$dIsCmd1)
                  Main.$s$fIsCmd(->)10
                  (Options.Declarative.$fIsCmd(->)0_$crunCmd
                     @ "ID"
                     @ (Options.Declarative.Flag
                          "n"
                          '["Name"]
                          "Project name"
                          "New projects explanatory name"
                          GHC.Base.String
                        -> Options.Declarative.Cmd "Add new project and switch to it" ())
                     Main.$s$fIsCmd(->)19
                     Main.$s$fIsCmd(->)0_$dIsCmd1) -}
e951b5116f99d77ec8a341850b33ece3
  $s$fIsCmd(->)90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Story id To"#) -}
1e159c992bcf253eaee400c9be868090
  $s$fIsCmd(->)91 ::
    (Options.Declarative.Flag
       "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap story of active project" ())
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap story of active project" () ->
                 Main.$s$fIsCmd(->)89) -}
f550374ee197faa1ccadd8619fd744f7
  $s$fIsCmd(->)92 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "f"
         '["ID-FROM"]
         "Story id From"
         "Target Story Id : From"
         GHC.Types.Int
       -> Options.Declarative.Flag
            "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap story of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "f"
                       '["ID-FROM"]
                       "Story id From"
                       "Target Story Id : From"
                       GHC.Types.Int
                     -> Options.Declarative.Flag
                          "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                     -> Options.Declarative.Cmd "Swap story of active project" ())
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp2
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "f"
                     @ '["ID-FROM"]
                     @ "Story id From"
                     @ "Target Story Id : From"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap story of active project" ())
                     Main.$s$fIsCmd(->)83
                     Main.$s$fIsCmd(->)80
                     Main.$s$fIsCmd(->)1_$dKnownSymbol10
                     Main.$s$fIsCmd(->)77
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd4)
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter2
                  Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter2
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "f"
                     @ '["ID-FROM"]
                     @ "Story id From"
                     @ "Target Story Id : From"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Flag
                          "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap story of active project" ())
                     Main.$s$fIsCmd(->)83
                     Main.$s$fIsCmd(->)80
                     Main.$s$fIsCmd(->)1_$dKnownSymbol10
                     Main.$s$fIsCmd(->)77
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd4) -}
a7a3cb5ef1db1d9c1fbeab09f81b15d1
  $s$fIsCmd(->)93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Story id From"#) -}
5b77f59e04c9f475f3ef807b420ce72f
  $s$fIsCmd(->)94 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Flag
         "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
       -> Options.Declarative.Cmd "Swap task of active project" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Flag
                       "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                     -> Options.Declarative.Cmd "Swap task of active project" ())
                  Main.$s$fIsCmd(->)100
                  (Options.Declarative.$fIsCmd(->)1_$cgetOptDescr
                     @ "t"
                     @ '["ID-TO"]
                     @ "Task id To"
                     @ "Target Story Id : To"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Swap task of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)70
                     Main.$s$fIsCmd(->)1_$dKnownSymbol12
                     Main.$s$fIsCmd(->)67
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd5)
                  Main.$s$fIsCmd(->)95
                  Main.$s$fIsCmd(->)95
                  (Options.Declarative.$fIsCmd(->)1_$crunCmd
                     @ "t"
                     @ '["ID-TO"]
                     @ "Task id To"
                     @ "Target Story Id : To"
                     @ GHC.Types.Int
                     @ (Options.Declarative.Cmd "Swap task of active project" ())
                     Main.$s$fIsCmd(->)73
                     Main.$s$fIsCmd(->)70
                     Main.$s$fIsCmd(->)1_$dKnownSymbol12
                     Main.$s$fIsCmd(->)67
                     Options.Declarative.$fArgReadInt
                     Main.$s$fIsCmd(->)1_$dIsCmd5) -}
856b1f0ea2e008a000e1c72648a75f54
  $s$fIsCmd(->)95 ::
    (Options.Declarative.Flag
       "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
     -> Options.Declarative.Cmd "Swap task of active project" ())
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: Options.Declarative.Flag
                          "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                        -> Options.Declarative.Cmd "Swap task of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
8e57ebac918589140f5f2d0b693b8012
  $s$fIsCmd(->)96 ::
    Options.Declarative.Cmd "Swap task of active project" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "Swap task of active project" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
4670c55f6cdf90af3d134419f47ec514
  $s$fIsCmd(->)97 ::
    Options.Declarative.Cmd "Swap task of active project" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Swap task of active project" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
c1a1fe2faa061f49aa7870f88fdefbcb
  $s$fIsCmd(->)98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Swap task of active project"#) -}
8b9a35d655c0da6e5d70f55d9f84f51a
  $s$fIsCmd(->)99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Task id To"#) -}
1229d64a110e48c3abc14f1f118bd00f
  $s$fIsCmdCmd ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "Show active projects information" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "Show active projects information" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "Show active projects information"
                     Main.$s$fIsCmdCmd_$dKnownSymbol)
                  Main.$s$fIsCmdCmd2
                  Main.$s$fIsCmdCmd1
                  Main.$s$fIsCmdCmd1
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "Show active projects information"
                     Main.$s$fIsCmdCmd_$dKnownSymbol) -}
e0a4519ca016429d4064c1031f67b7b0
  $s$fIsCmdCmd1 ::
    Options.Declarative.Cmd "Show active projects information" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Show active projects information" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
dac0572e69da73458eb0adfea8c5314f
  $s$fIsCmdCmd2 ::
    Options.Declarative.Cmd "Show active projects information" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd
                           "Show active projects information" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
d729a4600cedb95d7d159038467a8d07
  $s$fIsCmdCmd3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show active projects information"#) -}
3c33341af4b00229f1b972c6506db9e1
  $s$fIsCmdCmd4 ::
    Options.Declarative.IsCmd
      (Options.Declarative.Cmd "List all pbl storys" ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Options.Declarative.Cmd "List all pbl storys" ())
                  (Options.Declarative.$fIsCmdCmd_$cgetCmdHelp
                     @ "List all pbl storys"
                     Main.$s$fIsCmdCmd_$dKnownSymbol1)
                  Main.$s$fIsCmdCmd6
                  Main.$s$fIsCmdCmd5
                  Main.$s$fIsCmdCmd5
                  (Options.Declarative.$fIsCmdCmd_$crunCmd
                     @ "List all pbl storys"
                     Main.$s$fIsCmdCmd_$dKnownSymbol1) -}
9e6a428313024e9153ad413e09dbc320
  $s$fIsCmdCmd5 ::
    Options.Declarative.Cmd "List all pbl storys" ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Options.Declarative.Cmd "List all pbl storys" ()
                   ds1 :: GHC.Base.String ->
                 GHC.Types.[] @ GHC.Types.Char) -}
cd5d6508b33a03ebcee94e65109c5f79
  $s$fIsCmdCmd6 ::
    Options.Declarative.Cmd "List all pbl storys" ()
    -> [System.Console.GetOpt.OptDescr
          (GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: Options.Declarative.Cmd "List all pbl storys" () ->
                 GHC.Types.[]
                   @ (System.Console.GetOpt.OptDescr
                        (GHC.Base.String, GHC.Base.String))) -}
9b5d908b4fda48e512d294b43faf4e16
  $s$fIsCmdCmd7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "List all pbl storys"#) -}
9797458bb511aa8a5f8e3117393a7af4
  $s$fIsCmdCmd_$dKnownSymbol ::
    GHC.TypeLits.KnownSymbol "Show active projects information"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmdCmd3
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0]
                               <"Show active projects information">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"Show active projects information">_N)) -}
99f2894a1cbb3a7d6a1ac7f35d6bdbf6
  $s$fIsCmdCmd_$dKnownSymbol1 ::
    GHC.TypeLits.KnownSymbol "List all pbl storys"
  {- Unfolding: InlineRule (0, True, True)
                Main.$s$fIsCmdCmd7
                  `cast`
                (Trans
                     (Sym (GHC.TypeLits.NTCo:SSymbol[0] <"List all pbl storys">_P))
                     (Sym (GHC.TypeLits.NTCo:KnownSymbol[0]) <"List all pbl storys">_N)) -}
8024293d44f0559b7607ce1472c72a40
  $wa ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.activeProjectName1
                        w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdActive_errMsg
                        GHC.Types.True
                        ipv
                   GHC.Base.Just n
                   -> case Data.TTask.File.readActiveProject1
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        GHC.Base.Nothing
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdActive_errMsg
                             GHC.Types.True
                             ipv2
                        GHC.Base.Just pj
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (Data.TTask.Pretty.ppActive n pj)
                             GHC.Types.True
                             ipv2 } } } }) -}
84e259fe9c6c12cd19b8ed659bb5ed40
  $wa1 ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "p"
         '["POINT"]
         "Estimated work point"
         "Estimated work point like 1, 2, 3, 5, 8 ..."
         GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,U(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Arg
                          "DESCRIPTION" GHC.Base.String
                   w1 :: Options.Declarative.Flag
                           "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w2 :: Options.Declarative.Flag
                           "p"
                           '["POINT"]
                           "Estimated work point"
                           "Estimated work point like 1, 2, 3, 5, 8 ..."
                           GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w3 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdAdd8
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.Command.Add.addNewTask1
                             w2
                               `cast`
                             (Options.Declarative.NTCo:Flag[0]
                                  <"p">_P
                                  <'["POINT"]>_P
                                  <"Estimated work point">_P
                                  <"Estimated work point like 1, 2, 3, 5, 8 ...">_P
                                  <GHC.Types.Int>_R)
                             w1
                               `cast`
                             (Options.Declarative.NTCo:Flag[0]
                                  <"i">_P
                                  <'["ID"]>_P
                                  <"Story id">_P
                                  <"Target Story Id">_P
                                  <GHC.Types.Int>_R)
                             w `cast`
                             (Options.Declarative.NTCo:Arg[0]
                                  <"DESCRIPTION">_P <[GHC.Types.Char]>_R)
                             pj
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case Data.TTask.File.writeActiveProject1
                             ipv3
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild1 {
                        Data.TTask.File.Success -> (# ipv4, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.CString.unpackAppendCString#
                                "Error : Add task to project Failure. Check target story (id = "#
                                (case w1
                                        `cast`
                                      (Options.Declarative.NTCo:Flag[0]
                                           <"i">_P
                                           <'["ID"]>_P
                                           <"Story id">_P
                                           <"Target Story Id">_P
                                           <GHC.Types.Int>_R) of ww2 { GHC.Types.I# ww3 ->
                                 case GHC.Show.$wshowSignedInt
                                        0
                                        ww3
                                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                 GHC.Base.++
                                   @ GHC.Types.Char
                                   (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                   Main.cmdAdd7 } }))
                             GHC.Types.True
                             ipv4 } } } } }) -}
735c4d602ddacfd3d023c93f7eb970e7
  $wa10 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdMove5
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (case pj of ww { Data.TTask.Types.Project ww1 ww2 ww3 ww4 ->
                              case Data.TTask.Command.Move.$wmoveTask
                                     w `cast`
                                     (Options.Declarative.NTCo:Flag[0]
                                          <"i">_P
                                          <'["ID"]>_P
                                          <"Story id">_P
                                          <"Target Story Id">_P
                                          <GHC.Types.Int>_R)
                                     w1
                                       `cast`
                                     (Options.Declarative.NTCo:Flag[0]
                                          <"t">_P
                                          <'["STORY-ID"]>_P
                                          <"Story id">_P
                                          <"Destination Story Id">_P
                                          <GHC.Types.Int>_R)
                                     ww1
                                     ww2
                                     ww3
                                     ww4 of wild1 {
                                GHC.Base.Nothing -> ww GHC.Base.Just v -> v } })
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdMove5
                             GHC.Types.True
                             ipv2 } } } }) -}
a81cabc05944effb30ffcb6b06df383e
  $wa11 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "t"
         '["SPRINT-ID"]
         "Sprint id"
         "Destination Srint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t"
                           '["SPRINT-ID"]
                           "Sprint id"
                           "Destination Srint Id"
                           (Options.Declarative.Def "-1" GHC.Types.Int)
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdMove8
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (case w1
                                     `cast`
                                   (Trans
                                        (Options.Declarative.NTCo:Flag[0]
                                             <"t">_P
                                             <'["SPRINT-ID"]>_P
                                             <"Sprint id">_P
                                             <"Destination Srint Id">_P
                                             <Options.Declarative.Def "-1" GHC.Types.Int>_R)
                                        (Options.Declarative.NTCo:Def[0]
                                             <"-1">_P
                                             <GHC.Types.Int>_R)) of wild1 { GHC.Types.I# ds ->
                              case ds of ds2 {
                                DEFAULT
                                -> case pj of ww { Data.TTask.Types.Project ww1 ww2 ww3 ww4 ->
                                   case Data.TTask.Command.Move.$wmoveStoryToSprints
                                          w `cast`
                                          (Options.Declarative.NTCo:Flag[0]
                                               <"i">_P
                                               <'["ID"]>_P
                                               <"Story id">_P
                                               <"Target Story Id">_P
                                               <GHC.Types.Int>_R)
                                          wild1
                                          ww1
                                          ww2
                                          ww3
                                          ww4 of wild2 {
                                     GHC.Base.Nothing -> ww GHC.Base.Just v -> v } }
                                (-1)
                                -> case pj of ww { Data.TTask.Types.Project ww1 ww2 ww3 ww4 ->
                                   case Data.TTask.Command.Move.$wmoveStoryToPbl
                                          w `cast`
                                          (Options.Declarative.NTCo:Flag[0]
                                               <"i">_P
                                               <'["ID"]>_P
                                               <"Story id">_P
                                               <"Target Story Id">_P
                                               <GHC.Types.Int>_R)
                                          ww1
                                          ww2
                                          ww3
                                          ww4 of wild2 {
                                     GHC.Base.Nothing -> ww GHC.Base.Just v -> v } } } })
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdMove8
                             GHC.Types.True
                             ipv2 } } } }) -}
991ca9bd5b6fa01f19f83fdcb7df6748
  $wa12 ::
    Options.Declarative.Flag
      "i"
      '["ID"]
      "Project id"
      "Switch project id"
      (Options.Declarative.Def "" GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Project id"
                          "Switch project id"
                          (Options.Declarative.Def "" GHC.Base.String)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w `cast`
                      (Trans
                           (Options.Declarative.NTCo:Flag[0]
                                <"i">_P
                                <'["ID"]>_P
                                <"Project id">_P
                                <"Switch project id">_P
                                <Options.Declarative.Def "" GHC.Base.String>_R)
                           (Options.Declarative.NTCo:Def[0]
                                <"">_P <[GHC.Types.Char]>_R)) of wild {
                   [] -> Main.cmdProject3 w1
                   : ipv ipv1
                   -> case Data.TTask.File.initProjectFile2
                             wild
                             w1 of ds1 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.CString.unpackAppendCString#
                                "Error : Set active project Failure. Check Project `"#
                                (GHC.Base.++ @ GHC.Types.Char wild Main.cmdProject2))
                             GHC.Types.True
                             ipv2 } } }) -}
abc88514b5c824d5bea77a90e9ad7338
  $wa13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdShowPbl2
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (Data.TTask.Pretty.ppProjectPbl pj)
                        GHC.Types.True
                        ipv } }) -}
13516a70768f14e9c8dc100c2b1363d5
  $wa14 ::
    Options.Declarative.Flag
      "i"
      '["ID"]
      "Sprint id"
      "Target Sprint Id"
      (Options.Declarative.Def "-1" GHC.Types.Int)
    -> Options.Declarative.Flag
         "s"
         '["SIMPLE"]
         "show simple"
         "Show simple mode when sprint id is designated."
         GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U><L,U>, Inline: [0] -}
33b5dc082ffa8815c9b9d80fe6b5a5e4
  $wa15 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdShowStorys2
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case w `cast`
                           (Options.Declarative.NTCo:Flag[0]
                                <"i">_P
                                <'["ID"]>_P
                                <"Story id">_P
                                <"Target Story Id">_P
                                <GHC.Types.Int>_R) of wild1 { GHC.Types.I# ds ->
                      case ds of ds2 {
                        DEFAULT
                        -> case pj of ww { Data.TTask.Types.Project ww1 ww2 ww3 ww4 ->
                           case Data.TTask.Types.$wgetUserStoryById ww2 ww3 wild1 of wild2 {
                             GHC.Base.Nothing
                             -> GHC.IO.Handle.Text.hPutStr2
                                  GHC.IO.Handle.FD.stdout
                                  (GHC.CString.unpackAppendCString#
                                     "Error : Show story Filure. Check target story (id = "#
                                     (case GHC.Show.$wshowSignedInt
                                             0
                                             ds2
                                             (GHC.Types.[]
                                                @ GHC.Types.Char) of ww7 { (#,#) ww5 ww6 ->
                                      GHC.Base.++
                                        @ GHC.Types.Char
                                        (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                        Main.cmdAdd7 }))
                                  GHC.Types.True
                                  ipv
                             GHC.Base.Just a68
                             -> GHC.IO.Handle.Text.hPutStr2
                                  GHC.IO.Handle.FD.stdout
                                  (Data.TTask.Pretty.ppStory a68)
                                  GHC.Types.True
                                  ipv } }
                        (-1)
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.Types.[] @ GHC.Types.Char)
                             GHC.Types.True
                             ipv } } } }) -}
49f046f95f678c1a00aa7b0f9cba3d99
  $wa16 ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Task id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Task id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdSwap6
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (Data.TTask.Command.Move.swapTask
                                w `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"f">_P
                                     <'["ID-FROM"]>_P
                                     <"Task id From">_P
                                     <"Target Story Id : From">_P
                                     <GHC.Types.Int>_R)
                                w1
                                  `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"t">_P
                                     <'["ID-TO"]>_P
                                     <"Task id To">_P
                                     <"Target Story Id : To">_P
                                     <GHC.Types.Int>_R)
                                pj)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdSwap6
                             GHC.Types.True
                             ipv2 } } } }) -}
231a65e6656bef9866331aa75d005ffd
  $wa17 ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Story id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Story id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdSwap9
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (Data.TTask.Command.Move.swapStory
                                w `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"f">_P
                                     <'["ID-FROM"]>_P
                                     <"Story id From">_P
                                     <"Target Story Id : From">_P
                                     <GHC.Types.Int>_R)
                                w1
                                  `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"t">_P
                                     <'["ID-TO"]>_P
                                     <"Story id To">_P
                                     <"Target Story Id : To">_P
                                     <GHC.Types.Int>_R)
                                pj)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdSwap9
                             GHC.Types.True
                             ipv2 } } } }) -}
1429105f266f04b9fb70666ebd7b30cd
  $wa18 ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Sprint id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Sprint id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdSwap12
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (Data.TTask.Command.Move.swapSprint
                                w `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"f">_P
                                     <'["ID-FROM"]>_P
                                     <"Sprint id From">_P
                                     <"Target Story Id : From">_P
                                     <GHC.Types.Int>_R)
                                w1
                                  `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"t">_P
                                     <'["ID-TO"]>_P
                                     <"Sprint id To">_P
                                     <"Target Story Id : To">_P
                                     <GHC.Types.Int>_R)
                                pj)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdSwap12
                             GHC.Types.True
                             ipv2 } } } }) -}
e1b2f35666e58e160f9b7da7894bc00f
  $wa19 ::
    GHC.Prim.Int#
    -> Data.TTask.Types.Project
    -> (Data.TTask.Types.Project -> GHC.Base.String)
    -> (Data.TTask.Types.Id
        -> Data.TTask.Types.Project -> GHC.Base.Maybe GHC.Base.String)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <S,U><L,U><L,1*C1(U)><L,1*C1(C1(U))><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   w :: Data.TTask.Types.Project
                   w1 :: Data.TTask.Types.Project -> GHC.Base.String
                   w2 :: Data.TTask.Types.Id
                         -> Data.TTask.Types.Project -> GHC.Base.Maybe GHC.Base.String
                   w3 :: GHC.Base.String
                   w4 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ww of ds {
                   DEFAULT
                   -> case w2 (GHC.Types.I# ds) w of wild {
                        GHC.Base.Nothing
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             w3
                             GHC.Types.True
                             w4
                        GHC.Base.Just r
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             r
                             GHC.Types.True
                             w4 }
                   (-1)
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (w1 w)
                        GHC.Types.True
                        w4 }) -}
3bc042b96e547e1c26f8305eab81503c
  $wa2 ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> Options.Declarative.Flag
         "i"
         '["ID"]
         "Sprint id"
         "Target Sprint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Arg
                          "DESCRIPTION" GHC.Base.String
                   w1 :: Options.Declarative.Flag
                           "i"
                           '["ID"]
                           "Sprint id"
                           "Target Sprint Id"
                           (Options.Declarative.Def "-1" GHC.Types.Int)
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdAdd12
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case w1
                             `cast`
                           (Trans
                                (Options.Declarative.NTCo:Flag[0]
                                     <"i">_P
                                     <'["ID"]>_P
                                     <"Sprint id">_P
                                     <"Target Sprint Id">_P
                                     <Options.Declarative.Def "-1" GHC.Types.Int>_R)
                                (Options.Declarative.NTCo:Def[0]
                                     <"-1">_P <GHC.Types.Int>_R)) of wild1 { GHC.Types.I# ds ->
                      let {
                        $j :: GHC.Prim.State# GHC.Prim.RealWorld
                              -> Data.TTask.Types.Project
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 2, Strictness: <L,U><L,1*U(1*U,1*U,1*U,1*U)> -}
                        = \ ipv2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot]
                            ipv3 :: Data.TTask.Types.Project[OneShot] ->
                          case Data.TTask.File.writeActiveProject1
                                 ipv3
                                 ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                          case ipv5 of wild2 {
                            Data.TTask.File.Success -> (# ipv4, GHC.Tuple.() #)
                            Data.TTask.File.Failure
                            -> GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout
                                 (GHC.CString.unpackAppendCString#
                                    "Error : Add story to project Failure. Check target sprint (id = "#
                                    (case GHC.Show.$wshowSignedInt
                                            0
                                            ds
                                            (GHC.Types.[]
                                               @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Base.++
                                       @ GHC.Types.Char
                                       (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                       Main.cmdAdd7 }))
                                 GHC.Types.True
                                 ipv4 } }
                      } in
                      case ds of ds2 {
                        DEFAULT
                        -> case Data.TTask.Command.Add.addNewStoryToSprints1
                                  wild1
                                  w `cast`
                                  (Options.Declarative.NTCo:Arg[0]
                                       <"DESCRIPTION">_P <[GHC.Types.Char]>_R)
                                  pj
                                  ipv of ds3 { (#,#) ipv2 ipv3 ->
                           $j ipv2 ipv3 }
                        (-1)
                        -> case Data.TTask.Command.Add.addNewStoryToPbl1
                                  w `cast`
                                  (Options.Declarative.NTCo:Arg[0]
                                       <"DESCRIPTION">_P <[GHC.Types.Char]>_R)
                                  pj
                                  ipv of ds3 { (#,#) ipv2 ipv3 ->
                           $j ipv2 ipv3 } } } } }) -}
98b4c58d2d71f6214c3dc39432843521
  $wa3 ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Arg
                          "DESCRIPTION" GHC.Base.String
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdAdd16
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.Command.Add.addNewSprint1
                             w `cast`
                             (Options.Declarative.NTCo:Arg[0]
                                  <"DESCRIPTION">_P <[GHC.Types.Char]>_R)
                             pj
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case Data.TTask.File.writeActiveProject1
                             ipv3
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild1 {
                        Data.TTask.File.Success -> (# ipv4, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdAdd16
                             GHC.Types.True
                             ipv4 } } } } }) -}
bacb36adf7a9bc3c82ca900b14ea7115
  $wa4 ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdDelete6
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (Data.TTask.Command.Delete.deleteTask
                                w `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"i">_P
                                     <'["ID"]>_P
                                     <"Task id">_P
                                     <"Target Task Id">_P
                                     <GHC.Types.Int>_R)
                                pj)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdDelete6
                             GHC.Types.True
                             ipv2 } } } }) -}
4ae2523bc3b871ec212bbb401a893365
  $wa5 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdDelete9
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (Data.TTask.Command.Delete.deleteStory
                                w `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"i">_P
                                     <'["ID"]>_P
                                     <"Story id">_P
                                     <"Target Story Id">_P
                                     <GHC.Types.Int>_R)
                                pj)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdDelete9
                             GHC.Types.True
                             ipv2 } } } }) -}
b48877824eb141d90bd47217b9cd0be7
  $wa6 ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdDelete12
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (Data.TTask.Command.Delete.deleteSprint
                                w `cast`
                                (Options.Declarative.NTCo:Flag[0]
                                     <"i">_P
                                     <'["ID"]>_P
                                     <"Sprint id">_P
                                     <"Target Sprint Id">_P
                                     <GHC.Types.Int>_R)
                                pj)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        Data.TTask.File.Success -> (# ipv2, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdDelete12
                             GHC.Types.True
                             ipv2 } } } }) -}
8d3bbcbb12bfcccd98be171785de3047
  $wa7 ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*C1(U)><L,U(U)><L,U>, Inline: [0] -}
b28e17098408947545cba9279691223c
  $wa8 ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*C1(U)><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Data.Time.LocalTime.LocalTime.LocalTime
                        -> Data.TTask.Types.TStatusRecord
                   w1 :: Options.Declarative.Flag
                           "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.Time.LocalTime.LocalTime.getZonedTime1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case Data.TTask.File.readActiveProject1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdFinish8
                        GHC.Types.True
                        ipv2
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (case pj of ww { Data.TTask.Types.Project ww1 ww2 ww3 ww4 ->
                              let {
                                r :: Data.TTask.Types.TStatusRecord
                                = w (Data.Time.LocalTime.LocalTime.zonedTimeToLocalTime ipv1)
                              } in
                              Data.TTask.Types.Project
                                ww1
                                (GHC.Base.map
                                   @ Data.TTask.Types.UserStory
                                   @ Data.TTask.Types.UserStory
                                   (\ story :: Data.TTask.Types.UserStory ->
                                    case w1
                                           `cast`
                                         (Options.Declarative.NTCo:Flag[0]
                                              <"i">_P
                                              <'["ID"]>_P
                                              <"Story id">_P
                                              <"Target Story Id">_P
                                              <GHC.Types.Int>_R) of wild1 { GHC.Types.I# x ->
                                    case story of wild2 { Data.TTask.Types.UserStory ds3 ds4 ds5 ds6 ->
                                    case ds3 of wild3 { GHC.Types.I# y ->
                                    case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.==# x y) of wild4 {
                                      GHC.Types.False -> wild2
                                      GHC.Types.True
                                      -> Data.TTask.Types.UserStory
                                           wild3
                                           ds4
                                           ds5
                                           (Data.TTask.Types.TStatusCons r ds6) } } } })
                                   ww2)
                                (letrec {
                                   go :: [Data.TTask.Types.UserStory]
                                         -> [Data.TTask.Types.UserStory]
                                     {- Arity: 1, Strictness: <S,1*U> -}
                                   = \ ds :: [Data.TTask.Types.UserStory] ->
                                     case ds of wild1 {
                                       [] -> GHC.Types.[] @ Data.TTask.Types.UserStory
                                       : y ys
                                       -> GHC.Types.:
                                            @ Data.TTask.Types.UserStory
                                            (case w1
                                                    `cast`
                                                  (Options.Declarative.NTCo:Flag[0]
                                                       <"i">_P
                                                       <'["ID"]>_P
                                                       <"Story id">_P
                                                       <"Target Story Id">_P
                                                       <GHC.Types.Int>_R) of wild2 { GHC.Types.I# x ->
                                             case y of wild3 { Data.TTask.Types.UserStory ds3 ds4 ds5 ds6 ->
                                             case ds3 of wild4 { GHC.Types.I# y1 ->
                                             case GHC.Prim.tagToEnum#
                                                    @ GHC.Types.Bool
                                                    (GHC.Prim.==# x y1) of wild5 {
                                               GHC.Types.False -> wild3
                                               GHC.Types.True
                                               -> Data.TTask.Types.UserStory
                                                    wild4
                                                    ds4
                                                    ds5
                                                    (Data.TTask.Types.TStatusCons r ds6) } } } })
                                            (go ys) }
                                 } in
                                 GHC.Base.map
                                   @ Data.TTask.Types.Sprint
                                   @ Data.TTask.Types.Sprint
                                   (\ sp :: Data.TTask.Types.Sprint ->
                                    case sp of wild1 { Data.TTask.Types.Sprint ds ds3 ds4 ds5 ->
                                    Data.TTask.Types.Sprint ds ds3 (go ds4) ds5 })
                                   ww3)
                                ww4 })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild1 {
                        Data.TTask.File.Success -> (# ipv4, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdFinish8
                             GHC.Types.True
                             ipv4 } } } } }) -}
e37efd9ed2ca613e7399421325a5f0e7
  $wa9 ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*C1(U)><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ w :: Data.Time.LocalTime.LocalTime.LocalTime
                        -> Data.TTask.Types.TStatusRecord
                   w1 :: Options.Declarative.Flag
                           "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.Time.LocalTime.LocalTime.getZonedTime1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case Data.TTask.File.readActiveProject1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdFinish11
                        GHC.Types.True
                        ipv2
                   GHC.Base.Just pj
                   -> case Data.TTask.File.writeActiveProject1
                             (case pj of ww { Data.TTask.Types.Project ww1 ww2 ww3 ww4 ->
                              Data.TTask.Types.Project
                                ww1
                                ww2
                                (let {
                                   w3 :: Data.TTask.Types.TStatusRecord
                                   = w (Data.Time.LocalTime.LocalTime.zonedTimeToLocalTime ipv1)
                                 } in
                                 GHC.Base.map
                                   @ Data.TTask.Types.Sprint
                                   @ Data.TTask.Types.Sprint
                                   (\ sp :: Data.TTask.Types.Sprint ->
                                    case w1
                                           `cast`
                                         (Options.Declarative.NTCo:Flag[0]
                                              <"i">_P
                                              <'["ID"]>_P
                                              <"Sprint id">_P
                                              <"Target Sprint Id">_P
                                              <GHC.Types.Int>_R) of wild1 { GHC.Types.I# x ->
                                    case sp of wild2 { Data.TTask.Types.Sprint ds3 ds4 ds5 ds6 ->
                                    case ds3 of wild3 { GHC.Types.I# y ->
                                    case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.==# x y) of wild4 {
                                      GHC.Types.False -> wild2
                                      GHC.Types.True
                                      -> Data.TTask.Types.Sprint
                                           wild3
                                           ds4
                                           ds5
                                           (Data.TTask.Types.TStatusCons w3 ds6) } } } })
                                   ww3)
                                ww4 })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild1 {
                        Data.TTask.File.Success -> (# ipv4, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.cmdFinish11
                             GHC.Types.True
                             ipv4 } } } } }) -}
9ad7cfb629e02ac4a11fd874ce6ab666
  cmdActive ::
    Options.Declarative.Cmd "Show active projects information" ()
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdActive1
                  `cast`
                (Trans
                     (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                    <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                          (Sym (Options.Declarative.NTCo:Cmd[0]
                                    <"Show active projects information">_P) <()>_N))) -}
17a72270f1af2bdd7468be9669be2918
  cmdActive1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa w1) -}
9ccb03315d3c2344f4919e8d887d0ba7
  cmdActive_errMsg :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : show active project Failure. Check active project is available as `ttask project`"#) -}
d67b9932a5f3364652552bb0a2f599fd
  cmdAdd :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdAdd21
                   Main.cmdAdd1) -}
3cec094e37335f6914917aec6c3ab5d6
  cmdAdd1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdAdd18
                   Main.cmdAdd2) -}
2b1023a98313654402f932c45e482839
  cmdAdd10 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                      -> Options.Declarative.Flag
                           "i"
                           '["ID"]
                           "Sprint id"
                           "Target Sprint Id"
                           (Options.Declarative.Def "-1" GHC.Types.Int)
                      -> Options.Declarative.Cmd
                           "Add story to product backlog, Or designated sprint." ())
                   Main.$s$fIsCmd(->)42
                   Main.cmdAdd13
                   Main.cmdAdd11
                     `cast`
                   (<Options.Declarative.Arg "DESCRIPTION" GHC.Base.String>_R
                    ->_R <Options.Declarative.Flag
                            "i"
                            '["ID"]
                            "Sprint id"
                            "Target Sprint Id"
                            (Options.Declarative.Def "-1" GHC.Types.Int)>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Add story to product backlog, Or designated sprint.">_P) <()>_N)))) -}
97ab90ff793eed27d1694d15bd0543ed
  cmdAdd11 ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> Options.Declarative.Flag
         "i"
         '["ID"]
         "Sprint id"
         "Target Sprint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,1*U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                   w1 :: Options.Declarative.Flag
                           "i"
                           '["ID"]
                           "Sprint id"
                           "Target Sprint Id"
                           (Options.Declarative.Def "-1" GHC.Types.Int)
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa2 w w1 w3) -}
d06177cc2a2456ddb13bf25c57c4622c
  cmdAdd12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Add story to project Failure. Check active project is available as `ttask project`"#) -}
3d89f503fb9e91a822895e09146cdf39
  cmdAdd13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "story"#) -}
76397ce9396897c6041ce3b7bbb2cc7a
  cmdAdd14 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                      -> Options.Declarative.Cmd "Add sprint to active project" ())
                   Main.$s$fIsCmd(->)0
                   Main.cmdAdd17
                   Main.cmdAdd15
                     `cast`
                   (<Options.Declarative.Arg "DESCRIPTION" GHC.Base.String>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Add sprint to active project">_P) <()>_N)))) -}
caab05c8e1555e763e9f625df14d5c14
  cmdAdd15 ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa3 w w2) -}
36469f97526ea020a79385ef9f5ecbbc
  cmdAdd16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Add sprint to project Failure. Check active project is available as `ttask project`"#) -}
633135ae5de4eba650683b8e8ed90111
  cmdAdd17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sprint"#) -}
2c7baacc2bcfc7963579ab9fcd024011
  cmdAdd18 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Arg "ID" GHC.Base.String
                      -> Options.Declarative.Flag
                           "n"
                           '["Name"]
                           "Project name"
                           "New projects explanatory name"
                           GHC.Base.String
                      -> Options.Declarative.Cmd "Add new project and switch to it" ())
                   Main.$s$fIsCmd(->)9
                   Main.cmdAdd20
                   Main.cmdAdd19
                     `cast`
                   (<Options.Declarative.Arg "ID" GHC.Base.String>_R
                    ->_R <Options.Declarative.Flag
                            "n"
                            '["Name"]
                            "Project name"
                            "New projects explanatory name"
                            GHC.Base.String>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Add new project and switch to it">_P) <()>_N)))) -}
32405b738643ddd36104661a76bd9306
  cmdAdd19 ::
    Options.Declarative.Arg "ID" GHC.Base.String
    -> Options.Declarative.Flag
         "n"
         '["Name"]
         "Project name"
         "New projects explanatory name"
         GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,1*U><L,A><L,U>,
     Unfolding: InlineRule (4, True, True)
                (\ j :: Options.Declarative.Arg "ID" GHC.Base.String
                   n :: Options.Declarative.Flag
                          "n"
                          '["Name"]
                          "Project name"
                          "New projects explanatory name"
                          GHC.Base.String
                   eta1 :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Data.TTask.File.initProjectFile1
                   j `cast`
                   (Options.Declarative.NTCo:Arg[0] <"ID">_P <[GHC.Types.Char]>_R)
                   n `cast`
                   (Options.Declarative.NTCo:Flag[0]
                        <"n">_P
                        <'["Name"]>_P
                        <"Project name">_P
                        <"New projects explanatory name">_P
                        <[GHC.Types.Char]>_R)
                   eta) -}
e1fbeab02d1a46c9214b059574aaa969
  cmdAdd2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdAdd14
                   Main.cmdAdd3) -}
ba067d7cea1dbb019b83ff6dbf4cd6ac
  cmdAdd20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "project"#) -}
ba0b0c933a421c8c9a9c6af9a1458e51
  cmdAdd21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Add contents to active project"#) -}
e275380cec1f09c3387046f3e814e6b0
  cmdAdd3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdAdd10
                   Main.cmdAdd4) -}
b72ab2347e7b9663f773aa18116d3e27
  cmdAdd4 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdAdd5
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
a0a7c561dad9dc140c5d2dbc6e984fd3
  cmdAdd5 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                      -> Options.Declarative.Flag
                           "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Flag
                           "p"
                           '["POINT"]
                           "Estimated work point"
                           "Estimated work point like 1, 2, 3, 5, 8 ..."
                           GHC.Types.Int
                      -> Options.Declarative.Cmd "Add task to active project" ())
                   Main.$s$fIsCmd(->)23
                   Main.cmdAdd9
                   Main.cmdAdd6
                     `cast`
                   (<Options.Declarative.Arg "DESCRIPTION" GHC.Base.String>_R
                    ->_R <Options.Declarative.Flag
                            "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R <Options.Declarative.Flag
                            "p"
                            '["POINT"]
                            "Estimated work point"
                            "Estimated work point like 1, 2, 3, 5, 8 ..."
                            GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Add task to active project">_P) <()>_N)))) -}
1ac7d83cc071bd2d9d2bd19447b40dab
  cmdAdd6 ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "p"
         '["POINT"]
         "Estimated work point"
         "Estimated work point like 1, 2, 3, 5, 8 ..."
         GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><L,U(U)><L,U><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ w :: Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
                   w1 :: Options.Declarative.Flag
                           "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w2 :: Options.Declarative.Flag
                           "p"
                           '["POINT"]
                           "Estimated work point"
                           "Estimated work point like 1, 2, 3, 5, 8 ..."
                           GHC.Types.Int
                   w3 :: GHC.Types.Int
                   w4 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa1 w w1 w2 w4) -}
0bfa587abfa8326ec3d5995353b576ca
  cmdAdd7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ") is exist"#) -}
1e7e4ec9d49d43b2cadaa228921b1ec4
  cmdAdd8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Add task to project Failure. Check active project is available as `ttask project`"#) -}
37d9459dd8eabec262f56c72d44805af
  cmdAdd9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "task"#) -}
4da2f0e45e0ca0de4a6f4c167ee565e2
  cmdAddProject ::
    Options.Declarative.Arg "ID" GHC.Base.String
    -> Options.Declarative.Flag
         "n"
         '["Name"]
         "Project name"
         "New projects explanatory name"
         GHC.Base.String
    -> Options.Declarative.Cmd "Add new project and switch to it" ()
  {- Arity: 4, Strictness: <L,U><L,1*U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdAdd19
                  `cast`
                (<Options.Declarative.Arg "ID" GHC.Base.String>_R
                 ->_R <Options.Declarative.Flag
                         "n"
                         '["Name"]
                         "Project name"
                         "New projects explanatory name"
                         GHC.Base.String>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Add new project and switch to it">_P) <()>_N))) -}
048710463bc8aacdc23de3142f8c78cc
  cmdAddSprint ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> Options.Declarative.Cmd "Add sprint to active project" ()
  {- Arity: 3, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdAdd15
                  `cast`
                (<Options.Declarative.Arg "DESCRIPTION" GHC.Base.String>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Add sprint to active project">_P) <()>_N))) -}
2c77a7ee9cbd9bbbfd36bff283bcbcf4
  cmdAddStory ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> Options.Declarative.Flag
         "i"
         '["ID"]
         "Sprint id"
         "Target Sprint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
    -> Options.Declarative.Cmd
         "Add story to product backlog, Or designated sprint." ()
  {- Arity: 4, Strictness: <L,U><L,1*U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdAdd11
                  `cast`
                (<Options.Declarative.Arg "DESCRIPTION" GHC.Base.String>_R
                 ->_R <Options.Declarative.Flag
                         "i"
                         '["ID"]
                         "Sprint id"
                         "Target Sprint Id"
                         (Options.Declarative.Def "-1" GHC.Types.Int)>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Add story to product backlog, Or designated sprint.">_P) <()>_N))) -}
4300b6d1c3147c8c89ebdc69a2d493ef
  cmdAddTask ::
    Options.Declarative.Arg "DESCRIPTION" GHC.Base.String
    -> Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "p"
         '["POINT"]
         "Estimated work point"
         "Estimated work point like 1, 2, 3, 5, 8 ..."
         GHC.Types.Int
    -> Options.Declarative.Cmd "Add task to active project" ()
  {- Arity: 5, Strictness: <L,U><L,U(U)><L,U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdAdd6
                  `cast`
                (<Options.Declarative.Arg "DESCRIPTION" GHC.Base.String>_R
                 ->_R <Options.Declarative.Flag
                         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                 ->_R <Options.Declarative.Flag
                         "p"
                         '["POINT"]
                         "Estimated work point"
                         "Estimated work point like 1, 2, 3, 5, 8 ..."
                         GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Add task to active project">_P) <()>_N))) -}
b4d2c6f280b5c4fcc24a9d2340289758
  cmdDelete :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdDelete13
                   Main.cmdDelete1) -}
f49acf0f8b144e848abcdd185048b056
  cmdDelete1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdDelete10
                   Main.cmdDelete2) -}
33d650f341e99a35b818fe4821797227
  cmdDelete10 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Delete sprint from active project" ())
                   Main.$s$fIsCmd(->)123
                   Main.cmdAdd17
                   Main.cmdDelete11
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Delete sprint from active project">_P) <()>_N)))) -}
2d75436a6d9b0068e3195bd47662d91a
  cmdDelete11 ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa6 w w2) -}
f20c6c6fac3c8ed41d3a78a179f69a95
  cmdDelete12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Delete sprint Failure. Check active project is available as `ttask project`"#) -}
db05b46108f4ab828ab8566d78fa995b
  cmdDelete13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Delete contents from active project"#) -}
ddc44760e386b390602956806c115a6c
  cmdDelete2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdDelete7
                   Main.cmdDelete3) -}
d2ee4d71f68358e683eba618fb5517da
  cmdDelete3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdDelete4
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
e73fe8cf9eaa13e289819408f228504e
  cmdDelete4 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Delete sprint from active project" ())
                   Main.$s$fIsCmd(->)159
                   Main.cmdAdd9
                   Main.cmdDelete5
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Delete sprint from active project">_P) <()>_N)))) -}
278fdd58fc01a59079f449ec52d6241a
  cmdDelete5 ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa4 w w2) -}
8d8bb724105b7ca52c1bed2cbd18758a
  cmdDelete6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Delete task Failure. Check active project is available as `ttask project`"#) -}
8217e746e33cf99bee7f2992210397aa
  cmdDelete7 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Delete sprint from active project" ())
                   Main.$s$fIsCmd(->)142
                   Main.cmdAdd13
                   Main.cmdDelete8
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Delete sprint from active project">_P) <()>_N)))) -}
1a7189963cb2c38a393fb4859a0ce724
  cmdDelete8 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa5 w w2) -}
6dc0d23074508163ba4e8a8518b0c65b
  cmdDelete9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Delete story Failure. Check active project is available as `ttask project`"#) -}
493b1f48b65d5b7b43301e6bb89d475f
  cmdDeleteSprint ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> Options.Declarative.Cmd "Delete sprint from active project" ()
  {- Arity: 3, Strictness: <L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdDelete11
                  `cast`
                (<Options.Declarative.Flag
                    "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Delete sprint from active project">_P) <()>_N))) -}
fbc0e81110976b24ec274bb4ec17e196
  cmdDeleteStory ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Cmd "Delete sprint from active project" ()
  {- Arity: 3, Strictness: <L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdDelete8
                  `cast`
                (<Options.Declarative.Flag
                    "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Delete sprint from active project">_P) <()>_N))) -}
aeeb5bf7c6f81928185995eba7aec514
  cmdDeleteTask ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> Options.Declarative.Cmd "Delete sprint from active project" ()
  {- Arity: 3, Strictness: <L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdDelete5
                  `cast`
                (<Options.Declarative.Flag
                    "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Delete sprint from active project">_P) <()>_N))) -}
03a975257d6624d036ea091ce8f4de60
  cmdFinish :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdFinish12
                   Main.cmdFinish1) -}
c72b91894be2ff01e6671cbf5b32aca5
  cmdFinish1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdFinish9
                   Main.cmdFinish2) -}
48b436090f11edd6afa7431aeab3da3f
  cmdFinish10 ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa9 Data.TTask.Types.StatusFinished w w2) -}
e02ffe41e1e86090afab4b0dbe973794
  cmdFinish11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Update sprint Failure. Check active project is available as `ttask project`"#) -}
4a0409e3d5ea02cb5dfed3d4370c8ecf
  cmdFinish12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update contents status to `Finiesh`"#) -}
0fbb99078f66508016a216eff39901a3
  cmdFinish2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdFinish6
                   Main.cmdFinish3) -}
832c02b786533c8aca1afeb4a1c58134
  cmdFinish3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdFinish4
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
5b741f57af69a798576a16c97ae4f3c1
  cmdFinish4 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update task of active project" ())
                   Main.$s$fIsCmd(->)166
                   Main.cmdAdd9
                   Main.cmdFinish5
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update task of active project">_P) <()>_N)))) -}
8384eda56449cca7e2066bfc4e034345
  cmdFinish5 ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa7 Data.TTask.Types.StatusFinished w w2) -}
f00d65233388d4631112a071f5ce72c8
  cmdFinish6 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update story of active project" ())
                   Main.$s$fIsCmd(->)151
                   Main.cmdAdd13
                   Main.cmdFinish7
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update story of active project">_P) <()>_N)))) -}
b06609b1a195c36e20f0f95adaaa4d5d
  cmdFinish7 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa8 Data.TTask.Types.StatusFinished w w2) -}
82f16778a643d2c566ebfa1e32be92e0
  cmdFinish8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Update story Failure. Check active project is available as `ttask project`"#) -}
6964a91f6138e4a9e4f32310b39e0292
  cmdFinish9 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update sprint of active project" ())
                   Main.$s$fIsCmd(->)131
                   Main.cmdAdd17
                   Main.cmdFinish10
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update sprint of active project">_P) <()>_N)))) -}
c7e8a9eeb17f0ed148d7959bdd028b1a
  cmdMove :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdMove9
                   Main.cmdMove1) -}
fbf8d135e22f18cbb6ed86c548652933
  cmdMove1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdMove6
                   Main.cmdMove2) -}
0e92e2df770a129012832f208181634d
  cmdMove2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdMove3
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
2fb030a189a97725552cd1bc60c8a085
  cmdMove3 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Flag
                           "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Move story of active project" ())
                   Main.$s$fIsCmd(->)139
                   Main.cmdAdd9
                   Main.cmdMove4
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R <Options.Declarative.Flag
                            "t"
                            '["STORY-ID"]
                            "Story id"
                            "Destination Story Id"
                            GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Move story of active project">_P) <()>_N)))) -}
e31265ce37e518235d9c1d1842c2f64f
  cmdMove4 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa10 w w1 w3) -}
afbe72ef74891803c99ad62478ba5512
  cmdMove5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Move task Failure. Check active project is available as `ttask project`"#) -}
8ef12272e283040d9f90167ce51b14c1
  cmdMove6 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Flag
                           "t"
                           '["SPRINT-ID"]
                           "Sprint id"
                           "Destination Srint Id"
                           (Options.Declarative.Def "-1" GHC.Types.Int)
                      -> Options.Declarative.Cmd "Move story of active project" ())
                   Main.$s$fIsCmd(->)183
                   Main.cmdAdd13
                   Main.cmdMove7
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R <Options.Declarative.Flag
                            "t"
                            '["SPRINT-ID"]
                            "Sprint id"
                            "Destination Srint Id"
                            (Options.Declarative.Def "-1" GHC.Types.Int)>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Move story of active project">_P) <()>_N)))) -}
b06fbfea63305e90257576a6046f0d8b
  cmdMove7 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "t"
         '["SPRINT-ID"]
         "Sprint id"
         "Destination Srint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,1*U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t"
                           '["SPRINT-ID"]
                           "Sprint id"
                           "Destination Srint Id"
                           (Options.Declarative.Def "-1" GHC.Types.Int)
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa11 w w1 w3) -}
4200aaac71c9b1beae19c62cfd798ee4
  cmdMove8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Move story Failure. Check active project is available as `ttask project`"#) -}
4156b461f0068511e41c17e38e6fd6d3
  cmdMove9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Move contents of active project"#) -}
be0e44996b61f190d6da2b53fdc47fa6
  cmdMoveStory ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "t"
         '["SPRINT-ID"]
         "Sprint id"
         "Destination Srint Id"
         (Options.Declarative.Def "-1" GHC.Types.Int)
    -> Options.Declarative.Cmd "Move story of active project" ()
  {- Arity: 4, Strictness: <L,U(U)><L,1*U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdMove7
                  `cast`
                (<Options.Declarative.Flag
                    "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                 ->_R <Options.Declarative.Flag
                         "t"
                         '["SPRINT-ID"]
                         "Sprint id"
                         "Destination Srint Id"
                         (Options.Declarative.Def "-1" GHC.Types.Int)>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Move story of active project">_P) <()>_N))) -}
5b29f463adef265c6f9ef728f0cf0280
  cmdMoveTask ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["STORY-ID"] "Story id" "Destination Story Id" GHC.Types.Int
    -> Options.Declarative.Cmd "Move story of active project" ()
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdMove4
                  `cast`
                (<Options.Declarative.Flag
                    "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                 ->_R <Options.Declarative.Flag
                         "t"
                         '["STORY-ID"]
                         "Story id"
                         "Destination Story Id"
                         GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Move story of active project">_P) <()>_N))) -}
b304042e40b66c6cf3a3ec54d69f0c7a
  cmdNotAchieved :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdNotAchieved10
                   Main.cmdNotAchieved1) -}
332db414581178640184dab1e306b136
  cmdNotAchieved1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdNotAchieved8
                   Main.cmdNotAchieved2) -}
c87e20c057cafa355f30d4b1df5f5c53
  cmdNotAchieved10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update contents status to `Not Achieved`"#) -}
fca74d5e1094a53e1d02fa3c7f594314
  cmdNotAchieved2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdNotAchieved6
                   Main.cmdNotAchieved3) -}
c49b4ed81062c58cce1422cb8cb972cf
  cmdNotAchieved3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdNotAchieved4
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
27bb8d2c446e88771c4ef712164a4a8a
  cmdNotAchieved4 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update task of active project" ())
                   Main.$s$fIsCmd(->)166
                   Main.cmdAdd9
                   Main.cmdNotAchieved5
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update task of active project">_P) <()>_N)))) -}
bb9046f1e8dc5b2e7788af25193d4c09
  cmdNotAchieved5 ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa7 Data.TTask.Types.StatusNotAchieved w w2) -}
1bf37cef3f054ab7028f56d59e01bd97
  cmdNotAchieved6 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update story of active project" ())
                   Main.$s$fIsCmd(->)151
                   Main.cmdAdd13
                   Main.cmdNotAchieved7
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update story of active project">_P) <()>_N)))) -}
3f9f3b28aadf36758c1b879a9641661b
  cmdNotAchieved7 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa8 Data.TTask.Types.StatusNotAchieved w w2) -}
1e4a475f11a5b4b4d7acbf79600fa4d2
  cmdNotAchieved8 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update sprint of active project" ())
                   Main.$s$fIsCmd(->)131
                   Main.cmdAdd17
                   Main.cmdNotAchieved9
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update sprint of active project">_P) <()>_N)))) -}
146a7d0e3463ee0b07528d5106390d90
  cmdNotAchieved9 ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa9 Data.TTask.Types.StatusNotAchieved w w2) -}
40782964fed4e931f52e9a439a490daa
  cmdProject ::
    Options.Declarative.Flag
      "i"
      '["ID"]
      "Project id"
      "Switch project id"
      (Options.Declarative.Def "" GHC.Base.String)
    -> Options.Declarative.Cmd
         "Switch other project. Or list all projects when project id is abbraviated."
         ()
  {- Arity: 3, Strictness: <S,1*U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdProject1
                  `cast`
                (<Options.Declarative.Flag
                    "i"
                    '["ID"]
                    "Project id"
                    "Switch project id"
                    (Options.Declarative.Def "" GHC.Base.String)>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Switch other project. Or list all projects when project id is abbraviated.">_P) <()>_N))) -}
1883548dc217735c1b0e04704c2420e4
  cmdProject1 ::
    Options.Declarative.Flag
      "i"
      '["ID"]
      "Project id"
      "Switch project id"
      (Options.Declarative.Def "" GHC.Base.String)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,1*U><L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Project id"
                          "Switch project id"
                          (Options.Declarative.Def "" GHC.Base.String)
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa12 w w2) -}
1df04451b978db2fca03ea34f3f15a29
  cmdProject2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "` exist as `ttask project`"#) -}
4d63159c65fb0084d18c0a45113beafc
  cmdProject3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.activeProjectName1
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Data.TTask.File.findProjects5 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.cmdProject8
                        GHC.Types.True
                        ipv2
                   GHC.Base.Just pn
                   -> let {
                        ipv4 :: [GHC.Base.String]
                        = case ipv3 of wild1 {
                            GHC.Base.Nothing -> GHC.Types.[] @ [GHC.Types.Char]
                            GHC.Base.Just v
                            -> GHC.List.filter
                                 @ [GHC.Types.Char]
                                 Data.TTask.File.findProjects2
                                 v }
                      } in
                      let {
                        $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                        = \ w :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          letrec {
                            a68 :: [GHC.Base.String]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              {- Arity: 2, Strictness: <S,1*U><L,U> -}
                            = \ ds :: [GHC.Base.String]
                                eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                              case ds of wild1 {
                                [] -> (# eta, GHC.Tuple.() #)
                                : y ys
                                -> case GHC.IO.Handle.Text.hPutStr2
                                          GHC.IO.Handle.FD.stdout
                                          (case GHC.Base.eqString pn y of wild2 {
                                             GHC.Types.False
                                             -> GHC.Base.++ @ GHC.Types.Char Main.cmdProject7 y
                                             GHC.Types.True
                                             -> GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Main.cmdProject6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     y
                                                     Main.cmdProject5) })
                                          GHC.Types.True
                                          eta of ds3 { (#,#) ipv5 ipv6 ->
                                   a68 ys ipv5 } }
                          } in
                          a68 ipv4 w
                      } in
                      case GHC.List.elem
                             @ GHC.Base.String
                             GHC.Classes.$fEq[]_$s$fEq[]1
                             pn
                             ipv4 of wild1 {
                        GHC.Types.False
                        -> case GHC.IO.Handle.Text.hPutStr2
                                  GHC.IO.Handle.FD.stdout
                                  (GHC.CString.unpackAppendCString#
                                     "Warning : active project `"#
                                     (GHC.Base.++ @ GHC.Types.Char pn Main.cmdProject4))
                                  GHC.Types.True
                                  ipv2 of ds3 { (#,#) ipv5 ipv6 ->
                           $w$j ipv5 }
                        GHC.Types.True -> $w$j ipv2 } } } }) -}
137c2707f46eb9f72d35f35295ab7edc
  cmdProject4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "` is not found. Try `ttask project -i [project name]`"#) -}
7798ea7ee7149996a1dfed53f079746b
  cmdProject5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "]"#) -}
6fef8b4d84866c3e6e1968843ee23b80
  cmdProject6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " ["#) -}
804d3f93b27ca2293094f5d07982d47f
  cmdProject7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "  "#) -}
f2638c7423b1437422f1ec47fa43376b
  cmdProject8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Warning : Get active project failed. Try `ttask project -i [project name]`"#) -}
687b1d43a09a84102a3da00028e79caf
  cmdReject :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdReject10
                   Main.cmdReject1) -}
afffa5fddfaf290383226a73c9b6327f
  cmdReject1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdReject8
                   Main.cmdReject2) -}
c7dd5fbe99d54394f1149b1e855a71ae
  cmdReject10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update contents status to `Rejected`"#) -}
0cb51df50a4a9fabf1850996a8d063c3
  cmdReject2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdReject6
                   Main.cmdReject3) -}
22d72dbcab3ec7d32cf0561a764ce3ac
  cmdReject3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdReject4
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
c6819de86402c50a5684cce60837cfb3
  cmdReject4 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update task of active project" ())
                   Main.$s$fIsCmd(->)166
                   Main.cmdAdd9
                   Main.cmdReject5
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update task of active project">_P) <()>_N)))) -}
e2801be2877858df16b0f43a3262b599
  cmdReject5 ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa7 Data.TTask.Types.StatusReject w w2) -}
aa8143287dd4bbf3aa3fa601010dba1c
  cmdReject6 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update story of active project" ())
                   Main.$s$fIsCmd(->)151
                   Main.cmdAdd13
                   Main.cmdReject7
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update story of active project">_P) <()>_N)))) -}
122042eb15eed4f605e1a6e84fd5cf23
  cmdReject7 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa8 Data.TTask.Types.StatusReject w w2) -}
6b89e8803469e41ff3975db42f4b5142
  cmdReject8 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update sprint of active project" ())
                   Main.$s$fIsCmd(->)131
                   Main.cmdAdd17
                   Main.cmdReject9
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update sprint of active project">_P) <()>_N)))) -}
7d3c5403a9cc45440deb3132901804c8
  cmdReject9 ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa9 Data.TTask.Types.StatusReject w w2) -}
28af2857260e8451a451e1dcf11be56b
  cmdRun :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdRun10
                   Main.cmdRun1) -}
1e18aaec77bbf3d01232dc88c6a06444
  cmdRun1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdRun8
                   Main.cmdRun2) -}
28ea9289ea74b821415878a98df1107c
  cmdRun10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update contents status to `Running`"#) -}
f389da87ce1b2f0d86b992ef1c255084
  cmdRun2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdRun6
                   Main.cmdRun3) -}
31089664831f976a5eb7483a89a3a161
  cmdRun3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdRun4
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
ccdf8dd6c0d47b5a028895fbdd1920ed
  cmdRun4 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update task of active project" ())
                   Main.$s$fIsCmd(->)166
                   Main.cmdAdd9
                   Main.cmdRun5
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update task of active project">_P) <()>_N)))) -}
ccf52b1aa62381b79c1763152fe16a2e
  cmdRun5 ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa7 Data.TTask.Types.StatusRunning w w2) -}
15977fc316da4eec83181b18d6d4f40f
  cmdRun6 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update story of active project" ())
                   Main.$s$fIsCmd(->)151
                   Main.cmdAdd13
                   Main.cmdRun7
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update story of active project">_P) <()>_N)))) -}
bbda1a012bd87e8c082167552a9efeb2
  cmdRun7 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa8 Data.TTask.Types.StatusRunning w w2) -}
1291a6c1efa13a5df973674e11a0ea05
  cmdRun8 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update sprint of active project" ())
                   Main.$s$fIsCmd(->)131
                   Main.cmdAdd17
                   Main.cmdRun9
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update sprint of active project">_P) <()>_N)))) -}
8539f0c0c3913d76206d3f54ef76e35f
  cmdRun9 ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa9 Data.TTask.Types.StatusRunning w w2) -}
ab21a60054b5b631314b36322455e05e
  cmdShowPbl :: Options.Declarative.Cmd "List all pbl storys" ()
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdShowPbl1
                  `cast`
                (Trans
                     (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                    <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                          (Sym (Options.Declarative.NTCo:Cmd[0]
                                    <"List all pbl storys">_P) <()>_N))) -}
3a32b10de94a4d72bbbb2fc2db9e5f11
  cmdShowPbl1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa13 w1) -}
e9cd61c4d19060263a8fbbde8b0a2b4d
  cmdShowPbl2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Show pbl Failure. Check active project is available as `ttask project`"#) -}
2dc7674b276cfbf7b89f2720b72f8be4
  cmdShowSprints ::
    Options.Declarative.Flag
      "i"
      '["ID"]
      "Sprint id"
      "Target Sprint Id"
      (Options.Declarative.Def "-1" GHC.Types.Int)
    -> Options.Declarative.Flag
         "s"
         '["SIMPLE"]
         "show simple"
         "Show simple mode when sprint id is designated."
         GHC.Types.Bool
    -> Options.Declarative.Cmd
         "List all sprint, Or show sprints detail when project id is abbraviated."
         ()
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdShowSprints1
                  `cast`
                (<Options.Declarative.Flag
                    "i"
                    '["ID"]
                    "Sprint id"
                    "Target Sprint Id"
                    (Options.Declarative.Def "-1" GHC.Types.Int)>_R
                 ->_R <Options.Declarative.Flag
                         "s"
                         '["SIMPLE"]
                         "show simple"
                         "Show simple mode when sprint id is designated."
                         GHC.Types.Bool>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"List all sprint, Or show sprints detail when project id is abbraviated.">_P) <()>_N))) -}
af3410e3352095816756efabf14fefdc
  cmdShowSprints1 ::
    Options.Declarative.Flag
      "i"
      '["ID"]
      "Sprint id"
      "Target Sprint Id"
      (Options.Declarative.Def "-1" GHC.Types.Int)
    -> Options.Declarative.Flag
         "s"
         '["SIMPLE"]
         "show simple"
         "Show simple mode when sprint id is designated."
         GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Options.Declarative.Flag
                          "i"
                          '["ID"]
                          "Sprint id"
                          "Target Sprint Id"
                          (Options.Declarative.Def "-1" GHC.Types.Int)
                   w1 :: Options.Declarative.Flag
                           "s"
                           '["SIMPLE"]
                           "show simple"
                           "Show simple mode when sprint id is designated."
                           GHC.Types.Bool
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa14 w w1 w3) -}
1c146a7efea1ed158c1b7b35963993cc
  cmdShowStorys ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Cmd
         "Show target story information and all tasks" ()
  {- Arity: 3, Strictness: <L,1*U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdShowStorys1
                  `cast`
                (<Options.Declarative.Flag
                    "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Show target story information and all tasks">_P) <()>_N))) -}
d27ca180a53709afa4882c0c424e1b97
  cmdShowStorys1 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa15 w w2) -}
c39417f8001277911448482c3ae886fb
  cmdShowStorys2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Show story Failure. Check active project is available as `ttask project`"#) -}
cd922ab2f46250634f3a5a97ebe8cbe6
  cmdSwap :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdSwap13
                   Main.cmdSwap1) -}
564db38d3c26bc5ea57e7f5ddc182e2f
  cmdSwap1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdSwap10
                   Main.cmdSwap2) -}
b1b6bfc2fabc055eafcd398e196134eb
  cmdSwap10 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "f"
                        '["ID-FROM"]
                        "Sprint id From"
                        "Target Story Id : From"
                        GHC.Types.Int
                      -> Options.Declarative.Flag
                           "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                      -> Options.Declarative.Cmd "Swap sprint of active project" ())
                   Main.$s$fIsCmd(->)76
                   Main.cmdAdd17
                   Main.cmdSwap11
                     `cast`
                   (<Options.Declarative.Flag
                       "f"
                       '["ID-FROM"]
                       "Sprint id From"
                       "Target Story Id : From"
                       GHC.Types.Int>_R
                    ->_R <Options.Declarative.Flag
                            "t"
                            '["ID-TO"]
                            "Sprint id To"
                            "Target Story Id : To"
                            GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Swap sprint of active project">_P) <()>_N)))) -}
8facf48aaebf3f9a07300c95525a325d
  cmdSwap11 ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Sprint id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Sprint id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa18 w w1 w3) -}
9faf7f70274f5e956552a686e53abfa9
  cmdSwap12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Swap sprint Failure. Check active project is available as `ttask project`"#) -}
5e5b76238f11322f7b27f81a4bf6708d
  cmdSwap13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Swap contents of active project"#) -}
3f7ee1039f419b40da062d03af4e2e95
  cmdSwap2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdSwap7
                   Main.cmdSwap3) -}
a0b730be8ecb0576cf4d04d5212dffcf
  cmdSwap3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdSwap4
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
30f6a99b8aac33f1880430327cbe8236
  cmdSwap4 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "f"
                        '["ID-FROM"]
                        "Task id From"
                        "Target Story Id : From"
                        GHC.Types.Int
                      -> Options.Declarative.Flag
                           "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                      -> Options.Declarative.Cmd "Swap task of active project" ())
                   Main.$s$fIsCmd(->)101
                   Main.cmdAdd9
                   Main.cmdSwap5
                     `cast`
                   (<Options.Declarative.Flag
                       "f"
                       '["ID-FROM"]
                       "Task id From"
                       "Target Story Id : From"
                       GHC.Types.Int>_R
                    ->_R <Options.Declarative.Flag
                            "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Swap task of active project">_P) <()>_N)))) -}
57247d024ce9fc0736d61424ffb12083
  cmdSwap5 ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Task id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Task id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa16 w w1 w3) -}
3eeb275b2d019f0ae481cf1c6b1f8aad
  cmdSwap6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Swap task Failure. Check active project is available as `ttask project`"#) -}
aa48ca4895171f8d4f702506bf82950f
  cmdSwap7 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "f"
                        '["ID-FROM"]
                        "Story id From"
                        "Target Story Id : From"
                        GHC.Types.Int
                      -> Options.Declarative.Flag
                           "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                      -> Options.Declarative.Cmd "Swap story of active project" ())
                   Main.$s$fIsCmd(->)92
                   Main.cmdAdd13
                   Main.cmdSwap8
                     `cast`
                   (<Options.Declarative.Flag
                       "f"
                       '["ID-FROM"]
                       "Story id From"
                       "Target Story Id : From"
                       GHC.Types.Int>_R
                    ->_R <Options.Declarative.Flag
                            "t"
                            '["ID-TO"]
                            "Story id To"
                            "Target Story Id : To"
                            GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Swap story of active project">_P) <()>_N)))) -}
d5ac905465937e1c2fc7e39ca1f3ccd0
  cmdSwap8 ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Story id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Options.Declarative.Flag
                          "f"
                          '["ID-FROM"]
                          "Story id From"
                          "Target Story Id : From"
                          GHC.Types.Int
                   w1 :: Options.Declarative.Flag
                           "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa17 w w1 w3) -}
762a3278683cbd71b33da93c91eb0272
  cmdSwap9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Error : Swap project Failure. Check active project is available as `ttask project`"#) -}
0aba3ae2b249a1d13d8af0c78b9bf0ec
  cmdSwapSprint ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Sprint id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Sprint id To" "Target Story Id : To" GHC.Types.Int
    -> Options.Declarative.Cmd "Swap sprint of active project" ()
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdSwap11
                  `cast`
                (<Options.Declarative.Flag
                    "f"
                    '["ID-FROM"]
                    "Sprint id From"
                    "Target Story Id : From"
                    GHC.Types.Int>_R
                 ->_R <Options.Declarative.Flag
                         "t"
                         '["ID-TO"]
                         "Sprint id To"
                         "Target Story Id : To"
                         GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Swap sprint of active project">_P) <()>_N))) -}
368a230dae5cf5d3c89a71b2d9df5b62
  cmdSwapStory ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Story id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Story id To" "Target Story Id : To" GHC.Types.Int
    -> Options.Declarative.Cmd "Swap story of active project" ()
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdSwap8
                  `cast`
                (<Options.Declarative.Flag
                    "f"
                    '["ID-FROM"]
                    "Story id From"
                    "Target Story Id : From"
                    GHC.Types.Int>_R
                 ->_R <Options.Declarative.Flag
                         "t"
                         '["ID-TO"]
                         "Story id To"
                         "Target Story Id : To"
                         GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Swap story of active project">_P) <()>_N))) -}
664c06ef04b66688915646ebff4e01f5
  cmdSwapTask ::
    Options.Declarative.Flag
      "f"
      '["ID-FROM"]
      "Task id From"
      "Target Story Id : From"
      GHC.Types.Int
    -> Options.Declarative.Flag
         "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int
    -> Options.Declarative.Cmd "Swap task of active project" ()
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdSwap5
                  `cast`
                (<Options.Declarative.Flag
                    "f"
                    '["ID-FROM"]
                    "Task id From"
                    "Target Story Id : From"
                    GHC.Types.Int>_R
                 ->_R <Options.Declarative.Flag
                         "t" '["ID-TO"] "Task id To" "Target Story Id : To" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Swap task of active project">_P) <()>_N))) -}
c0912f55260feb0ce75ff934198ea30d
  cmdUpdStatusSprint ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> Options.Declarative.Cmd "Update sprint of active project" ()
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdUpdStatusSprint1
                  `cast`
                (<Data.Time.LocalTime.LocalTime.LocalTime
                  -> Data.TTask.Types.TStatusRecord>_R
                 ->_R <Options.Declarative.Flag
                         "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Update sprint of active project">_P) <()>_N))) -}
9b4c1b5c57f0a682bd0d7ad990c2fd8d
  cmdUpdStatusSprint1 ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Data.Time.LocalTime.LocalTime.LocalTime
                        -> Data.TTask.Types.TStatusRecord
                   w1 :: Options.Declarative.Flag
                           "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa9 w w1 w3) -}
789d4343260879fb9b6941d84d490951
  cmdUpdStatusStory ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> Options.Declarative.Cmd "Update story of active project" ()
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdUpdStatusStory1
                  `cast`
                (<Data.Time.LocalTime.LocalTime.LocalTime
                  -> Data.TTask.Types.TStatusRecord>_R
                 ->_R <Options.Declarative.Flag
                         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Update story of active project">_P) <()>_N))) -}
25d9b99a7e5c0264da08be75d41b36fc
  cmdUpdStatusStory1 ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Data.Time.LocalTime.LocalTime.LocalTime
                        -> Data.TTask.Types.TStatusRecord
                   w1 :: Options.Declarative.Flag
                           "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa8 w w1 w3) -}
f9a2f6db19123b1f072a3672709e2354
  cmdUpdStatusTask ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> Options.Declarative.Cmd "Update task of active project" ()
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U(U)><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdUpdStatusTask1
                  `cast`
                (<Data.Time.LocalTime.LocalTime.LocalTime
                  -> Data.TTask.Types.TStatusRecord>_R
                 ->_R <Options.Declarative.Flag
                         "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                 ->_R Trans
                          (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                         <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                               (Sym (Options.Declarative.NTCo:Cmd[0]
                                         <"Update task of active project">_P) <()>_N))) -}
838a83deb25a352aa4b5957d4dca9211
  cmdUpdStatusTask1 ::
    (Data.Time.LocalTime.LocalTime.LocalTime
     -> Data.TTask.Types.TStatusRecord)
    -> Options.Declarative.Flag
         "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U(U)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ w :: Data.Time.LocalTime.LocalTime.LocalTime
                        -> Data.TTask.Types.TStatusRecord
                   w1 :: Options.Declarative.Flag
                           "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w2 :: GHC.Types.Int
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa7 w w1 w3) -}
eddc524a52249eb8d4ff603fd35be799
  cmdWait :: Options.Declarative.Group
  {- Strictness: m,
     Unfolding: (Options.Declarative.Group
                   Main.cmdWait10
                   Main.cmdWait1) -}
7cffd1a712389af627cc5887c8e02764
  cmdWait1 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdWait8
                   Main.cmdWait2) -}
c8c4f2adb2c8fb3616a0978873caecae
  cmdWait10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Update contents status to `Wait`"#) -}
7aab2c86805d5dd8a7a907ee12764b75
  cmdWait2 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdWait6
                   Main.cmdWait3) -}
9647d48298d6901d98fa321e37381bd1
  cmdWait3 :: [Options.Declarative.SubCmd]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.cmdWait4
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
1bb6066d65f758eb0dfab77952918b7b
  cmdWait4 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update task of active project" ())
                   Main.$s$fIsCmd(->)166
                   Main.cmdAdd9
                   Main.cmdWait5
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update task of active project">_P) <()>_N)))) -}
e388963012d1ba0edafb4d63015236ca
  cmdWait5 ::
    Options.Declarative.Flag
      "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Task id" "Target Task Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa7 Data.TTask.Types.StatusWait w w2) -}
055d8e1d259c0ac420902dc0958dc793
  cmdWait6 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update story of active project" ())
                   Main.$s$fIsCmd(->)151
                   Main.cmdAdd13
                   Main.cmdWait7
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update story of active project">_P) <()>_N)))) -}
bf67d4b0ebac07c05032192bfa6614c7
  cmdWait7 ::
    Options.Declarative.Flag
      "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa8 Data.TTask.Types.StatusWait w w2) -}
c485eb5e6cdb31485c416de6ec02fca5
  cmdWait8 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                      -> Options.Declarative.Cmd "Update sprint of active project" ())
                   Main.$s$fIsCmd(->)131
                   Main.cmdAdd17
                   Main.cmdWait9
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Update sprint of active project">_P) <()>_N)))) -}
6b12eb80c39ba285f1c4d2c959971471
  cmdWait9 ::
    Options.Declarative.Flag
      "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ w :: Options.Declarative.Flag
                          "i" '["ID"] "Sprint id" "Target Sprint Id" GHC.Types.Int
                   w1 :: GHC.Types.Int
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.$wa9 Data.TTask.Types.StatusWait w w2) -}
a8476068cc5c70beec12dae19f0d6e0c
  execToActiveProject ::
    (Data.TTask.Types.Project -> GHC.Types.IO ())
    -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.execToActiveProject1
                  `cast`
                (<Data.TTask.Types.Project -> GHC.Types.IO ()>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e822dbc96a338fc725b8259828219cf6
  execToActiveProject1 ::
    (Data.TTask.Types.Project -> GHC.Types.IO ())
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ f :: Data.TTask.Types.Project -> GHC.Types.IO ()
                   err :: GHC.Base.String
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        err
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> (f pj) `cast` (GHC.Types.NTCo:IO[0] <()>_R) ipv } }) -}
1d39866e5aaffd5fce7d38489deb047d
  listupAllProjects :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cmdProject3 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
f89da8ded31c07805ffe93ae3c65dec6
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
5434483823be61ff99946cfb1f444cac
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.initDirectory1 s of ds1 { (#,#) ipv ipv1 ->
                 Options.Declarative.run_1
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main2
                   ipv }) -}
dbc20ebcf7b7ca4ad87fda36aefbd83a
  main10 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main28
                   Main.main11) -}
a587994a4151363be80211c0b08085d1
  main11 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main27
                   Main.main12) -}
afb01bc6a98cd311d8d63d0fae93f034
  main12 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main25
                   Main.main13) -}
3775e2f22c6374f6ad925499c1a7b2f6
  main13 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main23
                   Main.main14) -}
9197b6ab81143c6fa6d6785451647560
  main14 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main21
                   Main.main15) -}
9d7de9f16dfed6a7db3d817a353f9039
  main15 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main19
                   Main.main16) -}
d54b7e4135e9f183f7fbfd514a13f016
  main16 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main17
                   (GHC.Types.[] @ Options.Declarative.SubCmd)) -}
7602f40c4a354eeeaba80c61eae2894e
  main17 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main18
                   Main.cmdReject) -}
c14c207ba22d541549aa8ebe86d37e9d
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "reject"#) -}
526591de5af33fcfa2deca5f4c7b4789
  main19 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main20
                   Main.cmdNotAchieved) -}
a128bfade2a5acc0f1a8b66676f3ccd3
  main2 :: Options.Declarative.Group
  {- Unfolding: (Options.Declarative.Group Main.main42 Main.main3) -}
370be1e08496489910094b1db339c417
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nota"#) -}
8818439a6979460f0bcdd45c7026e050
  main21 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main22
                   Main.cmdWait) -}
e2cf82b626c63981a8622ebc66f55f46
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "wait"#) -}
33bb3eabb53e3d701f0e541ee8f058e7
  main23 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main24
                   Main.cmdFinish) -}
78f98e6e9c116066538c0d60d046def1
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "finish"#) -}
2c3b1a3e0235a2444af728abe8564dc3
  main25 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main26
                   Main.cmdRun) -}
9b7f237930168532558b1d6b5a00b07c
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "run"#) -}
b60eae67b4249ecd048c23f7d1b86dc6
  main27 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                      -> Options.Declarative.Cmd
                           "Show target story information and all tasks" ())
                   Main.$s$fIsCmd(->)145
                   Main.cmdAdd13
                   Main.cmdShowStorys1
                     `cast`
                   (<Options.Declarative.Flag
                       "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Show target story information and all tasks">_P) <()>_N)))) -}
bfa1824ca9ffbe5ffdc98b2f9132e804
  main28 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i"
                        '["ID"]
                        "Sprint id"
                        "Target Sprint Id"
                        (Options.Declarative.Def "-1" GHC.Types.Int)
                      -> Options.Declarative.Flag
                           "s"
                           '["SIMPLE"]
                           "show simple"
                           "Show simple mode when sprint id is designated."
                           GHC.Types.Bool
                      -> Options.Declarative.Cmd
                           "List all sprint, Or show sprints detail when project id is abbraviated."
                           ())
                   Main.$s$fIsCmd(->)174
                   Main.cmdAdd17
                   Main.cmdShowSprints1
                     `cast`
                   (<Options.Declarative.Flag
                       "i"
                       '["ID"]
                       "Sprint id"
                       "Target Sprint Id"
                       (Options.Declarative.Def "-1" GHC.Types.Int)>_R
                    ->_R <Options.Declarative.Flag
                            "s"
                            '["SIMPLE"]
                            "show simple"
                            "Show simple mode when sprint id is designated."
                            GHC.Types.Bool>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"List all sprint, Or show sprints detail when project id is abbraviated.">_P) <()>_N)))) -}
5d447b87396f4f316e978326bb25a6fc
  main29 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Cmd "List all pbl storys" ())
                   Main.$s$fIsCmdCmd4
                   Main.main30
                   Main.cmdShowPbl1
                     `cast`
                   (Trans
                        (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                       <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                             (Sym (Options.Declarative.NTCo:Cmd[0]
                                       <"List all pbl storys">_P) <()>_N)))) -}
b6d4428c2ca31dca53714f24e5d4e177
  main3 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main41
                   Main.main4) -}
7d57f79c5f40acc33596e8f7e4cc278b
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pbl"#) -}
26bd824500b093d83b518397ce4c9c98
  main31 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Cmd "Show active projects information" ())
                   Main.$s$fIsCmdCmd
                   Main.main32
                   Main.cmdActive1
                     `cast`
                   (Trans
                        (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                       <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                             (Sym (Options.Declarative.NTCo:Cmd[0]
                                       <"Show active projects information">_P) <()>_N)))) -}
7e6a786c5e01ce4d6f0a169edad247a6
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "active"#) -}
00bd05dd46d084a484d4d0bfe4e20a7f
  main33 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main34
                   Main.cmdSwap) -}
1bc1795c0b9c645e407693fa8cb60bec
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "swap"#) -}
a67130ccc017e247806044db123a0f75
  main35 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main36
                   Main.cmdMove) -}
ccbd6cb9fe7adc7cadcbea84c0a760a2
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "move"#) -}
83c8f1750b7b3d02573f91b72ea21f29
  main37 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main38
                   Main.cmdDelete) -}
364aeb7075b400a47591ff1c14a6f7b0
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "delete"#) -}
21e300ac136f47c96c55aaea87045cba
  main39 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ Options.Declarative.Group
                   Options.Declarative.$fIsCmdGroup
                   Main.main40
                   Main.cmdAdd) -}
7908910145fda65d944fad450cb64fdf
  main4 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main39
                   Main.main5) -}
a6ff4bee867f3bdf4a5d16a8d1fb3055
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "add"#) -}
989aa817abe5a8eca0220c5ec20f6a6e
  main41 :: Options.Declarative.SubCmd
  {- Unfolding: (Options.Declarative.SubCmd
                   @ (Options.Declarative.Flag
                        "i"
                        '["ID"]
                        "Project id"
                        "Switch project id"
                        (Options.Declarative.Def "" GHC.Base.String)
                      -> Options.Declarative.Cmd
                           "Switch other project. Or list all projects when project id is abbraviated."
                           ())
                   Main.$s$fIsCmd(->)114
                   Main.cmdAdd20
                   Main.cmdProject1
                     `cast`
                   (<Options.Declarative.Flag
                       "i"
                       '["ID"]
                       "Project id"
                       "Switch project id"
                       (Options.Declarative.Def "" GHC.Base.String)>_R
                    ->_R Trans
                             (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <GHC.Types.Int>_R <GHC.Types.IO>_R <()>_N))
                                  (Sym (Options.Declarative.NTCo:Cmd[0]
                                            <"Switch other project. Or list all projects when project id is abbraviated.">_P) <()>_N)))) -}
1837199d1c6e802062d969d382cd3528
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Task management tool for yourself is inspired by scrum."#) -}
fc346d312c8b6f5ccd34ea42595fecbd
  main43 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
306ad1d30f82fb72d310298ea35e1ecd
  main5 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main37
                   Main.main6) -}
632427a8306f7478dad13cc68666b5ee
  main6 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main35
                   Main.main7) -}
137c11f0a3302c0360dc2b3f542d4891
  main7 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main33
                   Main.main8) -}
885e6aade5e37084fb8ced09e1631c89
  main8 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main31
                   Main.main9) -}
172d3775d35d09e4bb6eac14bb40bec3
  main9 :: [Options.Declarative.SubCmd]
  {- Unfolding: (GHC.Types.:
                   @ Options.Declarative.SubCmd
                   Main.main29
                   Main.main10) -}
6323da96eadb52788183c2e0a0ec9c63
  modifyActivePjSimple ::
    (Data.TTask.Types.Project -> GHC.Types.IO Data.TTask.Types.Project)
    -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,C(C1(U(U,1*U(1*U,1*U,1*U,1*U))))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.modifyActivePjSimple1
                  `cast`
                (<Data.TTask.Types.Project
                  -> GHC.Types.IO Data.TTask.Types.Project>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
b3f5e8652c24f43b1adc7ec6d34ffc14
  modifyActivePjSimple1 ::
    (Data.TTask.Types.Project -> GHC.Types.IO Data.TTask.Types.Project)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,1*U(1*U,1*U,1*U,1*U))))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ f :: Data.TTask.Types.Project
                        -> GHC.Types.IO Data.TTask.Types.Project
                   err :: GHC.Base.String
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.modifyActivePjSimple2 f err err eta) -}
10e3614b908a87150d2cf57bdee358fb
  modifyActivePjSimple2 ::
    (Data.TTask.Types.Project -> GHC.Types.IO Data.TTask.Types.Project)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,1*C1(C1(U(U,1*U(1*U,1*U,1*U,1*U))))><L,1*U><L,1*U><L,U>,
     Unfolding: (\ f :: Data.TTask.Types.Project
                        -> GHC.Types.IO Data.TTask.Types.Project
                   err1 :: GHC.Base.String
                   err2 :: GHC.Base.String
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Data.TTask.File.readActiveProject1
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        err1
                        GHC.Types.True
                        ipv
                   GHC.Base.Just pj
                   -> case (f pj)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Data.TTask.Types.Project>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case Data.TTask.File.writeActiveProject1
                             ipv3
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild1 {
                        Data.TTask.File.Success -> (# ipv4, GHC.Tuple.() #)
                        Data.TTask.File.Failure
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             err2
                             GHC.Types.True
                             ipv4 } } } } }) -}
2e554c249867972b4f4791416aaa05db
  modifyActiveProject ::
    (Data.TTask.Types.Project -> GHC.Types.IO Data.TTask.Types.Project)
    -> GHC.Base.String -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,1*C1(C1(U(U,1*U(1*U,1*U,1*U,1*U))))><L,1*U><L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.modifyActivePjSimple2
                  `cast`
                (<Data.TTask.Types.Project
                  -> GHC.Types.IO Data.TTask.Types.Project>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
c2109ae35fa68920e2c0e5f351648cc1
  showContnt ::
    Data.TTask.Types.Id
    -> Data.TTask.Types.Project
    -> (Data.TTask.Types.Project -> GHC.Base.String)
    -> (Data.TTask.Types.Id
        -> Data.TTask.Types.Project -> GHC.Base.Maybe GHC.Base.String)
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <S(S),1*U(U)><L,U><L,1*C1(U)><L,1*C1(C1(U))><L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.showContnt1
                  `cast`
                (<Data.TTask.Types.Id>_R
                 ->_R <Data.TTask.Types.Project>_R
                 ->_R <Data.TTask.Types.Project -> GHC.Base.String>_R
                 ->_R <Data.TTask.Types.Id
                       -> Data.TTask.Types.Project -> GHC.Base.Maybe GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
7eb1416dea74ecc01ddda166a6d723ce
  showContnt1 ::
    Data.TTask.Types.Id
    -> Data.TTask.Types.Project
    -> (Data.TTask.Types.Project -> GHC.Base.String)
    -> (Data.TTask.Types.Id
        -> Data.TTask.Types.Project -> GHC.Base.Maybe GHC.Base.String)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <S(S),1*U(U)><L,U><L,1*C1(U)><L,1*C1(C1(U))><L,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ w :: Data.TTask.Types.Id
                   w1 :: Data.TTask.Types.Project
                   w2 :: Data.TTask.Types.Project -> GHC.Base.String
                   w3 :: Data.TTask.Types.Id
                         -> Data.TTask.Types.Project -> GHC.Base.Maybe GHC.Base.String
                   w4 :: GHC.Base.String
                   w5 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$wa19 ww1 w1 w2 w3 w4 w5 }) -}
"SPEC/Main $fArgReadDef @ "" @ [Char]" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                          ""
                                                       $dArgRead :: Options.Declarative.ArgRead
                                                                      [GHC.Types.Char]
  Options.Declarative.$fArgReadDef @ ""
                                   @ [GHC.Types.Char]
                                   $dKnownSymbol
                                   $dArgRead
  = Main.$s$fArgReadDef
"SPEC/Main $fArgReadDef @ "-1" @ Int" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                         "-1"
                                                      $dArgRead :: Options.Declarative.ArgRead
                                                                     GHC.Types.Int
  Options.Declarative.$fArgReadDef @ "-1"
                                   @ GHC.Types.Int
                                   $dKnownSymbol
                                   $dArgRead
  = Main.$s$fArgReadDef3
"SPEC/Main $fIsCmd(->)0 @ "DESCRIPTION" @ (Cmd
                                            "Add sprint to active project" ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                  "DESCRIPTION"
                                                                                                                                               $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                            (Options.Declarative.Cmd
                                                                                                                                                               "Add sprint to active project"
                                                                                                                                                               ())
  Options.Declarative.$fIsCmd(->)0 @ "DESCRIPTION"
                                   @ (Options.Declarative.Cmd "Add sprint to active project" ())
                                   $dKnownSymbol
                                   $dIsCmd
  = Main.$s$fIsCmd(->)0
"SPEC/Main $fIsCmd(->)0 @ "DESCRIPTION" @ (Flag
                                            "i"
                                            '["ID"]
                                            "Sprint id"
                                            "Target Sprint Id"
                                            (Def "-1" Int)
                                          -> Cmd
                                               "Add story to product backlog, Or designated sprint."
                                               ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "Sprint id"
arget Sprint Id"
ptions.Declarative.Def

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Types.Int)
ptions.Declarative.Cmd
dd story to product backlog, Or designated sprint."

  Options.Declarative.$fIsCmd(->)0 @ "DESCRIPTION"
                                   @ (Options.Declarative.Flag
                                        "i"
                                        '["ID"]
                                        "Sprint id"
                                        "Target Sprint Id"
                                        (Options.Declarative.Def "-1" GHC.Types.Int)
                                      -> Options.Declarative.Cmd
                                           "Add story to product backlog, Or designated sprint." ())
                                   $dKnownSymbol
                                   $dIsCmd
  = Main.$s$fIsCmd(->)42
"SPEC/Main $fIsCmd(->)0 @ "DESCRIPTION" @ (Flag
                                            "i" '["ID"] "Story id" "Target Story Id" Int
                                          -> Flag
                                               "p"
                                               '["POINT"]
                                               "Estimated work point"
                                               "Estimated work point like 1, 2, 3, 5, 8 ..."
                                               Int
                                          -> Cmd "Add task to active project" ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"

tory id"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 "Target Story Id"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 GHC.Types.Int
ptions.Declarative.Flag
p"

stimated work point"
stimated work point like 1, 2, 3, 5, 8 ..."
ypes.Int
ptions.Declarative.Cmd
dd task to active project"

  Options.Declarative.$fIsCmd(->)0 @ "DESCRIPTION"
                                   @ (Options.Declarative.Flag
                                        "i" '["ID"] "Story id" "Target Story Id" GHC.Types.Int
                                      -> Options.Declarative.Flag
                                           "p"
                                           '["POINT"]
                                           "Estimated work point"
                                           "Estimated work point like 1, 2, 3, 5, 8 ..."
                                           GHC.Types.Int
                                      -> Options.Declarative.Cmd "Add task to active project" ())
                                   $dKnownSymbol
                                   $dIsCmd
  = Main.$s$fIsCmd(->)23
"SPEC/Main $fIsCmd(->)0 @ "ID" @ (Flag
                                   "n"
                                   '["Name"]
                                   "Project name"
                                   "New projects explanatory name"
                                   String
                                 -> Cmd "Add new project and switch to it" ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                             "ID"
                                                                                                                                                                                                                                                                                                                                                                                          $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                       (Options.Declarative.Flag
                                                                                                                                                                                                                                                                                                                                                                                                          "n"
                                                                                                                                                                                                                                                                                                                                                                                                          '["Name"]
                                                                                                                                                                                                                                                                                                                                                                                                          "Project name"
                                                                                                                                                                                                                                                                                                                                                                                                          "New projects explanatory name"
                                                                                                                                                                                                                                                                                                                                                                                                          GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                        -> Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                             "Add new project and switch to it"
                                                                                                                                                                                                                                                                                                                                                                                                             ())
  Options.Declarative.$fIsCmd(->)0 @ "ID"
                                   @ (Options.Declarative.Flag
                                        "n"
                                        '["Name"]
                                        "Project name"
                                        "New projects explanatory name"
                                        GHC.Base.String
                                      -> Options.Declarative.Cmd
                                           "Add new project and switch to it" ())
                                   $dKnownSymbol
                                   $dIsCmd
  = Main.$s$fIsCmd(->)9
"SPEC/Main $fIsCmd(->)0_$cgetCmdHelp @ "DESCRIPTION" @ (Flag
                                                         "i"
                                                         '["ID"]
                                                         "Sprint id"
                                                         "Target Sprint Id"
                                                         (Def "-1" Int)
                                                       -> Cmd
                                                            "Add story to product backlog, Or designated sprint."
                                                            ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"

print id"
arget Sprint Id"
ptions.Declarative.Def

ypes.Int)
ptions.Declarative.Cmd
dd story to product backlog, Or designated sprint."

  Options.Declarative.$fIsCmd(->)0_$cgetCmdHelp @ "DESCRIPTION"
                                                @ (Options.Declarative.Flag
                                                     "i"
                                                     '["ID"]
                                                     "Sprint id"
                                                     "Target Sprint Id"
                                                     (Options.Declarative.Def "-1" GHC.Types.Int)
                                                   -> Options.Declarative.Cmd
                                                        "Add story to product backlog, Or designated sprint."
                                                        ())
                                                $dKnownSymbol
                                                $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetCmdHelp1
"SPEC/Main $fIsCmd(->)0_$cgetCmdHelp @ "DESCRIPTION" @ (Flag
                                                         "i"
                                                         '["ID"]
                                                         "Story id"
                                                         "Target Story Id"
                                                         Int
                                                       -> Flag
                                                            "p"
                                                            '["POINT"]
                                                            "Estimated work point"
                                                            "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                            Int
                                                       -> Cmd "Add task to active project" ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"

tory id"
arget Story Id"
ypes.Int
ptions.Declarative.Flag
p"

stimated work point"
stimated work point like 1, 2, 3, 5, 8 ..."
ypes.Int
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        -> Options.Declarative.Cmd
dd task to active project"

  Options.Declarative.$fIsCmd(->)0_$cgetCmdHelp @ "DESCRIPTION"
                                                @ (Options.Declarative.Flag
                                                     "i"
                                                     '["ID"]
                                                     "Story id"
                                                     "Target Story Id"
                                                     GHC.Types.Int
                                                   -> Options.Declarative.Flag
                                                        "p"
                                                        '["POINT"]
                                                        "Estimated work point"
                                                        "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                        GHC.Types.Int
                                                   -> Options.Declarative.Cmd
                                                        "Add task to active project" ())
                                                $dKnownSymbol
                                                $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetCmdHelp
"SPEC/Main $fIsCmd(->)0_$cgetOptDescr @ "DESCRIPTION" @ (Flag
                                                          "i"
                                                          '["ID"]
                                                          "Sprint id"
                                                          "Target Sprint Id"
                                                          (Def "-1" Int)
                                                        -> Cmd
                                                             "Add story to product backlog, Or designated sprint."
                                                             ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"

print id"
arget Sprint Id"
ptions.Declarative.Def

ypes.Int)
ptions.Declarative.Cmd
dd story to product backlog, Or designated sprint."

  Options.Declarative.$fIsCmd(->)0_$cgetOptDescr @ "DESCRIPTION"
                                                 @ (Options.Declarative.Flag
                                                      "i"
                                                      '["ID"]
                                                      "Sprint id"
                                                      "Target Sprint Id"
                                                      (Options.Declarative.Def "-1" GHC.Types.Int)
                                                    -> Options.Declarative.Cmd
                                                         "Add story to product backlog, Or designated sprint."
                                                         ())
                                                 $dKnownSymbol
                                                 $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetOptDescr1
"SPEC/Main $fIsCmd(->)0_$cgetOptDescr @ "DESCRIPTION" @ (Flag
                                                          "i"
                                                          '["ID"]
                                                          "Story id"
                                                          "Target Story Id"
                                                          Int
                                                        -> Flag
                                                             "p"
                                                             '["POINT"]
                                                             "Estimated work point"
                                                             "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                             Int
                                                        -> Cmd "Add task to active project" ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       '["ID"]
tory id"
arget Story Id"
ypes.Int
ptions.Declarative.Flag
p"

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          "Estimated work point"
stimated work point like 1, 2, 3, 5, 8 ..."
ypes.Int
ptions.Declarative.Cmd
dd task to active project"

  Options.Declarative.$fIsCmd(->)0_$cgetOptDescr @ "DESCRIPTION"
                                                 @ (Options.Declarative.Flag
                                                      "i"
                                                      '["ID"]
                                                      "Story id"
                                                      "Target Story Id"
                                                      GHC.Types.Int
                                                    -> Options.Declarative.Flag
                                                         "p"
                                                         '["POINT"]
                                                         "Estimated work point"
                                                         "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                         GHC.Types.Int
                                                    -> Options.Declarative.Cmd
                                                         "Add task to active project" ())
                                                 $dKnownSymbol
                                                 $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetOptDescr
"SPEC/Main $fIsCmd(->)0_$cgetUsageFooter @ "DESCRIPTION" @ (Flag
                                                             "i"
                                                             '["ID"]
                                                             "Sprint id"
                                                             "Target Sprint Id"
                                                             (Def "-1" Int)
                                                           -> Cmd
                                                                "Add story to product backlog, Or designated sprint."
                                                                ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"

print id"
arget Sprint Id"
ptions.Declarative.Def

ypes.Int)
ptions.Declarative.Cmd
dd story to product backlog, Or designated sprint."

  Options.Declarative.$fIsCmd(->)0_$cgetUsageFooter @ "DESCRIPTION"
                                                    @ (Options.Declarative.Flag
                                                         "i"
                                                         '["ID"]
                                                         "Sprint id"
                                                         "Target Sprint Id"
                                                         (Options.Declarative.Def
                                                            "-1" GHC.Types.Int)
                                                       -> Options.Declarative.Cmd
                                                            "Add story to product backlog, Or designated sprint."
                                                            ())
                                                    $dKnownSymbol
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetUsageFooter1
"SPEC/Main $fIsCmd(->)0_$cgetUsageFooter @ "DESCRIPTION" @ (Flag
                                                             "i"
                                                             '["ID"]
                                                             "Story id"
                                                             "Target Story Id"
                                                             Int
                                                           -> Flag
                                                                "p"
                                                                '["POINT"]
                                                                "Estimated work point"
                                                                "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                                Int
                                                           -> Cmd "Add task to active project" ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol

dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
i"

tory id"
arget Story Id"
ypes.Int
ptions.Declarative.Flag
p"

stimated work point"
stimated work point like 1, 2, 3, 5, 8 ..."
ypes.Int
ptions.Declarative.Cmd
dd task to active project"

  Options.Declarative.$fIsCmd(->)0_$cgetUsageFooter @ "DESCRIPTION"
                                                    @ (Options.Declarative.Flag
                                                         "i"
                                                         '["ID"]
                                                         "Story id"
                                                         "Target Story Id"
                                                         GHC.Types.Int
                                                       -> Options.Declarative.Flag
                                                            "p"
                                                            '["POINT"]
                                                            "Estimated work point"
                                                            "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                            GHC.Types.Int
                                                       -> Options.Declarative.Cmd
                                                            "Add task to active project" ())
                                                    $dKnownSymbol
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)0_$cgetUsageFooter
"SPEC/Main $fIsCmd(->)1 @ "f" @ '["ID-FROM"] @ "Sprint id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                     "t"
                                                                                                     '["ID-TO"]
                                                                                                     "Sprint id To"
                                                                                                     "Target Story Id : To"
                                                                                                     Int
                                                                                                   -> Cmd
                                                                                                        "Swap sprint of active project"
                                                                                                        ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
print id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

print id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
wap sprint of active project"

  Options.Declarative.$fIsCmd(->)1 @ "f"
                                   @ '["ID-FROM"]
                                   @ "Sprint id From"
                                   @ "Target Story Id : From"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Flag
                                        "t"
                                        '["ID-TO"]
                                        "Sprint id To"
                                        "Target Story Id : To"
                                        GHC.Types.Int
                                      -> Options.Declarative.Cmd "Swap sprint of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)76
"SPEC/Main $fIsCmd(->)1 @ "f" @ '["ID-FROM"] @ "Story id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                    "t"
                                                                                                    '["ID-TO"]
                                                                                                    "Story id To"
                                                                                                    "Target Story Id : To"
                                                                                                    Int
                                                                                                  -> Cmd
                                                                                                       "Swap story of active project"
                                                                                                       ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
tory id From"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "t"

tory id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
wap story of active project"

  Options.Declarative.$fIsCmd(->)1 @ "f"
                                   @ '["ID-FROM"]
                                   @ "Story id From"
                                   @ "Target Story Id : From"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Flag
                                        "t"
                                        '["ID-TO"]
                                        "Story id To"
                                        "Target Story Id : To"
                                        GHC.Types.Int
                                      -> Options.Declarative.Cmd "Swap story of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)92
"SPEC/Main $fIsCmd(->)1 @ "f" @ '["ID-FROM"] @ "Task id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                   "t"
                                                                                                   '["ID-TO"]
                                                                                                   "Task id To"
                                                                                                   "Target Story Id : To"
                                                                                                   Int
                                                                                                 -> Cmd
                                                                                                      "Swap task of active project"
                                                                                                      ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
ask id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "Target Story Id : From"
dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Types.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "Task id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
wap task of active project"

  Options.Declarative.$fIsCmd(->)1 @ "f"
                                   @ '["ID-FROM"]
                                   @ "Task id From"
                                   @ "Target Story Id : From"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Flag
                                        "t"
                                        '["ID-TO"]
                                        "Task id To"
                                        "Target Story Id : To"
                                        GHC.Types.Int
                                      -> Options.Declarative.Cmd "Swap task of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)101
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Project id" @ "Switch project id" @ (Def
                                                                                 "" String) @ (Cmd
                                                                                                 "Switch other project. Or list all projects when project id is abbraviated."
                                                                                                 ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              "i"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dKnownSymbols :: Options.Declarative.KnownSymbols

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "Project id"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "Switch project id"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (Options.Declarative.Def
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ""
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             GHC.Base.String)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "Switch other project. Or list all projects when project id is abbraviated."
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Project id"
                                   @ "Switch project id"
                                   @ (Options.Declarative.Def "" GHC.Base.String)
                                   @ (Options.Declarative.Cmd
                                        "Switch other project. Or list all projects when project id is abbraviated."
                                        ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)114
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Sprint id" @ "Target Sprint Id" @ (Def
                                                                               "-1" Int) @ (Cmd
                                                                                              "Add story to product backlog, Or designated sprint."
                                                                                              ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "i"
                                                                                                                                                                                                                                                                                                                                                                                                                                                         $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             '["ID"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                         $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             "Sprint id"
                                                                                                                                                                                                                                                                                                                                                                                                                                                         $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             "Target Sprint Id"
                                                                                                                                                                                                                                                                                                                                                                                                                                                         $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        (Options.Declarative.Def
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "-1"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           GHC.Types.Int)
                                                                                                                                                                                                                                                                                                                                                                                                                                                         $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         "Add story to product backlog, Or designated sprint."
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Sprint id"
                                   @ "Target Sprint Id"
                                   @ (Options.Declarative.Def "-1" GHC.Types.Int)
                                   @ (Options.Declarative.Cmd
                                        "Add story to product backlog, Or designated sprint." ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)4
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Sprint id" @ "Target Sprint Id" @ (Def
                                                                               "-1" Int) @ (Flag
                                                                                              "s"
                                                                                              '["SIMPLE"]
                                                                                              "show simple"
                                                                                              "Show simple mode when sprint id is designated."
                                                                                              Bool
                                                                                            -> Cmd
                                                                                                 "List all sprint, Or show sprints detail when project id is abbraviated."
                                                                                                 ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
i"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
print id"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Sprint Id"
dArgRead :: Options.Declarative.ArgRead
ptions.Declarative.Def

ypes.Int)
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
s"

show simple"
how simple mode when sprint id is designated."
ypes.Bool
ptions.Declarative.Cmd
ist all sprint, Or show sprints detail when project id is abbraviated."

  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Sprint id"
                                   @ "Target Sprint Id"
                                   @ (Options.Declarative.Def "-1" GHC.Types.Int)
                                   @ (Options.Declarative.Flag
                                        "s"
                                        '["SIMPLE"]
                                        "show simple"
                                        "Show simple mode when sprint id is designated."
                                        GHC.Types.Bool
                                      -> Options.Declarative.Cmd
                                           "List all sprint, Or show sprints detail when project id is abbraviated."
                                           ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)174
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Sprint id" @ "Target Sprint Id" @ Int @ (Cmd
                                                                                     "Delete sprint from active project"
                                                                                     ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                              "i"
                                                                                                                                                                                                                                                                                                                           $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                               '["ID"]
                                                                                                                                                                                                                                                                                                                           $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                               "Sprint id"
                                                                                                                                                                                                                                                                                                                           $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                               "Target Sprint Id"
                                                                                                                                                                                                                                                                                                                           $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                          GHC.Types.Int
                                                                                                                                                                                                                                                                                                                           $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                        (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                           "Delete sprint from active project"
                                                                                                                                                                                                                                                                                                                                           ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Sprint id"
                                   @ "Target Sprint Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd
                                        "Delete sprint from active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)123
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Sprint id" @ "Target Sprint Id" @ Int @ (Cmd
                                                                                     "Update sprint of active project"
                                                                                     ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                            "i"
                                                                                                                                                                                                                                                                                                                         $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                             '["ID"]
                                                                                                                                                                                                                                                                                                                         $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                             "Sprint id"
                                                                                                                                                                                                                                                                                                                         $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                             "Target Sprint Id"
                                                                                                                                                                                                                                                                                                                         $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                        GHC.Types.Int
                                                                                                                                                                                                                                                                                                                         $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                      (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                         "Update sprint of active project"
                                                                                                                                                                                                                                                                                                                                         ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Sprint id"
                                   @ "Target Sprint Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Update sprint of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)131
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Cmd
                                                                                   "Delete sprint from active project"
                                                                                   ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                        "i"
                                                                                                                                                                                                                                                                                                                     $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                         '["ID"]
                                                                                                                                                                                                                                                                                                                     $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                         "Story id"
                                                                                                                                                                                                                                                                                                                     $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                         "Target Story Id"
                                                                                                                                                                                                                                                                                                                     $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                    GHC.Types.Int
                                                                                                                                                                                                                                                                                                                     $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                  (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                     "Delete sprint from active project"
                                                                                                                                                                                                                                                                                                                                     ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Story id"
                                   @ "Target Story Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd
                                        "Delete sprint from active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)142
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Cmd
                                                                                   "Show target story information and all tasks"
                                                                                   ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                  "i"
                                                                                                                                                                                                                                                                                                                               $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                   '["ID"]
                                                                                                                                                                                                                                                                                                                               $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                   "Story id"
                                                                                                                                                                                                                                                                                                                               $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                   "Target Story Id"
                                                                                                                                                                                                                                                                                                                               $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                              GHC.Types.Int
                                                                                                                                                                                                                                                                                                                               $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                            (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                               "Show target story information and all tasks"
                                                                                                                                                                                                                                                                                                                                               ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Story id"
                                   @ "Target Story Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd
                                        "Show target story information and all tasks" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)145
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Cmd
                                                                                   "Update story of active project"
                                                                                   ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                     "i"
                                                                                                                                                                                                                                                                                                                  $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                      '["ID"]
                                                                                                                                                                                                                                                                                                                  $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                      "Story id"
                                                                                                                                                                                                                                                                                                                  $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                      "Target Story Id"
                                                                                                                                                                                                                                                                                                                  $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                 GHC.Types.Int
                                                                                                                                                                                                                                                                                                                  $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                               (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                  "Update story of active project"
                                                                                                                                                                                                                                                                                                                                  ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Story id"
                                   @ "Target Story Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Update story of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)151
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Flag
                                                                                   "p"
                                                                                   '["POINT"]
                                                                                   "Estimated work point"
                                                                                   "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                                                   Int
                                                                                 -> Cmd
                                                                                      "Add task to active project"
                                                                                      ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
i"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
tory id"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id"
dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Types.Int
dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 (Options.Declarative.Flag
p"

stimated work point"
stimated work point like 1, 2, 3, 5, 8 ..."
ypes.Int
ptions.Declarative.Cmd
dd task to active project"

  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Story id"
                                   @ "Target Story Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Flag
                                        "p"
                                        '["POINT"]
                                        "Estimated work point"
                                        "Estimated work point like 1, 2, 3, 5, 8 ..."
                                        GHC.Types.Int
                                      -> Options.Declarative.Cmd "Add task to active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)2
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Flag
                                                                                   "t"
                                                                                   '["SPRINT-ID"]
                                                                                   "Sprint id"
                                                                                   "Destination Srint Id"
                                                                                   (Def "-1" Int)
                                                                                 -> Cmd
                                                                                      "Move story of active project"
                                                                                      ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
i"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
tory id"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

print id"
estination Srint Id"
ptions.Declarative.Def

ypes.Int)
ptions.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "Move story of active project"

  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Story id"
                                   @ "Target Story Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Flag
                                        "t"
                                        '["SPRINT-ID"]
                                        "Sprint id"
                                        "Destination Srint Id"
                                        (Options.Declarative.Def "-1" GHC.Types.Int)
                                      -> Options.Declarative.Cmd "Move story of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)183
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Flag
                                                                                   "t"
                                                                                   '["STORY-ID"]
                                                                                   "Story id"
                                                                                   "Destination Story Id"
                                                                                   Int
                                                                                 -> Cmd
                                                                                      "Move story of active project"
                                                                                      ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
i"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          "Story id"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (Options.Declarative.Flag
t"

tory id"
estination Story Id"
ypes.Int
ptions.Declarative.Cmd
ove story of active project"

  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Story id"
                                   @ "Target Story Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Flag
                                        "t"
                                        '["STORY-ID"]
                                        "Story id"
                                        "Destination Story Id"
                                        GHC.Types.Int
                                      -> Options.Declarative.Cmd "Move story of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)139
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Task id" @ "Target Task Id" @ Int @ (Cmd
                                                                                 "Delete sprint from active project"
                                                                                 ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                  "i"
                                                                                                                                                                                                                                                                                                               $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                   '["ID"]
                                                                                                                                                                                                                                                                                                               $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                   "Task id"
                                                                                                                                                                                                                                                                                                               $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                   "Target Task Id"
                                                                                                                                                                                                                                                                                                               $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                              GHC.Types.Int
                                                                                                                                                                                                                                                                                                               $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                            (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                               "Delete sprint from active project"
                                                                                                                                                                                                                                                                                                                               ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Task id"
                                   @ "Target Task Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd
                                        "Delete sprint from active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)159
"SPEC/Main $fIsCmd(->)1 @ "i" @ '["ID"] @ "Task id" @ "Target Task Id" @ Int @ (Cmd
                                                                                 "Update task of active project"
                                                                                 ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                              "i"
                                                                                                                                                                                                                                                                                                           $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                               '["ID"]
                                                                                                                                                                                                                                                                                                           $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                               "Task id"
                                                                                                                                                                                                                                                                                                           $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                               "Target Task Id"
                                                                                                                                                                                                                                                                                                           $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                          GHC.Types.Int
                                                                                                                                                                                                                                                                                                           $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                        (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                           "Update task of active project"
                                                                                                                                                                                                                                                                                                                           ())
  Options.Declarative.$fIsCmd(->)1 @ "i"
                                   @ '["ID"]
                                   @ "Task id"
                                   @ "Target Task Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Update task of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)166
"SPEC/Main $fIsCmd(->)1 @ "n" @ '["Name"] @ "Project name" @ "New projects explanatory name" @ [Char] @ (Cmd
                                                                                                          "Add new project and switch to it"
                                                                                                          ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                            "n"
                                                                                                                                                                                                                                                                                                                                                                                         $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                                                             '["Name"]
                                                                                                                                                                                                                                                                                                                                                                                         $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                             "Project name"
                                                                                                                                                                                                                                                                                                                                                                                         $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                             "New projects explanatory name"
                                                                                                                                                                                                                                                                                                                                                                                         $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                        [GHC.Types.Char]
                                                                                                                                                                                                                                                                                                                                                                                         $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                      (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                         "Add new project and switch to it"
                                                                                                                                                                                                                                                                                                                                                                                                         ())
  Options.Declarative.$fIsCmd(->)1 @ "n"
                                   @ '["Name"]
                                   @ "Project name"
                                   @ "New projects explanatory name"
                                   @ [GHC.Types.Char]
                                   @ (Options.Declarative.Cmd "Add new project and switch to it" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1
"SPEC/Main $fIsCmd(->)1 @ "p" @ '["POINT"] @ "Estimated work point" @ "Estimated work point like 1, 2, 3, 5, 8 ..." @ Int @ (Cmd
                                                                                                                              "Add task to active project"
                                                                                                                              ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  "p"
                                                                                                                                                                                                                                                                                                                                                                                                                                               $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   '["POINT"]
                                                                                                                                                                                                                                                                                                                                                                                                                                               $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "Estimated work point"
                                                                                                                                                                                                                                                                                                                                                                                                                                               $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                                                                                                                                                                                                                                                                                                                                                                                                               $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                              GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                                                                                                                               $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                            (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                               "Add task to active project"
                                                                                                                                                                                                                                                                                                                                                                                                                                                               ())
  Options.Declarative.$fIsCmd(->)1 @ "p"
                                   @ '["POINT"]
                                   @ "Estimated work point"
                                   @ "Estimated work point like 1, 2, 3, 5, 8 ..."
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Add task to active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)3
"SPEC/Main $fIsCmd(->)1 @ "s" @ '["SIMPLE"] @ "show simple" @ "Show simple mode when sprint id is designated." @ Bool @ (Cmd
                                                                                                                          "List all sprint, Or show sprints detail when project id is abbraviated."
                                                                                                                          ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "s"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    '["SIMPLE"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "show simple"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "Show simple mode when sprint id is designated."
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               GHC.Types.Bool
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "List all sprint, Or show sprints detail when project id is abbraviated."
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ())
  Options.Declarative.$fIsCmd(->)1 @ "s"
                                   @ '["SIMPLE"]
                                   @ "show simple"
                                   @ "Show simple mode when sprint id is designated."
                                   @ GHC.Types.Bool
                                   @ (Options.Declarative.Cmd
                                        "List all sprint, Or show sprints detail when project id is abbraviated."
                                        ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)53
"SPEC/Main $fIsCmd(->)1 @ "t" @ '["ID-TO"] @ "Sprint id To" @ "Target Story Id : To" @ Int @ (Cmd
                                                                                               "Swap sprint of active project"
                                                                                               ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                        "t"
                                                                                                                                                                                                                                                                                                                                                     $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                         '["ID-TO"]
                                                                                                                                                                                                                                                                                                                                                     $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                         "Sprint id To"
                                                                                                                                                                                                                                                                                                                                                     $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                         "Target Story Id : To"
                                                                                                                                                                                                                                                                                                                                                     $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                    GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                                     $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                  (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                     "Swap sprint of active project"
                                                                                                                                                                                                                                                                                                                                                                     ())
  Options.Declarative.$fIsCmd(->)1 @ "t"
                                   @ '["ID-TO"]
                                   @ "Sprint id To"
                                   @ "Target Story Id : To"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Swap sprint of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)62
"SPEC/Main $fIsCmd(->)1 @ "t" @ '["ID-TO"] @ "Story id To" @ "Target Story Id : To" @ Int @ (Cmd
                                                                                              "Swap story of active project"
                                                                                              ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                    "t"
                                                                                                                                                                                                                                                                                                                                                 $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                     '["ID-TO"]
                                                                                                                                                                                                                                                                                                                                                 $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                     "Story id To"
                                                                                                                                                                                                                                                                                                                                                 $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                     "Target Story Id : To"
                                                                                                                                                                                                                                                                                                                                                 $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                                 $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                              (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                 "Swap story of active project"
                                                                                                                                                                                                                                                                                                                                                                 ())
  Options.Declarative.$fIsCmd(->)1 @ "t"
                                   @ '["ID-TO"]
                                   @ "Story id To"
                                   @ "Target Story Id : To"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Swap story of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)85
"SPEC/Main $fIsCmd(->)1 @ "t" @ '["ID-TO"] @ "Task id To" @ "Target Story Id : To" @ Int @ (Cmd
                                                                                             "Swap task of active project"
                                                                                             ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                "t"
                                                                                                                                                                                                                                                                                                                                             $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                 '["ID-TO"]
                                                                                                                                                                                                                                                                                                                                             $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                 "Task id To"
                                                                                                                                                                                                                                                                                                                                             $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                 "Target Story Id : To"
                                                                                                                                                                                                                                                                                                                                             $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                            GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                             $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                          (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                             "Swap task of active project"
                                                                                                                                                                                                                                                                                                                                                             ())
  Options.Declarative.$fIsCmd(->)1 @ "t"
                                   @ '["ID-TO"]
                                   @ "Task id To"
                                   @ "Target Story Id : To"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Swap task of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)94
"SPEC/Main $fIsCmd(->)1 @ "t" @ '["SPRINT-ID"] @ "Sprint id" @ "Destination Srint Id" @ (Def
                                                                                          "-1"
                                                                                          Int) @ (Cmd
                                                                                                    "Move story of active project"
                                                                                                    ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
t"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              $dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
print id"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
estination Srint Id"
dArgRead :: Options.Declarative.ArgRead
ptions.Declarative.Def

ypes.Int)
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Cmd
ove story of active project"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ())
  Options.Declarative.$fIsCmd(->)1 @ "t"
                                   @ '["SPRINT-ID"]
                                   @ "Sprint id"
                                   @ "Destination Srint Id"
                                   @ (Options.Declarative.Def "-1" GHC.Types.Int)
                                   @ (Options.Declarative.Cmd "Move story of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)177
"SPEC/Main $fIsCmd(->)1 @ "t" @ '["STORY-ID"] @ "Story id" @ "Destination Story Id" @ Int @ (Cmd
                                                                                              "Move story of active project"
                                                                                              ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                    "t"
                                                                                                                                                                                                                                                                                                                                                 $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                     '["STORY-ID"]
                                                                                                                                                                                                                                                                                                                                                 $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                     "Story id"
                                                                                                                                                                                                                                                                                                                                                 $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                     "Destination Story Id"
                                                                                                                                                                                                                                                                                                                                                 $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                                 $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                              (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                 "Move story of active project"
                                                                                                                                                                                                                                                                                                                                                                 ())
  Options.Declarative.$fIsCmd(->)1 @ "t"
                                   @ '["STORY-ID"]
                                   @ "Story id"
                                   @ "Destination Story Id"
                                   @ GHC.Types.Int
                                   @ (Options.Declarative.Cmd "Move story of active project" ())
                                   $dKnownSymbol
                                   $dKnownSymbols
                                   $dKnownSymbol1
                                   $dKnownSymbol2
                                   $dArgRead
                                   $dIsCmd
  = Main.$s$fIsCmd(->)103
"SPEC/Main $fIsCmd(->)1_$cgetCmdHelp @ "f" @ '["ID-FROM"] @ "Sprint id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                                  "t"
                                                                                                                  '["ID-TO"]
                                                                                                                  "Sprint id To"
                                                                                                                  "Target Story Id : To"
                                                                                                                  Int
                                                                                                                -> Cmd
                                                                                                                     "Swap sprint of active project"
                                                                                                                     ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
print id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

print id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
wap sprint of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetCmdHelp @ "f"
                                                @ '["ID-FROM"]
                                                @ "Sprint id From"
                                                @ "Target Story Id : From"
                                                @ GHC.Types.Int
                                                @ (Options.Declarative.Flag
                                                     "t"
                                                     '["ID-TO"]
                                                     "Sprint id To"
                                                     "Target Story Id : To"
                                                     GHC.Types.Int
                                                   -> Options.Declarative.Cmd
                                                        "Swap sprint of active project" ())
                                                $dKnownSymbol
                                                $dKnownSymbols
                                                $dKnownSymbol1
                                                $dKnownSymbol2
                                                $dArgRead
                                                $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp1
"SPEC/Main $fIsCmd(->)1_$cgetCmdHelp @ "f" @ '["ID-FROM"] @ "Story id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                                 "t"
                                                                                                                 '["ID-TO"]
                                                                                                                 "Story id To"
                                                                                                                 "Target Story Id : To"
                                                                                                                 Int
                                                                                                               -> Cmd
                                                                                                                    "Swap story of active project"
                                                                                                                    ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
tory id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "Story id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "Swap story of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetCmdHelp @ "f"
                                                @ '["ID-FROM"]
                                                @ "Story id From"
                                                @ "Target Story Id : From"
                                                @ GHC.Types.Int
                                                @ (Options.Declarative.Flag
                                                     "t"
                                                     '["ID-TO"]
                                                     "Story id To"
                                                     "Target Story Id : To"
                                                     GHC.Types.Int
                                                   -> Options.Declarative.Cmd
                                                        "Swap story of active project" ())
                                                $dKnownSymbol
                                                $dKnownSymbols
                                                $dKnownSymbol1
                                                $dKnownSymbol2
                                                $dArgRead
                                                $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp2
"SPEC/Main $fIsCmd(->)1_$cgetCmdHelp @ "f" @ '["ID-FROM"] @ "Task id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                                "t"
                                                                                                                '["ID-TO"]
                                                                                                                "Task id To"
                                                                                                                "Target Story Id : To"
                                                                                                                Int
                                                                                                              -> Cmd
                                                                                                                   "Swap task of active project"
                                                                                                                   ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         $dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
ask id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

ask id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
wap task of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetCmdHelp @ "f"
                                                @ '["ID-FROM"]
                                                @ "Task id From"
                                                @ "Target Story Id : From"
                                                @ GHC.Types.Int
                                                @ (Options.Declarative.Flag
                                                     "t"
                                                     '["ID-TO"]
                                                     "Task id To"
                                                     "Target Story Id : To"
                                                     GHC.Types.Int
                                                   -> Options.Declarative.Cmd
                                                        "Swap task of active project" ())
                                                $dKnownSymbol
                                                $dKnownSymbols
                                                $dKnownSymbol1
                                                $dKnownSymbol2
                                                $dArgRead
                                                $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp3
"SPEC/Main $fIsCmd(->)1_$cgetCmdHelp @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Flag
                                                                                                "t"
                                                                                                '["SPRINT-ID"]
                                                                                                "Sprint id"
                                                                                                "Destination Srint Id"
                                                                                                (Def
                                                                                                   "-1"
                                                                                                   Int)
                                                                                              -> Cmd
                                                                                                   "Move story of active project"
                                                                                                   ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
i"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
tory id"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              "Sprint id"
estination Srint Id"
ptions.Declarative.Def

ypes.Int)
ptions.Declarative.Cmd
ove story of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetCmdHelp @ "i"
                                                @ '["ID"]
                                                @ "Story id"
                                                @ "Target Story Id"
                                                @ GHC.Types.Int
                                                @ (Options.Declarative.Flag
                                                     "t"
                                                     '["SPRINT-ID"]
                                                     "Sprint id"
                                                     "Destination Srint Id"
                                                     (Options.Declarative.Def "-1" GHC.Types.Int)
                                                   -> Options.Declarative.Cmd
                                                        "Move story of active project" ())
                                                $dKnownSymbol
                                                $dKnownSymbols
                                                $dKnownSymbol1
                                                $dKnownSymbol2
                                                $dArgRead
                                                $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp4
"SPEC/Main $fIsCmd(->)1_$cgetCmdHelp @ "n" @ '["Name"] @ "Project name" @ "New projects explanatory name" @ [Char] @ (Cmd
                                                                                                                       "Add new project and switch to it"
                                                                                                                       ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                   "n"
                                                                                                                                                                                                                                                                                                                                                                                                                                $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                                                                                                    '["Name"]
                                                                                                                                                                                                                                                                                                                                                                                                                                $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "Project name"
                                                                                                                                                                                                                                                                                                                                                                                                                                $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "New projects explanatory name"
                                                                                                                                                                                                                                                                                                                                                                                                                                $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                               [GHC.Types.Char]
                                                                                                                                                                                                                                                                                                                                                                                                                                $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                             (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                "Add new project and switch to it"
                                                                                                                                                                                                                                                                                                                                                                                                                                                ())
  Options.Declarative.$fIsCmd(->)1_$cgetCmdHelp @ "n"
                                                @ '["Name"]
                                                @ "Project name"
                                                @ "New projects explanatory name"
                                                @ [GHC.Types.Char]
                                                @ (Options.Declarative.Cmd
                                                     "Add new project and switch to it" ())
                                                $dKnownSymbol
                                                $dKnownSymbols
                                                $dKnownSymbol1
                                                $dKnownSymbol2
                                                $dArgRead
                                                $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetCmdHelp
"SPEC/Main $fIsCmd(->)1_$cgetCmdHelp @ "p" @ '["POINT"] @ "Estimated work point" @ "Estimated work point like 1, 2, 3, 5, 8 ..." @ Int @ (Cmd
                                                                                                                                           "Add task to active project"
                                                                                                                                           ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         "p"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          '["POINT"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          "Estimated work point"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "Add task to active project"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ())
  Options.Declarative.$fIsCmd(->)1_$cgetCmdHelp @ "p"
                                                @ '["POINT"]
                                                @ "Estimated work point"
                                                @ "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                @ GHC.Types.Int
                                                @ (Options.Declarative.Cmd
                                                     "Add task to active project" ())
                                                $dKnownSymbol
                                                $dKnownSymbols
                                                $dKnownSymbol1
                                                $dKnownSymbol2
                                                $dArgRead
                                                $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetCmdHelp1
"SPEC/Main $fIsCmd(->)1_$cgetCmdHelp @ "s" @ '["SIMPLE"] @ "show simple" @ "Show simple mode when sprint id is designated." @ Bool @ (Cmd
                                                                                                                                       "List all sprint, Or show sprints detail when project id is abbraviated."
                                                                                                                                       ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
s"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
show simple"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
how simple mode when sprint id is designated."
dArgRead :: Options.Declarative.ArgRead
ypes.Bool
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Cmd
ist all sprint, Or show sprints detail when project id is abbraviated."

  Options.Declarative.$fIsCmd(->)1_$cgetCmdHelp @ "s"
                                                @ '["SIMPLE"]
                                                @ "show simple"
                                                @ "Show simple mode when sprint id is designated."
                                                @ GHC.Types.Bool
                                                @ (Options.Declarative.Cmd
                                                     "List all sprint, Or show sprints detail when project id is abbraviated."
                                                     ())
                                                $dKnownSymbol
                                                $dKnownSymbols
                                                $dKnownSymbol1
                                                $dKnownSymbol2
                                                $dArgRead
                                                $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetCmdHelp
"SPEC/Main $fIsCmd(->)1_$cgetUsageFooter @ "f" @ '["ID-FROM"] @ "Sprint id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                                      "t"
                                                                                                                      '["ID-TO"]
                                                                                                                      "Sprint id To"
                                                                                                                      "Target Story Id : To"
                                                                                                                      Int
                                                                                                                    -> Cmd
                                                                                                                         "Swap sprint of active project"
                                                                                                                         ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
print id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

print id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
wap sprint of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetUsageFooter @ "f"
                                                    @ '["ID-FROM"]
                                                    @ "Sprint id From"
                                                    @ "Target Story Id : From"
                                                    @ GHC.Types.Int
                                                    @ (Options.Declarative.Flag
                                                         "t"
                                                         '["ID-TO"]
                                                         "Sprint id To"
                                                         "Target Story Id : To"
                                                         GHC.Types.Int
                                                       -> Options.Declarative.Cmd
                                                            "Swap sprint of active project" ())
                                                    $dKnownSymbol
                                                    $dKnownSymbols
                                                    $dKnownSymbol1
                                                    $dKnownSymbol2
                                                    $dArgRead
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter1
"SPEC/Main $fIsCmd(->)1_$cgetUsageFooter @ "f" @ '["ID-FROM"] @ "Story id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                                     "t"
                                                                                                                     '["ID-TO"]
                                                                                                                     "Story id To"
                                                                                                                     "Target Story Id : To"
                                                                                                                     Int
                                                                                                                   -> Cmd
                                                                                                                        "Swap story of active project"
                                                                                                                        ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
tory id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GHC.Types.Int
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

tory id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
wap story of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetUsageFooter @ "f"
                                                    @ '["ID-FROM"]
                                                    @ "Story id From"
                                                    @ "Target Story Id : From"
                                                    @ GHC.Types.Int
                                                    @ (Options.Declarative.Flag
                                                         "t"
                                                         '["ID-TO"]
                                                         "Story id To"
                                                         "Target Story Id : To"
                                                         GHC.Types.Int
                                                       -> Options.Declarative.Cmd
                                                            "Swap story of active project" ())
                                                    $dKnownSymbol
                                                    $dKnownSymbols
                                                    $dKnownSymbol1
                                                    $dKnownSymbol2
                                                    $dArgRead
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter2
"SPEC/Main $fIsCmd(->)1_$cgetUsageFooter @ "f" @ '["ID-FROM"] @ "Task id From" @ "Target Story Id : From" @ Int @ (Flag
                                                                                                                    "t"
                                                                                                                    '["ID-TO"]
                                                                                                                    "Task id To"
                                                                                                                    "Target Story Id : To"
                                                                                                                    Int
                                                                                                                  -> Cmd
                                                                                                                       "Swap task of active project"
                                                                                                                       ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "f"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
ask id From"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id : From"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             $dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

ask id To"
arget Story Id : To"
ypes.Int
ptions.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "Swap task of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetUsageFooter @ "f"
                                                    @ '["ID-FROM"]
                                                    @ "Task id From"
                                                    @ "Target Story Id : From"
                                                    @ GHC.Types.Int
                                                    @ (Options.Declarative.Flag
                                                         "t"
                                                         '["ID-TO"]
                                                         "Task id To"
                                                         "Target Story Id : To"
                                                         GHC.Types.Int
                                                       -> Options.Declarative.Cmd
                                                            "Swap task of active project" ())
                                                    $dKnownSymbol
                                                    $dKnownSymbols
                                                    $dKnownSymbol1
                                                    $dKnownSymbol2
                                                    $dArgRead
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter3
"SPEC/Main $fIsCmd(->)1_$cgetUsageFooter @ "i" @ '["ID"] @ "Story id" @ "Target Story Id" @ Int @ (Flag
                                                                                                    "t"
                                                                                                    '["SPRINT-ID"]
                                                                                                    "Sprint id"
                                                                                                    "Destination Srint Id"
                                                                                                    (Def
                                                                                                       "-1"
                                                                                                       Int)
                                                                                                  -> Cmd
                                                                                                       "Move story of active project"
                                                                                                       ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
i"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
tory id"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
arget Story Id"
dArgRead :: Options.Declarative.ArgRead
ypes.Int
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          $dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Flag
t"

print id"
estination Srint Id"
ptions.Declarative.Def
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             "-1"
ypes.Int)
ptions.Declarative.Cmd
ove story of active project"

  Options.Declarative.$fIsCmd(->)1_$cgetUsageFooter @ "i"
                                                    @ '["ID"]
                                                    @ "Story id"
                                                    @ "Target Story Id"
                                                    @ GHC.Types.Int
                                                    @ (Options.Declarative.Flag
                                                         "t"
                                                         '["SPRINT-ID"]
                                                         "Sprint id"
                                                         "Destination Srint Id"
                                                         (Options.Declarative.Def
                                                            "-1" GHC.Types.Int)
                                                       -> Options.Declarative.Cmd
                                                            "Move story of active project" ())
                                                    $dKnownSymbol
                                                    $dKnownSymbols
                                                    $dKnownSymbol1
                                                    $dKnownSymbol2
                                                    $dArgRead
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter4
"SPEC/Main $fIsCmd(->)1_$cgetUsageFooter @ "n" @ '["Name"] @ "Project name" @ "New projects explanatory name" @ [Char] @ (Cmd
                                                                                                                           "Add new project and switch to it"
                                                                                                                           ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                               "n"
                                                                                                                                                                                                                                                                                                                                                                                                                                            $dKnownSymbols :: Options.Declarative.KnownSymbols
                                                                                                                                                                                                                                                                                                                                                                                                                                                                '["Name"]
                                                                                                                                                                                                                                                                                                                                                                                                                                            $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "Project name"
                                                                                                                                                                                                                                                                                                                                                                                                                                            $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "New projects explanatory name"
                                                                                                                                                                                                                                                                                                                                                                                                                                            $dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                           [GHC.Types.Char]
                                                                                                                                                                                                                                                                                                                                                                                                                                            $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                         (Options.Declarative.Cmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                            "Add new project and switch to it"
                                                                                                                                                                                                                                                                                                                                                                                                                                                            ())
  Options.Declarative.$fIsCmd(->)1_$cgetUsageFooter @ "n"
                                                    @ '["Name"]
                                                    @ "Project name"
                                                    @ "New projects explanatory name"
                                                    @ [GHC.Types.Char]
                                                    @ (Options.Declarative.Cmd
                                                         "Add new project and switch to it" ())
                                                    $dKnownSymbol
                                                    $dKnownSymbols
                                                    $dKnownSymbol1
                                                    $dKnownSymbol2
                                                    $dArgRead
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter
"SPEC/Main $fIsCmd(->)1_$cgetUsageFooter @ "p" @ '["POINT"] @ "Estimated work point" @ "Estimated work point like 1, 2, 3, 5, 8 ..." @ Int @ (Cmd
                                                                                                                                               "Add task to active project"
                                                                                                                                               ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
p"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  $dKnownSymbols :: Options.Declarative.KnownSymbols

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  $dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
stimated work point"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  $dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
stimated work point like 1, 2, 3, 5, 8 ..."
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  $dArgRead :: Options.Declarative.ArgRead
ypes.Int
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  $dIsCmd :: Options.Declarative.IsCmd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               (Options.Declarative.Cmd
dd task to active project"

  Options.Declarative.$fIsCmd(->)1_$cgetUsageFooter @ "p"
                                                    @ '["POINT"]
                                                    @ "Estimated work point"
                                                    @ "Estimated work point like 1, 2, 3, 5, 8 ..."
                                                    @ GHC.Types.Int
                                                    @ (Options.Declarative.Cmd
                                                         "Add task to active project" ())
                                                    $dKnownSymbol
                                                    $dKnownSymbols
                                                    $dKnownSymbol1
                                                    $dKnownSymbol2
                                                    $dArgRead
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)0_$s$fIsCmd(->)1_$cgetUsageFooter1
"SPEC/Main $fIsCmd(->)1_$cgetUsageFooter @ "s" @ '["SIMPLE"] @ "show simple" @ "Show simple mode when sprint id is designated." @ Bool @ (Cmd
                                                                                                                                           "List all sprint, Or show sprints detail when project id is abbraviated."
                                                                                                                                           ())" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
s"
dKnownSymbols :: Options.Declarative.KnownSymbols

dKnownSymbol1 :: GHC.TypeLits.KnownSymbol
show simple"
dKnownSymbol2 :: GHC.TypeLits.KnownSymbol
how simple mode when sprint id is designated."
dArgRead :: Options.Declarative.ArgRead
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.Bool
dIsCmd :: Options.Declarative.IsCmd
ptions.Declarative.Cmd
ist all sprint, Or show sprints detail when project id is abbraviated."
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ())
  Options.Declarative.$fIsCmd(->)1_$cgetUsageFooter @ "s"
                                                    @ '["SIMPLE"]
                                                    @ "show simple"
                                                    @ "Show simple mode when sprint id is designated."
                                                    @ GHC.Types.Bool
                                                    @ (Options.Declarative.Cmd
                                                         "List all sprint, Or show sprints detail when project id is abbraviated."
                                                         ())
                                                    $dKnownSymbol
                                                    $dKnownSymbols
                                                    $dKnownSymbol1
                                                    $dKnownSymbol2
                                                    $dArgRead
                                                    $dIsCmd
  = Main.$s$fIsCmd(->)1_$s$fIsCmd(->)1_$cgetUsageFooter
"SPEC/Main $fIsCmdCmd @ "Add new project and switch to it"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                               "Add new project and switch to it"
  Options.Declarative.$fIsCmdCmd @ "Add new project and switch to it"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)0_$s$fIsCmdCmd1
"SPEC/Main $fIsCmdCmd @ "Add sprint to active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                           "Add sprint to active project"
  Options.Declarative.$fIsCmdCmd @ "Add sprint to active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)0_$s$fIsCmdCmd
"SPEC/Main $fIsCmdCmd @ "Add story to product backlog, Or designated sprint."" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                  "Add story to product backlog, Or designated sprint."
  Options.Declarative.$fIsCmdCmd @ "Add story to product backlog, Or designated sprint."
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)0_$s$fIsCmdCmd3
"SPEC/Main $fIsCmdCmd @ "Add task to active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                         "Add task to active project"
  Options.Declarative.$fIsCmdCmd @ "Add task to active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)0_$s$fIsCmdCmd2
"SPEC/Main $fIsCmdCmd @ "Delete sprint from active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                "Delete sprint from active project"
  Options.Declarative.$fIsCmdCmd @ "Delete sprint from active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd6
"SPEC/Main $fIsCmdCmd @ "List all pbl storys"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                  "List all pbl storys"
  Options.Declarative.$fIsCmdCmd @ "List all pbl storys"
                                 $dKnownSymbol
  = Main.$s$fIsCmdCmd4
"SPEC/Main $fIsCmdCmd @ "List all sprint, Or show sprints detail when project id is abbraviated."" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                      "List all sprint, Or show sprints detail when project id is abbraviated."
  Options.Declarative.$fIsCmdCmd @ "List all sprint, Or show sprints detail when project id is abbraviated."
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd
"SPEC/Main $fIsCmdCmd @ "Move story of active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                           "Move story of active project"
  Options.Declarative.$fIsCmdCmd @ "Move story of active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd4
"SPEC/Main $fIsCmdCmd @ "Show active projects information"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                               "Show active projects information"
  Options.Declarative.$fIsCmdCmd @ "Show active projects information"
                                 $dKnownSymbol
  = Main.$s$fIsCmdCmd
"SPEC/Main $fIsCmdCmd @ "Show target story information and all tasks"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Show target story information and all tasks"
  Options.Declarative.$fIsCmdCmd @ "Show target story information and all tasks"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd8
"SPEC/Main $fIsCmdCmd @ "Swap sprint of active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                            "Swap sprint of active project"
  Options.Declarative.$fIsCmdCmd @ "Swap sprint of active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd1
"SPEC/Main $fIsCmdCmd @ "Swap story of active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                           "Swap story of active project"
  Options.Declarative.$fIsCmdCmd @ "Swap story of active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd2
"SPEC/Main $fIsCmdCmd @ "Swap task of active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                          "Swap task of active project"
  Options.Declarative.$fIsCmdCmd @ "Swap task of active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd3
"SPEC/Main $fIsCmdCmd @ "Switch other project. Or list all projects when project id is abbraviated."" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                         "Switch other project. Or list all projects when project id is abbraviated."
  Options.Declarative.$fIsCmdCmd @ "Switch other project. Or list all projects when project id is abbraviated."
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd5
"SPEC/Main $fIsCmdCmd @ "Update sprint of active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                              "Update sprint of active project"
  Options.Declarative.$fIsCmdCmd @ "Update sprint of active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd7
"SPEC/Main $fIsCmdCmd @ "Update story of active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                             "Update story of active project"
  Options.Declarative.$fIsCmdCmd @ "Update story of active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd9
"SPEC/Main $fIsCmdCmd @ "Update task of active project"" [ALWAYS] forall $dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                            "Update task of active project"
  Options.Declarative.$fIsCmdCmd @ "Update task of active project"
                                 $dKnownSymbol
  = Main.$s$fIsCmd(->)1_$s$fIsCmdCmd10
"SPEC/Main get @ (Arg "DESCRIPTION" String)" [ALWAYS] forall tpl :: Options.Declarative.Option
                                                                      (Options.Declarative.Arg
                                                                         "DESCRIPTION"
                                                                         GHC.Base.String)
  Options.Declarative.get @ (Options.Declarative.Arg
                               "DESCRIPTION" GHC.Base.String)
                          tpl
  = (Options.Declarative.getArg @ "DESCRIPTION" @ [GHC.Types.Char])
      `cast`
    (<Options.Declarative.Arg "DESCRIPTION" [GHC.Types.Char]>_R
     ->_R Sub (Sym (Options.Declarative.TFCo:R:ValueArg[0]
                        <"DESCRIPTION">_N <[GHC.Types.Char]>_N)))
"SPEC/Main get @ (Arg "ID" String)" [ALWAYS] forall tpl :: Options.Declarative.Option
                                                             (Options.Declarative.Arg
                                                                "ID" GHC.Base.String)
  Options.Declarative.get @ (Options.Declarative.Arg
                               "ID" GHC.Base.String)
                          tpl
  = (Options.Declarative.getArg @ "ID" @ [GHC.Types.Char])
      `cast`
    (<Options.Declarative.Arg "ID" [GHC.Types.Char]>_R
     ->_R Sub (Sym (Options.Declarative.TFCo:R:ValueArg[0]
                        <"ID">_N <[GHC.Types.Char]>_N)))
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

